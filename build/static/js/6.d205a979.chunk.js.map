{"version":3,"sources":["../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/ProgressBar.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","app/modules/HCN/utils/GeneralDataForm.jsx","app/modules/HCN/components/HcnForm.jsx","app/modules/HCN/pages/CreateHcnPage.jsx","app/modules/HCN/HcnRoute.jsx"],"names":["_fadeStyles","fadeStyles","ENTERING","ENTERED","Fade","React","forwardRef","_ref","ref","className","children","props","_objectWithoutPropertiesLoose","handleEnter","useCallback","node","triggerBrowserReflow","onEnter","createElement","Transition","_extends","addEndListener","transitionEndListener","status","innerProps","cloneElement","classNames","defaultProps","in","timeout","mountOnEnter","unmountOnExit","appear","displayName","getPercentage","now","min","max","percentage","Math","round","renderProgressBar","_classNames","label","srOnly","striped","animated","style","variant","bsPrefix","role","width","ProgressBar","_ref2","isChild","useBootstrapPrefix","wrapperProps","func","index","Children","map","child","isValidElement","TabContainer","_useUncontrolled","useUncontrolled","activeKey","id","generateCustomChildId","generateChildId","onSelect","transition","useMemo","key","type","tabContext","getControlledId","getControllerId","TabContext","Provider","value","SelectableContext","TabContent","_ref$as","as","Component","decoratedBsPrefix","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","useTabContext","onEntering","onEntered","onExit","onExiting","onExited","_useTabContext$as","prefix","pane","Tab","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","GeneralDataForm","initialValues","ConsultationReason","Interpretation","Feedback","GeneralData_ValorationDate","GeneralData_HCNNumber","GeneralData_AdmissionDate","GeneralData_Room","GeneralData_Interpretation","GeneralData_Feedback","PatientData_FullName","PatientData_Birthdate","PatientData_Gender","PatientData_Sex","PatientData_EPS","PatientData_Telephone","PatientData_Occupation","PatientData_CivilStatus","PatientData_Interpretation","PatientData_Feedback","Anthropometry_Interpretation","Anthropometry_Feedback","Anthropometry_Weight_Actual","Anthropometry_Weight_Usual","Anthropometry_Weight_Reference","Anthropometry_Weight_ChangeWeight","Anthropometry_Weight_Interpretation","Anthropometry_Weight_Feedback","Anthropometry_TricipitalFold_Value","Anthropometry_TricipitalFold_Interpretation","Anthropometry_TricipitalFold_Feedback","Anthropometry_BrachialPerimeter_Value","Anthropometry_BrachialPerimeter_Interpretation","Anthropometry_BrachialPerimeter_Feedback","Anthropometry_AbdominalPerimeter_Value","Anthropometry_AbdominalPerimeter_Interpretation","Anthropometry_AbdominalPerimeter_Feedback","Anthropometry_SubscapularFold_Value","Anthropometry_SubscapularFold_Interpretation","Anthropometry_SubscapularFold_Feedback","Anthropometry_Height_Value","Anthropometry_Height_Interpretation","Anthropometry_Height_Feedback","Anthropometry_Structure_Value","Anthropometry_Structure_Interpretation","Anthropometry_Structure_Feedback","Anthropometry_BMI_Value","Anthropometry_BMI_Interpretation","Anthropometry_BMI_Feedback","Biochemistry_Interpretation","Biochemistry_Feedback","HcnForm","handleSubmit","handleReturn","useState","ans","getDisplayObject","displayFields","setDisplayFields","formik","Yup","shape","ValorationDate","required","useFormik","onSubmit","values","setStatus","setSubmitting","console","log","setTimeout","handleOpenFeedback","event","name","target","defaultActiveKey","Nav","Item","Link","htmlFor","getFieldProps","onClick","CreateHcnPage","dispatch","useDispatch","history","useHistory","BaseSection","title","component","hcn_data","hcnRedux","createHcn","GeneralData","TeacherID","then","push","HcnRoute","exact","from","to","path"],"mappings":"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","file":"static/js/6.d205a979.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _fadeStyles;\n\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport Transition, { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nvar defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nvar fadeStyles = (_fadeStyles = {}, _fadeStyles[ENTERING] = 'show', _fadeStyles[ENTERED] = 'show', _fadeStyles);\nvar Fade = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"children\"]);\n\n  var handleEnter = useCallback(function (node) {\n    triggerBrowserReflow(node);\n    if (props.onEnter) props.onEnter(node);\n  }, [props]);\n  return /*#__PURE__*/React.createElement(Transition, _extends({\n    ref: ref,\n    addEndListener: transitionEndListener\n  }, props, {\n    onEnter: handleEnter\n  }), function (status, innerProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({}, innerProps, {\n      className: classNames('fade', className, children.props.className, fadeStyles[status])\n    }));\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nvar ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    var element = /*#__PURE__*/React.createElement(ProgressBar, null);\n    if (child.type === element.type) return;\n    var childType = child.type;\n    var childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(\"Children of \" + componentName + \" can contain only ProgressBar \" + (\"components. Found \" + childIdentifier + \".\"));\n  });\n  return error;\n}\n\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  srOnly: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar(_ref, ref) {\n  var _classNames;\n\n  var min = _ref.min,\n      now = _ref.now,\n      max = _ref.max,\n      label = _ref.label,\n      srOnly = _ref.srOnly,\n      striped = _ref.striped,\n      animated = _ref.animated,\n      className = _ref.className,\n      style = _ref.style,\n      variant = _ref.variant,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    role: \"progressbar\",\n    className: classNames(className, bsPrefix + \"-bar\", (_classNames = {}, _classNames[\"bg-\" + variant] = variant, _classNames[bsPrefix + \"-bar-animated\"] = animated, _classNames[bsPrefix + \"-bar-striped\"] = animated || striped, _classNames)),\n    style: _extends({\n      width: getPercentage(now, min, max) + \"%\"\n    }, style),\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max\n  }), srOnly ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label) : label);\n}\n\nvar ProgressBar = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var isChild = _ref2.isChild,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"isChild\"]);\n\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  var min = props.min,\n      now = props.now,\n      max = props.max,\n      label = props.label,\n      srOnly = props.srOnly,\n      striped = props.striped,\n      animated = props.animated,\n      bsPrefix = props.bsPrefix,\n      variant = props.variant,\n      className = props.className,\n      children = props.children,\n      wrapperProps = _objectWithoutPropertiesLoose(props, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, wrapperProps, {\n    className: classNames(className, bsPrefix)\n  }), children ? map(children, function (child) {\n    return /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    });\n  }) : renderProgressBar({\n    min: min,\n    now: now,\n    max: max,\n    label: label,\n    srOnly: srOnly,\n    striped: striped,\n    animated: animated,\n    bsPrefix: bsPrefix,\n    variant: variant\n  }, ref));\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","function GeneralDataForm({ formik }) {\r\n  return (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default GeneralDataForm;","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport GeneralDataForm from \"../utils/GeneralDataForm\";\r\n\r\nconst initialHcnStruct = {\r\n  GeneralData: {},\r\n  PatientData: {},\r\n  ConsultationReason: {},\r\n  Anthropometry: {},\r\n  Biochemistry: [],\r\n  Interpretation: {}\r\n};\r\n\r\nconst initialValues = {\r\n  ConsultationReason: '',\r\n  Interpretation: '',\r\n  Feedback: '',\r\n\r\n  // General data \r\n  GeneralData_ValorationDate: '',\r\n  GeneralData_HCNNumber: '',\r\n  GeneralData_AdmissionDate: '',\r\n  GeneralData_Room: '',\r\n  GeneralData_Interpretation: '',\r\n  GeneralData_Feedback: '',\r\n\r\n  // Patient Data\r\n  PatientData_FullName: '',\r\n  PatientData_Birthdate: '',\r\n  PatientData_Gender: '',\r\n  PatientData_Sex: '',\r\n  PatientData_EPS: '',\r\n  PatientData_Telephone: '',\r\n  PatientData_Occupation: '',\r\n  PatientData_CivilStatus: '',\r\n  PatientData_Interpretation: '',\r\n  PatientData_Feedback: '',\r\n\r\n  // Anthropometry\r\n  Anthropometry_Interpretation: '',\r\n  Anthropometry_Feedback: '',\r\n\r\n  Anthropometry_Weight_Actual: '',\r\n  Anthropometry_Weight_Usual: '',\r\n  Anthropometry_Weight_Reference: '',\r\n  Anthropometry_Weight_ChangeWeight: '',\r\n  Anthropometry_Weight_Interpretation: '',\r\n  Anthropometry_Weight_Feedback: '',\r\n\r\n  Anthropometry_TricipitalFold_Value: '',\r\n  Anthropometry_TricipitalFold_Interpretation: '',\r\n  Anthropometry_TricipitalFold_Feedback: '',\r\n\r\n  Anthropometry_BrachialPerimeter_Value: '',\r\n  Anthropometry_BrachialPerimeter_Interpretation: '',\r\n  Anthropometry_BrachialPerimeter_Feedback: '',\r\n\r\n  Anthropometry_AbdominalPerimeter_Value: '',\r\n  Anthropometry_AbdominalPerimeter_Interpretation: '',\r\n  Anthropometry_AbdominalPerimeter_Feedback: '',\r\n\r\n  Anthropometry_SubscapularFold_Value: '',\r\n  Anthropometry_SubscapularFold_Interpretation: '',\r\n  Anthropometry_SubscapularFold_Feedback: '',\r\n\r\n  Anthropometry_Height_Value: '',\r\n  Anthropometry_Height_Interpretation: '',\r\n  Anthropometry_Height_Feedback: '',\r\n\r\n  Anthropometry_Structure_Value: '',\r\n  Anthropometry_Structure_Interpretation: '',\r\n  Anthropometry_Structure_Feedback: '',\r\n\r\n  Anthropometry_BMI_Value: '',\r\n  Anthropometry_BMI_Interpretation: '',\r\n  Anthropometry_BMI_Feedback: '',\r\n\r\n  // Biochemistry\r\n  Biochemistry_Interpretation: '',\r\n  Biochemistry_Feedback: '',\r\n};\r\n\r\nconst getDisplayObject = () => {\r\n  let ans = {};\r\n  for(const key in initialValues) {\r\n    ans[key] = { Feedback: false }\r\n  }\r\n  return ans;\r\n}\r\n\r\nconst getJSON = (data) => {\r\n  let ans = {};\r\n  for(const key in data) {\r\n    if(data[key].length) {\r\n      const key_list = key.split('_');\r\n      key_list.forEach(value => {\r\n        let children = ans;\r\n      })\r\n    }\r\n  }\r\n  return ans;\r\n};\r\n\r\nfunction HcnForm(props) {\r\n  const { handleSubmit, handleReturn } = props;\r\n\r\n  const [ displayFields, setDisplayFields ] = React.useState(getDisplayObject());\r\n\r\n  const hcnSchema = Yup.object().shape({\r\n    ValorationDate: Yup.string()\r\n    .required(\"Campo requerido\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    //validationSchema: hcnSchema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      console.log(values);\r\n      setTimeout(() => {\r\n        console.log(\"subiendo\");\r\n        //handleSubmit(hcn);\r\n      }, 1000);\r\n    }\r\n  });\r\n\r\n  const handleOpenFeedback = event => {\r\n    const { name } = event.target;\r\n    setDisplayFields({\r\n      ...displayFields,\r\n      [name]: {\r\n        ...displayFields[name],\r\n        Feedback: !displayFields[name].Feedback\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <div className=\"row mb-3\">\r\n        <Tab.Container id=\"left-tabs\" defaultActiveKey=\"GeneralData\">\r\n          <div className=\"col-2\">\r\n            <Nav variant=\"pills\" className=\"flex-column mb-3\">\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"GeneralData\">Datos generales</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"PatientData\">Datos del paciente</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"Anthropometry\">Datos antropométricos</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"Biochemistry\">Datos bioquímicos</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </div>\r\n          <div className=\"col-10\">\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"GeneralData\">\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col\">\r\n                    <label htmlFor=\"GeneralData_ValorationDate\">Fecha de valoración</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <input \r\n                        type=\"date\"\r\n                        name=\"GeneralData_ValorationDate\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"GeneralData_ValorationDate\")}\r\n                      />\r\n                      <button \r\n                        type=\"button\"\r\n                        className=\"btn btn-primary ml-3\"\r\n                        name=\"GeneralData_ValorationDate\"\r\n                        onClick={handleOpenFeedback}\r\n                      >+</button>\r\n                    </div>\r\n                    { displayFields[\"GeneralData_ValorationDate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                  <div className=\"form-group col\">\r\n                    <label htmlFor=\"GeneralData_AdmissionDate\">Fecha de admisión</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <input \r\n                        type=\"date\"\r\n                        name=\"GeneralData_AdmissionDate\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"GeneralData_AdmissionDate\")}\r\n                      />\r\n                      <button \r\n                        type=\"button\"\r\n                        className=\"btn btn-primary ml-3\"\r\n                        name=\"GeneralData_AdmissionDate\"\r\n                        onClick={handleOpenFeedback}\r\n                      >+</button>\r\n                    </div>\r\n                    { displayFields[\"GeneralData_AdmissionDate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"GeneralData_HCNNumber\">Número HCN</label>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <input \r\n                      type=\"number\"\r\n                      name=\"GeneralData_HCNNumber\"\r\n                      className=\"form-control\"\r\n                      {...formik.getFieldProps(\"GeneralData_HCNNumber\")}\r\n                    />\r\n                    <button \r\n                      type=\"button\"\r\n                      className=\"btn btn-primary ml-3\"\r\n                      name=\"GeneralData_HCNNumber\"\r\n                      onClick={handleOpenFeedback}\r\n                    >+</button>\r\n                  </div>\r\n                  { displayFields[\"GeneralData_HCNNumber\"].Feedback ? \r\n                    <textarea \r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                    /> : null\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"GeneralData_Room\">Habitación</label>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <input \r\n                      type=\"number\"\r\n                      name=\"GeneralData_Room\"\r\n                      className=\"form-control\"\r\n                      {...formik.getFieldProps(\"GeneralData_Room\")}\r\n                    />\r\n                    <button \r\n                      type=\"button\"\r\n                      className=\"btn btn-primary ml-3\"\r\n                      name=\"GeneralData_Room\"\r\n                      onClick={handleOpenFeedback}\r\n                    >+</button>\r\n                  </div>\r\n                  { displayFields[\"GeneralData_Room\"].Feedback ? \r\n                    <textarea \r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                    /> : null\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"GeneralData_Interpretation\">Interpretación</label>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <textarea \r\n                      type=\"text\"\r\n                      name=\"GeneralData_Interpretation\"\r\n                      className=\"form-control\"\r\n                      {...formik.getFieldProps(\"GeneralData_Interpretation\")}\r\n                    />\r\n                    <div>\r\n                      <button \r\n                        type=\"button\"\r\n                        className=\"btn btn-primary ml-3\"\r\n                        name=\"GeneralData_Interpretation\"\r\n                        onClick={handleOpenFeedback}\r\n                      >+</button>\r\n                    </div>\r\n                  </div>\r\n                  { displayFields[\"GeneralData_Interpretation\"].Feedback ? \r\n                    <textarea \r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                    /> : null\r\n                  }\r\n                </div>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"PatientData\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"PatientData_FullName\">Nombre Completo</label>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <input \r\n                      type=\"text\"\r\n                      name=\"PatientData_FullName\"\r\n                      className=\"form-control\"\r\n                      {...formik.getFieldProps(\"PatientData_FullName\")}\r\n                    />\r\n                    <button className=\"btn btn-primary ml-3\">+</button>\r\n                  </div>\r\n                  { displayFields[\"PatientData_FullName\"].Feedback ? \r\n                    <textarea \r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                    /> : null\r\n                  }\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-6\">\r\n                    <label htmlFor=\"PatientData_Birthdate\">Fecha de cumpleaños</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <input \r\n                        type=\"date\"\r\n                        name=\"PatientData_Birthdate\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"PatientData_Birthdate\")}\r\n                      />\r\n                      <button className=\"btn btn-primary ml-3\">+</button>\r\n                    </div>\r\n                    { displayFields[\"PatientData_Birthdate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                  <div className=\"form-group col-3\">\r\n                    <label htmlFor=\"PatientData_Gender\">Género</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <select \r\n                        type=\"text\"\r\n                        name=\"PatientData_Gender\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"PatientData_Gender\")}\r\n                      >\r\n                        <option value=\"\">Seleccionar</option>\r\n                        <option value=\"M\">Masculino</option>\r\n                        <option value=\"F\">Femenino</option>\r\n                      </select>\r\n                      <button className=\"btn btn-primary ml-3\">+</button>\r\n                    </div>\r\n                    { displayFields[\"PatientData_Gender\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                  <div className=\"form-group col-3\">\r\n                    <label htmlFor=\"PatientData_CivilStatus\">Estado civil</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <select \r\n                        type=\"text\"\r\n                        name=\"PatientData_CivilStatus\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"PatientData_CivilStatus\")}\r\n                      >\r\n                        <option value=\"\">Seleccionar</option>\r\n                        <option value=\"Married\">Casado/a</option>\r\n                        <option value=\"Single\">Soltero/a</option>\r\n                      </select>\r\n                      <button className=\"btn btn-primary ml-3\">+</button>\r\n                    </div>\r\n                    { displayFields[\"PatientData_CivilStatus\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"PatientData_EPS\">EPS</label>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <input \r\n                      type=\"text\"\r\n                      name=\"PatientData_EPS\"\r\n                      className=\"form-control\"\r\n                      {...formik.getFieldProps(\"PatientData_EPS\")}\r\n                    />\r\n                    <button className=\"btn btn-primary ml-3\">+</button>\r\n                  </div>\r\n                  { displayFields[\"PatientData_EPS\"].Feedback ? \r\n                    <textarea \r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                    /> : null\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"PatientData_Telephone\">Teléfono</label>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <input \r\n                      type=\"text\"\r\n                      name=\"PatientData_Telephone\"\r\n                      className=\"form-control\"\r\n                      {...formik.getFieldProps(\"PatientData_Telephone\")}\r\n                    />\r\n                    <button className=\"btn btn-primary ml-3\">+</button>\r\n                  </div>\r\n                  { displayFields[\"PatientData_Telephone\"].Feedback ? \r\n                    <textarea \r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                    /> : null\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"PatientData_Occupation\">Ocupación</label>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <input \r\n                      type=\"text\"\r\n                      name=\"PatientData_Occupation\"\r\n                      className=\"form-control\"\r\n                      {...formik.getFieldProps(\"PatientData_Occupation\")}\r\n                    />\r\n                    <button className=\"btn btn-primary ml-3\">+</button>\r\n                  </div>\r\n                  { displayFields[\"PatientData_Occupation\"].Feedback ? \r\n                    <textarea \r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                    /> : null\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"PatientData_Interpretation\">Interpretación</label>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <textarea \r\n                      type=\"text\"\r\n                      name=\"PatientData_Interpretation\"\r\n                      className=\"form-control\"\r\n                      {...formik.getFieldProps(\"PatientData_Interpretation\")}\r\n                    />\r\n                    <div><button className=\"btn btn-primary ml-3\">+</button></div>\r\n                  </div>\r\n                  { displayFields[\"PatientData_Interpretation\"].Feedback ? \r\n                    <textarea \r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                    /> : null\r\n                  }\r\n                </div>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"Anthropometry\">\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col\">\r\n                    <label htmlFor=\"ActualWeight\">Peso actual</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <input \r\n                        type=\"number\"\r\n                        name=\"ActualWeight\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"GeneralData_Room\")}\r\n                      />\r\n                      <button className=\"btn btn-primary ml-3\">+</button>\r\n                    </div>\r\n                    { displayFields[\"GeneralData_ValorationDate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                  <div className=\"form-group col\">\r\n                    <label htmlFor=\"UsualWeight\">Peso usual</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <input \r\n                        type=\"number\"\r\n                        name=\"UsualWeight\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"GeneralData_Room\")}\r\n                      />\r\n                      <button className=\"btn btn-primary ml-3\">+</button>\r\n                    </div>\r\n                    { displayFields[\"GeneralData_ValorationDate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                  <div className=\"form-group col\">\r\n                    <label htmlFor=\"ReferenceWeight\">Peso de referencia</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <input \r\n                        type=\"number\"\r\n                        name=\"ReferenceWeight\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"GeneralData_Room\")}\r\n                      />\r\n                      <button className=\"btn btn-primary ml-3\">+</button>\r\n                    </div>\r\n                    { displayFields[\"GeneralData_ValorationDate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                  <div className=\"form-group col\">\r\n                    <label htmlFor=\"ChangeWeight\">Cambio de peso</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <input \r\n                        type=\"number\"\r\n                        name=\"ChangeWeight\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"GeneralData_Room\")}\r\n                      />\r\n                      <button className=\"btn btn-primary ml-3\">+</button>\r\n                    </div>\r\n                    { displayFields[\"GeneralData_ValorationDate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col\">\r\n                    <label htmlFor=\"TricipitalFold\">Pliegue tricipital</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <input \r\n                        type=\"number\"\r\n                        name=\"TricipitalFold\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"GeneralData_Room\")}\r\n                      />\r\n                      <button className=\"btn btn-primary ml-3\">+</button>\r\n                    </div>\r\n                    { displayFields[\"GeneralData_ValorationDate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                  <div className=\"form-group col\">\r\n                    <label htmlFor=\"SubscapularFold\">Pliegue subescapular</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <input \r\n                        type=\"number\"\r\n                        name=\"SubscapularFold\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"GeneralData_Room\")}\r\n                      />\r\n                      <button className=\"btn btn-primary ml-3\">+</button>\r\n                    </div>\r\n                    { displayFields[\"GeneralData_ValorationDate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col\">\r\n                    <label htmlFor=\"BrachialPerimeter\">Perímetro braquial</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <input \r\n                        type=\"number\"\r\n                        name=\"BrachialPerimeter\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"GeneralData_Room\")}\r\n                      />\r\n                      <button className=\"btn btn-primary ml-3\">+</button>\r\n                    </div>\r\n                    { displayFields[\"GeneralData_ValorationDate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                  <div className=\"form-group col\">\r\n                    <label htmlFor=\"AbdominalPerimeter\">Perímetro abdominal</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <input \r\n                        type=\"number\"\r\n                        name=\"AbdominalPerimeter\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"GeneralData_Room\")}\r\n                      />\r\n                      <button className=\"btn btn-primary ml-3\">+</button>\r\n                    </div>\r\n                    { displayFields[\"GeneralData_ValorationDate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col\">\r\n                    <label htmlFor=\"Height\">Altura</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <input \r\n                        type=\"number\"\r\n                        name=\"Height\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"GeneralData_Room\")}\r\n                      />\r\n                      <button className=\"btn btn-primary ml-3\">+</button>\r\n                    </div>\r\n                    { displayFields[\"GeneralData_ValorationDate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                  <div className=\"form-group col\">\r\n                    <label htmlFor=\"Structure\">Estructura</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <input \r\n                        type=\"number\"\r\n                        name=\"Structure\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"GeneralData_Room\")}\r\n                      />\r\n                      <button className=\"btn btn-primary ml-3\">+</button>\r\n                    </div>\r\n                    { displayFields[\"GeneralData_ValorationDate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                  <div className=\"form-group col\">\r\n                    <label htmlFor=\"BMI\">BMI</label>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <input \r\n                        type=\"number\"\r\n                        name=\"BMI\"\r\n                        className=\"form-control\"\r\n                        {...formik.getFieldProps(\"GeneralData_Room\")}\r\n                      />\r\n                      <button className=\"btn btn-primary ml-3\">+</button>\r\n                    </div>\r\n                    { displayFields[\"GeneralData_ValorationDate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"Interpretation\">Interpretación</label>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <textarea \r\n                      type=\"text\"\r\n                      name=\"Interpretation\"\r\n                      className=\"form-control\"\r\n                      {...formik.getFieldProps(\"GeneralData_Room\")}\r\n                    />\r\n                    <div><button className=\"btn btn-primary ml-3\">+</button></div>\r\n                  </div>\r\n                  { displayFields[\"GeneralData_ValorationDate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                </div>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"Biochemistry\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"TricipitalFold\">Pliegue tricipital</label>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <input \r\n                      type=\"text\"\r\n                      name=\"TricipitalFold\"\r\n                      className=\"form-control\"\r\n                      {...formik.getFieldProps(\"TricipitalFold\")}\r\n                    />\r\n                    <button className=\"btn btn-primary ml-3\">+</button>\r\n                  </div>\r\n                  { displayFields[\"GeneralData_ValorationDate\"].Feedback ? \r\n                      <textarea \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                      /> : null\r\n                    }\r\n                </div>\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </div>\r\n        </Tab.Container>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"ConsultationReason\">Razón de la consulta</label>\r\n        <div className=\"d-flex flex-row\">\r\n          <textarea \r\n            type=\"text\"\r\n            name=\"ConsultationReason\"\r\n            className=\"form-control\"\r\n            {...formik.getFieldProps(\"ConsultationReason\")}\r\n          />\r\n          <div>\r\n            <button \r\n              type=\"button\"\r\n              className=\"btn btn-primary ml-3\"\r\n              name=\"ConsultationReason\"\r\n              onClick={handleOpenFeedback}\r\n            >+</button>\r\n          </div>\r\n        </div>\r\n        { displayFields[\"ConsultationReason\"].Feedback ? \r\n          <textarea \r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          /> : null\r\n        }\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\">Crear</button>\r\n      <button className=\"btn btn-secondary ml-2\" onClick={handleReturn}>Volver</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default HcnForm;","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport { actions as hcnRedux } from \"../_redux/hcnRedux\";\r\nimport BaseSection from \"../../../components/UI/BaseSection\";\r\nimport HcnForm from \"../components/HcnForm\";\r\n\r\nfunction CreateHcnPage() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const saveHCN = hcn_data => {\r\n    dispatch(hcnRedux.createHcn({ GeneralData: hcn_data, TeacherID: 50001 }))\r\n      .then(() => history.push(\"/courses/clinical-cases\"))\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <BaseSection title=\"Crear Historia Clínica Nutricional\"\r\n          component={\r\n            () => <ProgressBar className=\"mb-3\" now={60} label={`Progreso de la hcn %`} />\r\n          }\r\n        >\r\n          <HcnForm handleSubmit={saveHCN} handleReturn={() => history.push(\"/courses/hcn\")} />\r\n        </BaseSection>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateHcnPage;","import React from \"react\";\r\nimport { Redirect, Switch, Route } from \"react-router-dom\";\r\nimport CreateHcnPage from \"./pages/CreateHcnPage\";\r\n\r\nfunction HcnRoute() {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact={true} from=\"/hcn\" to=\"/hcn/all\" />\r\n      <Route exact={true} path=\"/hcn/create\" component={CreateHcnPage} />\r\n      <Redirect to=\"/error/404\"/> \r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default HcnRoute;"],"sourceRoot":""}