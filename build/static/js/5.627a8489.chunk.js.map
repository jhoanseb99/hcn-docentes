{"version":3,"sources":["app/components/UI/BaseCardSection.jsx","app/components/UI/BaseModal.jsx","app/modules/Activities/components/CreateActivityDialog.jsx","app/modules/Activities/components/UpdateActivityDialog.jsx","app/pages/Activities.jsx","app/modules/Announcements/components/CreateAnnDialog.jsx","app/modules/Announcements/components/UpdateAnnDialog.jsx","app/components/UI/BaseDialog.jsx","app/pages/Announcements.jsx","app/modules/ClinicalCases/components/CreateCCaseDialog.jsx","app/modules/ClinicalCases/components/AddCCaseDialog.jsx","app/modules/ClinicalCases/components/UpdateCCaseDialog.jsx","app/pages/CCasesPage.jsx","app/modules/HCN/components/AddHcnDialog.jsx","app/pages/HcnPage.jsx","app/modules/Courses/CoursesRoute.js"],"names":["BaseCardSection","props","title","toolbar","children","others","className","map","index","key","BaseModal","open","handleClose","actions","Modal","show","onHide","Header","closeButton","Title","Body","Footer","action","content","CreateActivityDialog","useSelector","hcn","clinicalCases","hcnList","ccasesList","dispatch","useDispatch","initInputData","Description","Type","LimitDate","HCNID","ClinicalCaseID","Difficulty","React","useState","wadSubmited","inputs_data","setInputData","handleInputsChange","event","target","name","value","parseInt","handleCreate","to_validate","Object","keys","i","ok","length","validateInputs","createActivity","then","actionButtons","onClick","size","htmlFor","type","onChange","style","minHeight","id","ID","preventDefault","window","UpdateActivityDialog","activity","updateActivity","Activities","activitieslist","state","activities","openCreateDialog","setOpenCreateDialog","openUpdateDialog","setOpenUpdateDialog","undefined","activityValue","setActivityValue","useEffect","getActivitiesList","backgroundColor","deleteActivity","handleDelete","moment","CreationDate","format","initialValues","CreateAnnDialog","annSchema","Yup","shape","required","formik","useFormik","validationSchema","onSubmit","values","setStatus","setSubmitting","setTimeout","createAnnouncement","handleSubmit","touched","errors","getFieldProps","UpdateAnnDialog","announcement","handleUpdate","updateAnnouncement","BaseDialog","Dialog","DialogTitle","DialogContent","DialogActions","Button","Announcements","announcementslist","announcements","confirmDelete","setConfirmDelete","annValue","setAnnValue","getAnnouncementsList","onClose","deleteAnnouncement","dispatchDelete","color","CreateCCaseDialog","Media","a","blobPDF","Blob","files","reader","FileReader","readAsDataURL","onloadend","result","split","console","log","createCCase","AddCCaseDialog","ccase_id","setCCaseId","handleAdd","addCCaseToCourse","UpdateCCaseDialog","clinical_case","updateCCase","CCasesPage","ccasesListByCourse","history","useHistory","openAddDialog","setOpenAddDialog","ccaseValue","setCcaseValue","getCCasesListByCourse","push","data","removeCCase","handleRemove","deleteCCaseByCourse","AddHcnDialog","hcn_id","setHcnId","hcnRedux","addHcnToCourse","HcnPage","hcnListByCourse","getHcnListByCourse","BaseSection","CardGridContainer","to","MongoID","height","CoursesRoute","currentCourse","courses","getCourseData","exact","from","path","component"],"mappings":"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","file":"static/js/5.627a8489.chunk.js","sourcesContent":["function BaseCardSection(props) {\r\n  const { title, toolbar, children, ...others } = props;\r\n  return (\r\n    <div className=\"container-fluid h-100\">\r\n      <div className=\"card\" { ...others }>\r\n        <div className=\"card-header bg-white\">\r\n          <div className=\"d-flex row align-items-center\">\r\n            <div className=\"col\">\r\n              <h3 className=\"text-dark\">{ title }</h3>\r\n            </div>\r\n            { toolbar && \r\n              <div className=\"col text-right\">\r\n                {toolbar.map(({ title, ...props }, index) => (\r\n                  <button { ...props } key={ index }>{ title }</button>\r\n                ))}\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"card-body h-100\">\r\n          { children }\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default BaseCardSection;","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nfunction BaseModal(props) {\r\n  const { open, title, handleClose, actions, children, ...others } = props;\r\n  return (\r\n    <Modal show={open} onHide={handleClose} {...others}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{ title }</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"p-4\">\r\n        { children }\r\n      </Modal.Body>\r\n      {actions && \r\n        <Modal.Footer>\r\n          {actions.map((action, index) => {\r\n            const { content, ...props } = action;\r\n            return (\r\n              <button \r\n                className={props.className ? props.className : \"btn btn-primary\"} key={ index }\r\n                { ...props } \r\n              >\r\n                  { content }\r\n              </button>\r\n            );\r\n          })}\r\n        </Modal.Footer>\r\n      }\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default BaseModal;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { actions } from \"../_redux/activitiesRedux\";\r\n\r\nimport BaseModal from \"../../../components/UI/BaseModal.jsx\";\r\n\r\nfunction CreateActivityDialog({ open, handleClose }) {\r\n  const { hcnList, ccasesList } = useSelector(\r\n    ({ hcn, clinicalCases }) => ({\r\n      hcnList: hcn.hcnList,\r\n      ccasesList: clinicalCases.ccasesList\r\n    })\r\n  );\r\n  const dispatch = useDispatch();\r\n  const initInputData = {\r\n    Title: \"\",\r\n    Description: \"\",\r\n    Type: \"\",\r\n    LimitDate: \"\",\r\n    HCNID: \"\",\r\n    ClinicalCaseID: \"\",\r\n    Difficulty: 1\r\n  };\r\n\r\n  const [ state, setState ] = React.useState({\r\n    wadSubmited: false,\r\n  });\r\n\r\n  const [ inputs_data, setInputData ] = React.useState(initInputData);\r\n  \r\n  const handleStateChange = (field, value) => setState({...state, [field]: value});\r\n\r\n  const validateInputs = () => {\r\n    let to_validate = Object.keys(initInputData);\r\n    let [ i, ok ] = [ 0, true ];\r\n    while(i < to_validate.length && ok) {\r\n      ok = ok && (inputs_data[to_validate[i]].length || inputs_data[to_validate[i]]);\r\n      i++;\r\n    }\r\n    return ok;\r\n  };\r\n\r\n  const handleInputsChange = event => {\r\n    let { name, value } = event.target;\r\n    if(name == \"ClinicalCaseID\" || name == \"HCNID\" || name == \"Difficulty\") value = parseInt(value);\r\n    setInputData({\r\n      ...inputs_data,\r\n      [name]: value\r\n    })\r\n  };\r\n\r\n  const handleCreate = () => {\r\n    if(!validateInputs()) return;\r\n    dispatch(actions.createActivity(inputs_data))\r\n    .then(() => handleClose())\r\n  };\r\n\r\n  const actionButtons = [\r\n    {\r\n      content: \"Publicar actividad\",\r\n      onClick: () => handleCreate()\r\n    },\r\n    {\r\n      content: \"Cancelar\",\r\n      onClick: () => handleClose(),\r\n      className: \"btn btn-secondary\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <BaseModal \r\n      title=\"Crear nueva actividad\"\r\n      open={open}\r\n      actions={actionButtons}\r\n      handleClose={handleClose}\r\n      size=\"lg\"\r\n    >\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Title\">Título</label>\r\n          <input \r\n            type=\"text\"\r\n            name=\"Title\"\r\n            className=\"form-control\"\r\n            value={inputs_data.Title}\r\n            onChange={handleInputsChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Description\">Descripción</label>\r\n          <textarea  \r\n            type=\"text\"\r\n            name=\"Description\"\r\n            className=\"form-control\"\r\n            style={{minHeight: \"100px\"}}\r\n            value={inputs_data.Description}\r\n            onChange={handleInputsChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Type\">Tipo</label>\r\n          <select \r\n            name=\"Type\" \r\n            id=\"Type\" \r\n            className=\"form-control\"\r\n            value={inputs_data.Type}\r\n            onChange={handleInputsChange}\r\n          >\r\n            <option value=\"\">Seleccionar</option>\r\n            <option value=\"Calificable\">Calificable</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"LimitDate\">Fecha de entrega</label>\r\n          <input  \r\n            type=\"datetime-local\"\r\n            name=\"LimitDate\"\r\n            className=\"form-control\"\r\n            value={inputs_data.LimitDate}\r\n            onChange={handleInputsChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"HCNID\">Historia Clínica Nutricional asociada</label>\r\n          <div className=\"row\">\r\n            <div className=\"col-10\">\r\n              <select \r\n                name=\"HCNID\" \r\n                id=\"HCNID\" \r\n                className=\"form-control\"\r\n                value={inputs_data.HCNID}\r\n                onChange={handleInputsChange}\r\n              >\r\n                <option value=\"\">Seleccionar</option>\r\n                {hcnList.map(({ ID }) => (\r\n                  <option value={ ID } key= { ID }>{ ID }</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"col-2 text-right\">\r\n              <button className=\"btn btn-primary\" \r\n                onClick={(event) => {\r\n                  event.preventDefault(); \r\n                  //window.open(`/clinical-cases/${}`);\r\n                }} \r\n              >\r\n                Ver\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"ClinicalCaseID\">Caso Clínico asociado</label>\r\n          <div className=\"row\">\r\n            <div className=\"col-10\">\r\n              <select \r\n                name=\"ClinicalCaseID\" \r\n                id=\"ClinicalCaseID\" \r\n                className=\"form-control\"\r\n                value={inputs_data.ClinicalCaseID}\r\n                onChange={handleInputsChange}\r\n              >\r\n                <option value=\"\">Seleccionar</option>\r\n                {ccasesList.map(({ ID, Title }) => (\r\n                  <option value={ ID } key={ ID }>{ Title }</option>\r\n                ))}\r\n                \r\n              </select>\r\n            </div>\r\n            <div className=\"col-2 text-right\">\r\n              <button className=\"btn btn-primary\" \r\n                onClick={(event) => {\r\n                  event.preventDefault(); \r\n                  if(inputs_data.ClinicalCaseID !== \"\") \r\n                    window.open(`/clinical-cases/${inputs_data.ClinicalCaseID}`);\r\n                }} \r\n              >\r\n                Ver\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Difficulty\">Dificultad</label>\r\n          <select \r\n            name=\"Difficulty\" \r\n            id=\"Difficulty\" \r\n            className=\"form-control\"\r\n            value={inputs_data.Difficulty}\r\n            onChange={handleInputsChange}\r\n          >\r\n            {[1,2,3,4,5].map(value => (\r\n              <option value={value} key={value}>{value}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </form>\r\n      \r\n    </BaseModal>\r\n  );\r\n}\r\n\r\nexport default CreateActivityDialog;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { actions } from \"../_redux/activitiesRedux\";\r\n\r\nimport BaseModal from \"../../../components/UI/BaseModal.jsx\";\r\n\r\nfunction UpdateActivityDialog({ open, handleClose, activity }) {\r\n  const { hcnList, ccasesList } = useSelector(\r\n    ({ hcn, clinicalCases }) => ({\r\n      hcnList: hcn.hcnList,\r\n      ccasesList: clinicalCases.ccasesList\r\n    })\r\n  );\r\n  const dispatch = useDispatch();\r\n  const initInputData = {\r\n    Title: activity.Title,\r\n    Description: activity.Description,\r\n    Type: activity.Type,\r\n    LimitDate: activity.LimitDate,\r\n    HCNID: activity.HCNID,\r\n    ClinicalCaseID: activity.ClinicalCaseID,\r\n    Difficulty: activity.Difficulty\r\n  };\r\n\r\n  const [ state, setState ] = React.useState({\r\n    wadSubmited: false,\r\n  });\r\n\r\n  const [ inputs_data, setInputData ] = React.useState(initInputData);\r\n  \r\n  const handleStateChange = (field, value) => setState({...state, [field]: value});\r\n\r\n  const validateInputs = () => {\r\n    let to_validate = Object.keys(initInputData);\r\n    let [ i, ok ] = [ 0, true ];\r\n    while(i < to_validate.length && ok) {\r\n      ok = ok && (inputs_data[to_validate[i]].length || inputs_data[to_validate[i]]);\r\n      i++;\r\n    }\r\n    return ok;\r\n  };\r\n\r\n  const handleInputsChange = event => {\r\n    let { name, value } = event.target;\r\n    if(name == \"ClinicalCaseID\" || name == \"HCNID\" || name == \"Difficulty\") value = parseInt(value);\r\n    setInputData({\r\n      ...inputs_data,\r\n      [name]: value\r\n    })\r\n  };\r\n\r\n  const handleCreate = () => {\r\n    if(!validateInputs()) return;\r\n    dispatch(actions.updateActivity({ ...inputs_data, ID: activity.ID }))\r\n    .then(() => handleClose())\r\n  };\r\n\r\n  const actionButtons = [\r\n    {\r\n      content: \"Publicar actividad\",\r\n      onClick: () => handleCreate()\r\n    },\r\n    {\r\n      content: \"Cancelar\",\r\n      onClick: () => handleClose(),\r\n      className: \"btn btn-secondary\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <BaseModal \r\n      title=\"Crear nueva actividad\"\r\n      open={open}\r\n      actions={actionButtons}\r\n      handleClose={handleClose}\r\n      size=\"lg\"\r\n    >\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Title\">Título</label>\r\n          <input \r\n            type=\"text\"\r\n            name=\"Title\"\r\n            className=\"form-control\"\r\n            value={inputs_data.Title}\r\n            onChange={handleInputsChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Description\">Descripción</label>\r\n          <textarea  \r\n            type=\"text\"\r\n            name=\"Description\"\r\n            className=\"form-control\"\r\n            style={{minHeight: \"100px\"}}\r\n            value={inputs_data.Description}\r\n            onChange={handleInputsChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Type\">Tipo</label>\r\n          <select \r\n            name=\"Type\" \r\n            id=\"Type\" \r\n            className=\"form-control\"\r\n            value={inputs_data.Type}\r\n            onChange={handleInputsChange}\r\n          >\r\n            <option value=\"\">Seleccionar</option>\r\n            <option value=\"Calificable\">Calificable</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"LimitDate\">Fecha de entrega</label>\r\n          <input  \r\n            type=\"datetime-local\"\r\n            name=\"LimitDate\"\r\n            className=\"form-control\"\r\n            value={inputs_data.LimitDate}\r\n            onChange={handleInputsChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"HCNID\">Historia Clínica Nutricional asociada</label>\r\n          <select \r\n            name=\"HCNID\" \r\n            id=\"HCNID\" \r\n            className=\"form-control\"\r\n            value={inputs_data.HCNID}\r\n            onChange={handleInputsChange}\r\n          >\r\n            <option value=\"\">Seleccionar</option>\r\n            {hcnList.map(({ ID }) => (\r\n              <option value={ ID } key= { ID }>{ ID }</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"ClinicalCaseID\">Caso Clínico asociado</label>\r\n          <select \r\n            name=\"ClinicalCaseID\" \r\n            id=\"ClinicalCaseID\" \r\n            className=\"form-control\"\r\n            value={inputs_data.ClinicalCaseID}\r\n            onChange={handleInputsChange}\r\n          >\r\n            <option value=\"\">Seleccionar</option>\r\n            {ccasesList.map(({ ID, Title }) => (\r\n              <option value={ ID } key={ ID }>{ Title }</option>\r\n            ))}\r\n            \r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Difficulty\">Dificultad</label>\r\n          <select \r\n            name=\"Difficulty\" \r\n            id=\"Difficulty\" \r\n            className=\"form-control\"\r\n            value={inputs_data.Difficulty}\r\n            onChange={handleInputsChange}\r\n          >\r\n            {[1,2,3,4,5].map(value => (\r\n              <option value={value} key={value}>{value}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </form>\r\n      \r\n    </BaseModal>\r\n  );\r\n}\r\n\r\nexport default UpdateActivityDialog;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\r\nimport CreateActivityDialog from \"../modules/Activities/components/CreateActivityDialog.jsx\";\r\nimport UpdateActivityDialog from \"../modules/Activities/components/UpdateActivityDialog.jsx\";\r\nimport { actions } from \"../modules/Activities/_redux/activitiesRedux\";\r\nimport BaseCardSection from \"../components/UI/BaseCardSection.jsx\";\r\n\r\n//import EditIcon from '@material-ui/icons/Edit';\r\n\r\nexport default function Activities() {\r\n  const { activitieslist } = useSelector((state) => state.activities);\r\n  const dispatch = useDispatch();\r\n\r\n  const [openCreateDialog, setOpenCreateDialog] = React.useState(false);\r\n  const [openUpdateDialog, setOpenUpdateDialog] = React.useState(false);\r\n  const [activityValue, setActivityValue] = React.useState(undefined);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(actions.getActivitiesList());\r\n  }, [dispatch]);\r\n\r\n  const handleDelete = ({ ID }) => {\r\n    dispatch(actions.deleteActivity(ID));\r\n  };\r\n\r\n  const handleUpdate = (data) => {\r\n    setActivityValue(data);\r\n    setOpenUpdateDialog(true);\r\n  };\r\n\r\n  return (\r\n    <BaseCardSection\r\n      title=\"Actividades\"\r\n      toolbar={[\r\n        {\r\n          className: \"btn btn-primary btn-circle font-weight-bolder\",\r\n          onClick: () => setOpenCreateDialog(true),\r\n          title: \"+\",\r\n        },\r\n      ]}\r\n      style={{ backgroundColor: \"#f3f6f9\" }}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* anuncios */}\r\n        {activitieslist.map((value, index) => (\r\n          <div key={index} className=\"row\">\r\n            {/* Card */}\r\n            <div className=\"card custom-card p-3 mb-5 bg-white rounded\">\r\n              {/* Card::body */}\r\n              <div className=\"card-body pt-3\">\r\n                {/* Card::body::title */}\r\n                <div className=\"card-title\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <strong className=\"align-self-center\">\r\n                        {value.Title}\r\n                      </strong>\r\n                    </div>\r\n                    <div className=\"col text-right\">\r\n                      {value.Type === \"Calificable\" && (\r\n                        <a\r\n                          className=\"btn btn-primary font-weight-bolder font-size-sm mr-3\"\r\n                          title=\"calificar\"\r\n                        >\r\n                          <AssignmentTurnedInIcon />\r\n                        </a>\r\n                      )}\r\n                      <a\r\n                        className=\"btn btn-info font-weight-bolder font-size-sm mr-3\"\r\n                        onClick={() => handleUpdate(value)}\r\n                        title=\"editar\"\r\n                      >\r\n                        <EditIcon />\r\n                      </a>\r\n                      <a\r\n                        className=\"btn btn-danger font-weight-bolder font-size-sm mr-3\"\r\n                        onClick={() => handleDelete(value)}\r\n                        title=\"eliminar\"\r\n                      >\r\n                        <DeleteIcon />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* Card::body::info */}\r\n                <div className=\"card-body p-0\">{value.Description}</div>\r\n                <div className=\"card-body p-0 pt-2\">\r\n                  <small className=\"text-muted d-block\">\r\n                    <strong>Fecha de publicación:</strong>{\" \"}\r\n                    {moment(value.CreationDate).format(\"DD-MM-YYYY\")}\r\n                  </small>\r\n                  <small className=\"text-muted d-block\">\r\n                    <strong>Fecha de entrega:</strong>{\" \"}\r\n                    {moment(value.LimitDate).format(\"DD-MM-YYYY\")}\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {openCreateDialog && (\r\n        <CreateActivityDialog\r\n          open={openCreateDialog}\r\n          handleClose={() => setOpenCreateDialog(false)}\r\n        />\r\n      )}\r\n\r\n      {openUpdateDialog && (\r\n        <UpdateActivityDialog\r\n          open={openUpdateDialog}\r\n          handleClose={() => setOpenUpdateDialog(false)}\r\n          activity={activityValue}\r\n        />\r\n      )}\r\n    </BaseCardSection>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { actions } from \"../_redux/annRedux\";\r\n\r\nimport BaseModal from \"../../../components/UI/BaseModal.jsx\";\r\n\r\nconst initialValues = {\r\n  Title: \"\",\r\n  Description: \"\",\r\n};\r\n\r\nfunction CreateAnnDialog({ open, handleClose }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const annSchema = Yup.object().shape({\r\n    Title: Yup.string().required(\"Campo requerido\"),\r\n    Description: Yup.string().required(\"Campo requerido\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: annSchema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      setTimeout(() => {\r\n        handleCreate(values);\r\n      }, 1000);\r\n    },\r\n  });\r\n\r\n  const handleCreate = (values) => {\r\n    dispatch(actions.createAnnouncement(values)).then(() => handleClose());\r\n  };\r\n\r\n  const actionButtons = [\r\n    {\r\n      content: \"Publicar anuncio\",\r\n      onClick: formik.handleSubmit,\r\n      type: \"submit\",\r\n    },\r\n    {\r\n      content: \"Cancelar\",\r\n      onClick: () => handleClose(),\r\n      className: \"btn btn-secondary\",\r\n      type: \"button\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <BaseModal\r\n      title=\"Crear nuevo anuncio\"\r\n      open={open}\r\n      actions={actionButtons}\r\n      handleClose={handleClose}\r\n    >\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Title\">Título del anuncio</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"Title\"\r\n            className={`form-control ${\r\n              formik.touched.Title\r\n                ? formik.errors.Title\r\n                  ? \"is-invalid\"\r\n                  : \"is-valid\"\r\n                : \"\"\r\n            }`}\r\n            {...formik.getFieldProps(\"Title\")}\r\n          />\r\n          <div className=\"invalid-feedback\">{formik.errors.Title}</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Description\">Contenido del anuncio</label>\r\n          <textarea\r\n            type=\"text\"\r\n            name=\"Description\"\r\n            className={`form-control ${\r\n              formik.touched.Description\r\n                ? formik.errors.Description\r\n                  ? \"is-invalid\"\r\n                  : \"is-valid\"\r\n                : \"\"\r\n            }`}\r\n            {...formik.getFieldProps(\"Description\")}\r\n            style={{ minHeight: \"150px\" }}\r\n          />\r\n          <div className=\"invalid-feedback\">{formik.errors.Description}</div>\r\n        </div>\r\n      </form>\r\n    </BaseModal>\r\n  );\r\n}\r\n\r\nexport default CreateAnnDialog;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { actions } from \"../_redux/annRedux\";\r\n\r\nimport BaseModal from \"../../../components/UI/BaseModal.jsx\";\r\n\r\nfunction UpdateAnnDialog({ open, handleClose, announcement }) {\r\n  const dispatch = useDispatch();\r\n  const initialValues = {\r\n    Title: announcement.Title,\r\n    Description: announcement.Description,\r\n  };\r\n\r\n  const annSchema = Yup.object().shape({\r\n    Title: Yup.string().required(\"Campo requerido\"),\r\n    Description: Yup.string().required(\"Campo requerido\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: annSchema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      setTimeout(() => {\r\n        handleUpdate(values);\r\n      }, 1000);\r\n    },\r\n  });\r\n\r\n  const handleUpdate = (values) => {\r\n    dispatch(\r\n      actions.updateAnnouncement({ ...announcement, ...values })\r\n    ).then(() => handleClose());\r\n  };\r\n\r\n  const actionButtons = [\r\n    {\r\n      content: \"Actualizar anuncio\",\r\n      onClick: formik.handleSubmit,\r\n    },\r\n    {\r\n      content: \"Cancelar\",\r\n      onClick: () => handleClose(),\r\n      className: \"btn btn-secondary\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <BaseModal\r\n      title=\"Actualizar anuncio\"\r\n      open={open}\r\n      actions={actionButtons}\r\n      handleClose={handleClose}\r\n    >\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Title\">Título del anuncio</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"Title\"\r\n            className={`form-control ${\r\n              formik.touched.Title\r\n                ? formik.errors.Title\r\n                  ? \"is-invalid\"\r\n                  : \"is-valid\"\r\n                : \"\"\r\n            }`}\r\n            {...formik.getFieldProps(\"Title\")}\r\n          />\r\n          <div className=\"invalid-feedback\">{formik.errors.Title}</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Description\">Contenido del anuncio</label>\r\n          <textarea\r\n            type=\"text\"\r\n            name=\"Description\"\r\n            className={`form-control ${\r\n              formik.touched.Description\r\n                ? formik.errors.Description\r\n                  ? \"is-invalid\"\r\n                  : \"is-valid\"\r\n                : \"\"\r\n            }`}\r\n            {...formik.getFieldProps(\"Description\")}\r\n            style={{ minHeight: \"150px\" }}\r\n          />\r\n          <div className=\"invalid-feedback\">{formik.errors.Description}</div>\r\n        </div>\r\n      </form>\r\n    </BaseModal>\r\n  );\r\n}\r\n\r\nexport default UpdateAnnDialog;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\n\r\nfunction BaseDialog(props) {\r\n  const { open, title, actions, children, ...others } = props;\r\n  return (\r\n    <Dialog open={open} {...others}>\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent className=\"p-4\">{children}</DialogContent>\r\n      {actions && (\r\n        <DialogActions>\r\n          {actions.map((action, index) => {\r\n            const { content, ...props } = action;\r\n            return (\r\n              <Button key={index} {...props}>\r\n                {content}\r\n              </Button>\r\n            );\r\n          })}\r\n        </DialogActions>\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default BaseDialog;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport CreateAnnDialog from \"app/modules/Announcements/components/CreateAnnDialog.jsx\";\r\nimport { actions } from \"../modules/Announcements/_redux/annRedux\";\r\nimport UpdateAnnDialog from \"app/modules/Announcements/components/UpdateAnnDialog.jsx\";\r\nimport BaseCardSection from \"app/components/UI/BaseCardSection.jsx\";\r\nimport BaseDialog from \"app/components/UI/BaseDialog\";\r\n\r\nfunction Announcements() {\r\n  const { announcementslist } = useSelector((state) => state.announcements);\r\n  const dispatch = useDispatch();\r\n\r\n  const [openCreateDialog, setOpenCreateDialog] = React.useState(false);\r\n  const [openUpdateDialog, setOpenUpdateDialog] = React.useState(false);\r\n  const [confirmDelete, setConfirmDelete] = React.useState(false);\r\n  const [annValue, setAnnValue] = React.useState(undefined);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(actions.getAnnouncementsList());\r\n  }, [dispatch]);\r\n\r\n  const dispatchDelete = ({ ID }) => {\r\n    dispatch(actions.deleteAnnouncement(ID)).then(() =>\r\n      setConfirmDelete(false)\r\n    );\r\n  };\r\n\r\n  const handleDelete = (values) => {\r\n    setAnnValue(values);\r\n    setConfirmDelete(true);\r\n  };\r\n\r\n  const handleUpdate = (values) => {\r\n    setAnnValue(values);\r\n    setOpenUpdateDialog(true);\r\n  };\r\n\r\n  return (\r\n    <BaseCardSection\r\n      title=\"Anuncios\"\r\n      toolbar={[\r\n        {\r\n          className: \"btn btn-primary btn-circle font-weight-bolder\",\r\n          onClick: () => setOpenCreateDialog(true),\r\n          title: \"+\",\r\n        },\r\n      ]}\r\n      style={{ backgroundColor: \"#f3f6f9\" }}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* anuncios */}\r\n        {announcementslist.map((value, index) => (\r\n          <div key={index} className=\"row\">\r\n            {/* Card */}\r\n            <div className=\"card custom-card p-3 mb-5 rounded\">\r\n              {/* Card::body */}\r\n              <div className=\"card-body pt-3\">\r\n                {/* Card::body::title */}\r\n                <div className=\"card-title\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <strong className=\"align-self-center\">\r\n                        {value.Title}\r\n                      </strong>\r\n                    </div>\r\n                    <div className=\"col text-right\">\r\n                      <a\r\n                        className=\"btn btn-info font-weight-bolder font-size-sm mr-3\"\r\n                        onClick={() => handleUpdate(value)}\r\n                        title=\"editar\"\r\n                      >\r\n                        <EditIcon />\r\n                      </a>\r\n                      <a\r\n                        className=\"btn btn-danger font-weight-bolder font-size-sm mr-3\"\r\n                        onClick={() => handleDelete(value)}\r\n                        title=\"eliminar\"\r\n                      >\r\n                        <DeleteIcon />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* Card::body::info */}\r\n                <div className=\"card-body p-0\">{value.Description}</div>\r\n                <div className=\"card-body p-0 pt-2\">\r\n                  <small className=\"text-muted font-weight-bold d-block\">\r\n                    {moment(value.CreationDate).format(\"DD-MM-YYYY\")}\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {openCreateDialog && (\r\n        <CreateAnnDialog\r\n          open={openCreateDialog}\r\n          handleClose={() => setOpenCreateDialog(false)}\r\n        />\r\n      )}\r\n\r\n      {openUpdateDialog && (\r\n        <UpdateAnnDialog\r\n          open={openUpdateDialog}\r\n          handleClose={() => setOpenUpdateDialog(false)}\r\n          announcement={annValue}\r\n        />\r\n      )}\r\n\r\n      {confirmDelete && (\r\n        <BaseDialog\r\n          open={confirmDelete}\r\n          onClose={() => setConfirmDelete(false)}\r\n          actions={[\r\n            {\r\n              content: \"Confirmar\",\r\n              onClick: () => dispatchDelete(annValue),\r\n              color: \"primary\",\r\n            },\r\n            {\r\n              content: \"Cancelar\",\r\n              onClick: () => setConfirmDelete(false),\r\n              className: \"btn btn-secondary\",\r\n            },\r\n          ]}\r\n        >\r\n          ¿Desea eliminar el anuncio?\r\n        </BaseDialog>\r\n      )}\r\n    </BaseCardSection>\r\n  );\r\n}\r\n\r\nexport default Announcements;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { actions } from \"../_redux/ccasesRedux\";\r\nimport BaseModal from \"../../../components/UI/BaseModal.jsx\";\r\n\r\nfunction CreateCCaseDialog({ open, handleClose }) {\r\n  const dispatch = useDispatch();\r\n  const initInputData = {\r\n    Title: \"\",\r\n    Description: \"\",\r\n    Media: null,\r\n  };\r\n\r\n  const [ inputs_data, setInputData ] = React.useState(initInputData);\r\n\r\n  const handleInputsChange = async event => {\r\n    if(event.target.type === \"file\") {\r\n      let blobPDF = new Blob([event.target.files[0]], {type: 'application/pdf'});\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(blobPDF);\r\n      reader.onloadend = () => {\r\n         let value = reader.result.split(',')[1];\r\n         setInputData({\r\n          ...inputs_data,\r\n          [event.target.name]: value\r\n        });\r\n      };\r\n    }\r\n    else {\r\n      const { name, value } = event.target;\r\n      setInputData({\r\n        ...inputs_data,\r\n        [name]: value\r\n      });\r\n    }\r\n\r\n    \r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let to_validate = Object.keys(initInputData);\r\n    let [ i, ok ] = [ 0, true ];\r\n    while(i < to_validate.length && ok) {\r\n      ok = ok && inputs_data[to_validate[i]] && inputs_data[to_validate[i]].length;\r\n      i++;\r\n    }\r\n    return ok;\r\n  };\r\n  \r\n  const handleCreate = () => {  \r\n    console.log(inputs_data);\r\n    if(!validateInputs()) return;\r\n    dispatch(actions.createCCase(inputs_data))\r\n    .then(() => handleClose())\r\n  };\r\n\r\n  const actionButtons = [\r\n    {\r\n      content: \"Crear Caso Clínico\",\r\n      onClick: () => handleCreate()\r\n    },\r\n    {\r\n      content: \"Cancelar\",\r\n      onClick: () => handleClose(),\r\n      className: \"btn btn-secondary\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <BaseModal \r\n      title=\"Crear nuevo caso clínico\"\r\n      open={open}\r\n      actions={actionButtons}\r\n      handleClose={handleClose}\r\n    >\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Title\">Título</label>\r\n          <input \r\n            type=\"text\"\r\n            name=\"Title\"\r\n            className=\"form-control\"\r\n            value={inputs_data.Title}\r\n            onChange={handleInputsChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Description\">Descripción</label>\r\n          <textarea  \r\n            type=\"text\"\r\n            name=\"Description\"\r\n            className=\"form-control\"\r\n            style={{minHeight: \"100px\"}}\r\n            value={inputs_data.Description}\r\n            onChange={handleInputsChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Media\">Archivo</label>\r\n          <input  \r\n            type=\"file\"\r\n            name=\"Media\"\r\n            className=\"ml-2\"\r\n            onChange={handleInputsChange}\r\n          />\r\n        </div>\r\n      </form>\r\n    </BaseModal>\r\n  );\r\n}\r\n\r\nexport default CreateCCaseDialog;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { actions } from \"../_redux/ccasesRedux\";\r\n\r\nimport BaseModal from \"../../../components/UI/BaseModal.jsx\";\r\n\r\nfunction AddCCaseDialog({ open, handleClose }) {\r\n  const { ccasesList } = useSelector(state => state.clinicalCases);\r\n  const dispatch = useDispatch();\r\n\r\n  const [ ccase_id, setCCaseId ] = React.useState(undefined);\r\n\r\n  const validateInputs = () => {\r\n    let ok = true;\r\n    ok = ok && (ccase_id);\r\n    return ok;\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    if(!validateInputs()) return;\r\n    dispatch(actions.addCCaseToCourse(parseInt(ccase_id)))\r\n    .then(() => handleClose())\r\n  };\r\n\r\n\r\n  return (\r\n    <BaseModal\r\n      title=\"Agregar caso clínico\"\r\n      open={open}\r\n      handleClose={() => handleClose()}\r\n      actions={[\r\n        {\r\n          content: \"Añadir\",\r\n          onClick: () => handleAdd()\r\n        },\r\n        {\r\n          content: \"Cancelar\",\r\n          onClick: () => handleClose(),\r\n          className: \"btn btn-secondary\"\r\n        }\r\n      ] }\r\n    >\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Description\">Casos clínicos</label>\r\n          <select \r\n            name=\"Type\" \r\n            id=\"Type\" \r\n            className=\"form-control\"\r\n            value={ccase_id}\r\n            onChange={event => setCCaseId(event.target.value)}\r\n          >\r\n            <option value=\"\">Seleccionar</option>\r\n            {ccasesList.map(({ ID, Title }) => (\r\n              <option value={ ID } key={ ID }>{ Title }</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </form>\r\n    </BaseModal>\r\n  )\r\n}\r\n\r\nexport default AddCCaseDialog;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { actions } from \"../_redux/ccasesRedux\";\r\nimport BaseModal from \"../../../components/UI/BaseModal.jsx\";\r\n\r\nfunction UpdateCCaseDialog({ open, handleClose, clinical_case }) {\r\n  const dispatch = useDispatch();\r\n  const initInputData = {\r\n    Title: clinical_case.Title,\r\n    Description: clinical_case.Description,\r\n    Media: \"\"\r\n  };\r\n\r\n  const [ inputs_data, setInputData ] = React.useState(initInputData);\r\n\r\n  const handleInputsChange = event => {\r\n    const { name, value } = event.target;\r\n    setInputData({\r\n      ...inputs_data,\r\n      [name]: value\r\n    })\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let to_validate = Object.keys(initInputData);\r\n    let [ i, ok ] = [ 0, true ];\r\n    while(i < to_validate.length && ok) {\r\n      ok = ok && inputs_data[to_validate[i]].length;\r\n      i++;\r\n    }\r\n    return ok;\r\n  };\r\n  \r\n  const handleUpdate = () => {  \r\n    console.log(inputs_data);\r\n    if(!validateInputs()) return;\r\n    dispatch(actions.updateCCase({ ID: clinical_case.ID, ...inputs_data }))\r\n    .then(() => handleClose())\r\n  };\r\n\r\n  const actionButtons = [\r\n    {\r\n      content: \"Actualizar Caso Clínico\",\r\n      onClick: () => handleUpdate()\r\n    },\r\n    {\r\n      content: \"Cancelar\",\r\n      onClick: () => handleClose(),\r\n      className: \"btn btn-secondary\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <BaseModal \r\n      title=\"Actualizar caso clínico\"\r\n      open={open}\r\n      actions={actionButtons}\r\n      handleClose={handleClose}\r\n    >\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Title\">Título</label>\r\n          <input \r\n            type=\"text\"\r\n            name=\"Title\"\r\n            className=\"form-control\"\r\n            value={inputs_data.Title}\r\n            onChange={handleInputsChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Description\">Descripción</label>\r\n          <textarea  \r\n            type=\"text\"\r\n            name=\"Description\"\r\n            className=\"form-control\"\r\n            style={{minHeight: \"100px\"}}\r\n            value={inputs_data.Description}\r\n            onChange={handleInputsChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Media\">Archivo</label>\r\n          <input  \r\n            type=\"file\"\r\n            name=\"Media\"\r\n            className=\"ml-2\"\r\n            value={inputs_data.Media}\r\n            onChange={handleInputsChange}\r\n          />\r\n        </div>\r\n      </form>\r\n    </BaseModal>\r\n  );\r\n}\r\n\r\nexport default UpdateCCaseDialog;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport { actions } from \"../modules/ClinicalCases/_redux/ccasesRedux\";\r\nimport CreateCCaseDialog from \"../modules/ClinicalCases/components/CreateCCaseDialog.jsx\";\r\nimport AddCCaseDialog from \"../modules/ClinicalCases/components/AddCCaseDialog\";\r\nimport UpdateCCaseDialog from \"../modules/ClinicalCases/components/UpdateCCaseDialog\";\r\nimport BaseCardSection from \"../components/UI/BaseCardSection\";\r\n\r\nfunction CCasesPage() {\r\n  const { ccasesListByCourse } = useSelector((state) => state.clinicalCases);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [openCreateDialog, setOpenCreateDialog] = React.useState(false);\r\n  const [openUpdateDialog, setOpenUpdateDialog] = React.useState(false);\r\n  const [openAddDialog, setOpenAddDialog] = React.useState(false);\r\n  const [ccaseValue, setCcaseValue] = React.useState(undefined);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(actions.getCCasesListByCourse());\r\n  }, [dispatch]);\r\n\r\n  const handleUpdate = (data) => {\r\n    setCcaseValue(data);\r\n    console.log(data);\r\n    setOpenUpdateDialog(true);\r\n  };\r\n\r\n  const handleDelete = ({ ID }) => {\r\n    dispatch(actions.deleteCCaseByCourse(ID));\r\n  };\r\n\r\n  const handleRemove = ({ ID }) => {\r\n    dispatch(actions.removeCCase(ID));\r\n  };\r\n\r\n  return (\r\n    <BaseCardSection\r\n      title=\"Casos Clínicos\"\r\n      toolbar={[\r\n        {\r\n          title: \"Agregar\",\r\n          className: \"btn btn-primary btn-circle font-weight-bolder\",\r\n          onClick: () => setOpenAddDialog(true),\r\n        },\r\n        {\r\n          title: \"+\",\r\n          className: \"btn btn-primary btn-circle font-weight-bolder ml-2\",\r\n          onClick: () => setOpenCreateDialog(true),\r\n        },\r\n      ]}\r\n      style={{ backgroundColor: \"#f3f6f9\" }}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {ccasesListByCourse.map((value, index) => (\r\n          <div key={index} className=\"row\">\r\n            {/* Card */}\r\n            <div className=\"card custom-card p-3 mb-5 bg-white rounded\">\r\n              {/* Card::body */}\r\n              <div className=\"card-body pt-3\">\r\n                {/* Card::body::title */}\r\n                <div className=\"card-title\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <strong className=\"align-self-center\">\r\n                        {value.Title}\r\n                      </strong>\r\n                    </div>\r\n                    <div className=\"col text-right\">\r\n                      <a\r\n                        className=\"btn btn-primary font-weight-bolder font-size-sm mr-3\"\r\n                        onClick={() => {\r\n                          history.push(`/clinical-cases/${value.ID}`);\r\n                        }}\r\n                        title=\"ver\"\r\n                      >\r\n                        <VisibilityIcon />\r\n                      </a>\r\n                      <a\r\n                        className=\"btn btn-info font-weight-bolder font-size-sm mr-3\"\r\n                        onClick={() => handleUpdate(value)}\r\n                        title=\"editar\"\r\n                      >\r\n                        <EditIcon />\r\n                      </a>\r\n                      <a\r\n                        className=\"btn btn-danger font-weight-bolder font-size-sm mr-3\"\r\n                        onClick={() => handleRemove(value)}\r\n                        title=\"remover de este curso\"\r\n                      >\r\n                        <RemoveCircleIcon />\r\n                      </a>\r\n                      <a\r\n                        className=\"btn btn-danger font-weight-bolder font-size-sm mr-3\"\r\n                        onClick={() => handleDelete(value)}\r\n                        title=\"Eliminar de forma permanente\"\r\n                      >\r\n                        <DeleteIcon />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* Card::body::info */}\r\n                <div className=\"card-body p-0\">{value.Description}</div>\r\n                <div className=\"card-body p-0 pt-2\">\r\n                  <small className=\"text-muted font-weight-bold d-block\">\r\n                    {moment(value.CreationDate).format(\"DD-MM-YYYY\")}\r\n                  </small>\r\n                </div>\r\n                <div className=\"card-body p-0 pt-2\">\r\n                  <strong>Contiene:</strong>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {openCreateDialog && (\r\n        <CreateCCaseDialog\r\n          open={openCreateDialog}\r\n          handleClose={() => setOpenCreateDialog(false)}\r\n        />\r\n      )}\r\n\r\n      {openAddDialog && (\r\n        <AddCCaseDialog\r\n          open={openAddDialog}\r\n          handleClose={() => setOpenAddDialog(false)}\r\n        />\r\n      )}\r\n\r\n      {openUpdateDialog && (\r\n        <UpdateCCaseDialog\r\n          open={openUpdateDialog}\r\n          handleClose={() => setOpenUpdateDialog(false)}\r\n          clinical_case={ccaseValue}\r\n        />\r\n      )}\r\n    </BaseCardSection>\r\n  );\r\n}\r\n\r\nexport default CCasesPage;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { actions as hcnRedux } from \"../_redux/hcnRedux\";\r\n\r\nimport BaseModal from \"../../../components/UI/BaseModal.jsx\";\r\n\r\nfunction AddHcnDialog({ open, handleClose }) {\r\n  const { hcnList } = useSelector(state => state.hcn);\r\n  const dispatch = useDispatch();\r\n\r\n  const [ hcn_id, setHcnId ] = React.useState(undefined);\r\n\r\n  const validateInputs = () => {\r\n    let ok = true;\r\n    ok = ok && (hcn_id);\r\n    return ok;\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    if(!validateInputs()) return;\r\n    dispatch(hcnRedux.addHcnToCourse(parseInt(hcn_id)))\r\n    .then(() => handleClose())\r\n  };\r\n\r\n\r\n  return (\r\n    <BaseModal\r\n      title=\"Agregar caso clínico\"\r\n      open={open}\r\n      handleClose={() => handleClose()}\r\n      actions={[\r\n        {\r\n          content: \"Añadir\",\r\n          onClick: () => handleAdd()\r\n        },\r\n        {\r\n          content: \"Cancelar\",\r\n          onClick: () => handleClose(),\r\n          className: \"btn btn-secondary\"\r\n        }\r\n      ] }\r\n    >\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Description\">Casos clínicos</label>\r\n          <select \r\n            name=\"Type\" \r\n            id=\"Type\" \r\n            className=\"form-control\"\r\n            value={hcn_id}\r\n            onChange={event => setHcnId(event.target.value)}\r\n          >\r\n            <option value=\"\">Seleccionar</option>\r\n            {hcnList.map(({ ID }) => (\r\n              <option value={ ID } key={ ID }>{ ID }</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </form>\r\n    </BaseModal>\r\n  )\r\n}\r\n\r\nexport default AddHcnDialog;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, NavLink } from \"react-router-dom\";\r\nimport { actions as hcnRedux } from \"../modules/HCN/_redux/hcnRedux\";\r\nimport BaseSection from \"../components/UI/BaseSection\";\r\nimport AddHcnDialog from \"../modules/HCN/components/AddHcnDialog.jsx\";\r\nimport CardGridContainer from \"../components/UI/CardGridContainer\";\r\n\r\nfunction HcnPage() {\r\n  const { hcnList, hcnListByCourse } = useSelector((state) => state.hcn);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [openAddDialog, setOpenAddDialog] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(hcnRedux.getHcnListByCourse());\r\n  }, []);\r\n\r\n  return (\r\n    <BaseSection\r\n      title=\"Historias Clínicas Nutricionales\"\r\n      toolbar={[\r\n        {\r\n          title: \"Agregar\",\r\n          className: \"btn btn-primary btn-circle font-weight-bolder\",\r\n          onClick: () => setOpenAddDialog(true),\r\n        },\r\n        {\r\n          className: \"btn btn-primary btn-circle font-weight-bolder ml-2\",\r\n          onClick: () => history.push(\"/hcn/create\"),\r\n          title: \"+\",\r\n        },\r\n      ]}\r\n    >\r\n      <CardGridContainer data={hcnListByCourse}>\r\n        {(hcn) => (\r\n          <NavLink to={`/hcn/update/${hcnList[hcn.HCNID].MongoID}`}>\r\n            <div className=\"card custom-card\" style={{ height: \"150px\" }}>\r\n              <div className=\"d-flex card-body justify-content-center align-items-center\">\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span className=\"mt-1\">{hcn.HCNID}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </NavLink>\r\n        )}\r\n      </CardGridContainer>\r\n\r\n      {openAddDialog && (\r\n        <AddHcnDialog\r\n          open={openAddDialog}\r\n          handleClose={() => setOpenAddDialog(false)}\r\n        />\r\n      )}\r\n    </BaseSection>\r\n  );\r\n}\r\n\r\nexport default HcnPage;\r\n","import React from \"react\";\r\nimport {Redirect, Switch, Route} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { actions } from \"../Courses/_redux/coursesRedux\";\r\n\r\nimport Activities from \"../../pages/Activities.jsx\";\r\nimport Announcements from \"../../pages/Announcements.jsx\";\r\nimport CCasesPage from \"../../pages/CCasesPage.jsx\";\r\nimport HcnPage from \"../../pages/HcnPage.jsx\";\r\n\r\nexport default function CoursesRoute() {\r\n  const { currentCourse } = useSelector(state => state.courses);\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    if(currentCourse.id) {\r\n      dispatch(actions.getCourseData(currentCourse.id));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Switch>\r\n      <Redirect exact={true} from=\"/courses\" to=\"/courses/announcements\" />\r\n      {currentCourse.id ? (\r\n        <>\r\n        <Route exact={true} path=\"/courses/activities\" component={Activities} />\r\n        <Route exact={true} path=\"/courses/announcements\" component={Announcements} />\r\n        <Route exact={true} path=\"/courses/clinical-cases\" component={CCasesPage} />\r\n        <Route exact={true} path=\"/courses/hcn\" component={HcnPage} />\r\n        </>\r\n      ) : (\r\n        <Redirect to=\"/courses/all\" />\r\n      )}\r\n\r\n      \r\n      {/* <Route exact={true} path=\"/courses/:id\" component={(props) => <MainCoursePage {...props}/>} /> */}\r\n      <Redirect to=\"/error/404\"/> \r\n    </Switch>\r\n  );\r\n}"],"sourceRoot":""}