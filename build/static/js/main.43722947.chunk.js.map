{"version":3,"sources":["app/const/Crud.js","app/modules/Announcements/_redux/annCrud.js","app/modules/Announcements/_redux/annRedux.js","app/modules/Activities/_redux/activitiesCrud.js","app/modules/Activities/_redux/activitiesRedux.js","app/const/index.js","theme/layout/components/AsideNavbar.js","theme/layout/utils/Content.jsx","theme/helpers/AssetsHelpers.js","theme/layout/components/CustomNavbar.jsx","theme/layout/utils/Header.jsx","app/pages/Home.jsx","app/pages/CoursesPage.jsx","app/modules/Students/_redux/studentsCrud.js","app/modules/Students/_redux/studentsRedux.js","app/components/UI/NotificationBar.jsx","theme/layout/LoadingScreen.jsx","app/BasePage.js","app/pages/ErrorPages/404.jsx","app/pages/ErrorPages/ErrorPage.js","app/modules/Auth/_redux/authCrud.js","app/modules/Auth/components/Login.jsx","app/pages/AuthPage.jsx","app/Routes.js","app/App.js","redux/rootReducer.js","redux/store.js","app/reportWebVitals.js","index.js","app/const/data.js","app/modules/Auth/_redux/authRedux.js","app/modules/Courses/_redux/coursesCrud.js","app/modules/Courses/_redux/coursesRedux.js","app/modules/ClinicalCases/_redux/ccasesCrud.js","app/components/UI/BaseSection.jsx","app/components/UI/CardGridContainer.jsx","app/components/_redux/notificationRedux.js","app/modules/ClinicalCases/_redux/ccasesRedux.js","app/modules/HCN/_redux/hcnCrud.js","app/modules/HCN/_redux/hcnRedux.js"],"names":["makeRequest","path","method","headers","others","controller","AbortController","config","setTimeout","abort","Headers","timeout","signal","myRequest","Request","URL","fetch","createAnnouncement","props","authToken","Promise","resolve","reject","PATH_ANNOUNCEMENTS","Token","body","JSON","stringify","CourseID","Title","Description","CreationDate","then","response","ok","Error","status","json","catch","err","message","deleteAnnouncement","id","ID","actionTypes","getAnnouncementsList","dispatch","getState","params","courses","currentCourse","auth","getQueryParams","data","annSlice","actions","setList","type","list","filter","value","sort","a","b","Date","notificationActions","setNotification","ANNOUNCEMENTS","updateAnnouncement","requestFromServer","console","log","createSlice","name","initialState","announcementslist","annState","loading","reducers","state","action","payload","getAllActivities","PATH_ACTIVITIES","updateActivity","Type","LimitDate","ClinicalCaseID","HCNID","Difficulty","createActivity","TeacherID","deleteActivity","getAllSolvedHcn","getActivitiesList","activitiesSlice","ACTIVITIES","userId","user","setGradeList","activitieslist","gradeList","filters","ans","first","str","base64ToBlob","base64","binaryString","window","atob","len","length","bytes","Uint8Array","i","charCodeAt","Blob","initialHcnValues","ConsultationReason","Interpretation","Feedback","GeneralData_ValorationDate","GeneralData_HCNNumber","GeneralData_AdmissionDate","GeneralData_Room","GeneralData_Interpretation","GeneralData_Feedback","PatientData_FullName","PatientData_Birthdate","PatientData_Gender","PatientData_Sex","PatientData_EPS","PatientData_Telephone","PatientData_Occupation","PatientData_CivilStatus","PatientData_Interpretation","PatientData_Feedback","Anthropometry_Interpretation","Anthropometry_Feedback","Anthropometry_Weight_Actual","Anthropometry_Weight_Usual","Anthropometry_Weight_Reference","Anthropometry_Weight_ChangeWeight","Anthropometry_Weight_Interpretation","Anthropometry_Weight_Feedback","Anthropometry_TricipitalFold_Value","Anthropometry_TricipitalFold_Interpretation","Anthropometry_TricipitalFold_Feedback","Anthropometry_BrachialPerimeter_Value","Anthropometry_BrachialPerimeter_Interpretation","Anthropometry_BrachialPerimeter_Feedback","Anthropometry_AbdominalPerimeter_Value","Anthropometry_AbdominalPerimeter_Interpretation","Anthropometry_AbdominalPerimeter_Feedback","Anthropometry_SubscapularFold_Value","Anthropometry_SubscapularFold_Interpretation","Anthropometry_SubscapularFold_Feedback","Anthropometry_Height_Value","Anthropometry_Height_Interpretation","Anthropometry_Height_Feedback","Anthropometry_Structure_Value","Anthropometry_Structure_Interpretation","Anthropometry_Structure_Feedback","Anthropometry_BMI_Value","Anthropometry_BMI_Interpretation","Anthropometry_BMI_Feedback","Biochemistry_Interpretation","Biochemistry_Feedback","AsideNavbar","className","data-menu-vertical","data-menu-scroll","data-menu-dropdown-timeout","aria-haspopup","to","icon","faBullhorn","width","height","faBriefcase","faClinicMedical","faNotesMedical","Content","children","aside","toAbsoluteUrl","pathname","process","ContentRoute","component","React","createElement","CustomNavbar","useSelector","useDispatch","Navbar","bg","variant","Brand","href","src","Nav","Link","Collapse","NavDropdown","title","Name","Divider","Item","onClick","authActions","logout","Header","EmptySection","Home","hcnList","hcn","ccasesList","clinicalCases","coursesList","BaseSection","CardGridContainer","limit","size","course","style","courseRedux","setCurrentCourse","faChalkboardTeacher","clinical_case","MongoID","CoursesPage","useEffect","getCoursesList","getAllStudents","PATH_STUDENTS","studentsSlice","studentsList","Alert","elevation","NotificationBar","open","setOpen","severity","anchorOrigin","vertical","horizontal","handleClose","event","reason","Snackbar","autoHideDuration","onClose","LoadingScreen","CircularProgress","color","CoursesRoute","lazy","CCasesRoute","HcnRoute","BasePage","notifications","ccasesRedux","getCCasesList","hcnRedux","getHcnList","studentsRedux","Suspense","fallback","exact","from","setNotificationField","page404","ErrorsPage","PATH_LOGIN","username","password","Email","Password","token","initialValues","Login","LoginSchema","Yup","shape","min","max","required","formik","useFormik","validationSchema","onSubmit","values","setStatus","setSubmitting","login","fulfillUser","borderTop","display","marginLeft","marginRight","alt","handleSubmit","htmlFor","touched","errors","placeholder","getFieldProps","disabled","isSubmitting","backgroundColor","AuthPage","padding","Routes","isAuthorized","shallowEqual","App","store","persistor","basename","rootReducer","combineReducers","notificationSlice","reducer","announcements","activities","coursesSlice","ccasesSlice","hcnSlice","students","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","configureStore","devTools","persistStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","COURSES","CCASES","HCN","Logout","Register","UserRequested","UserLoaded","setSessionExpired","initialAuthState","undefined","sessionExpired","persistReducer","storage","key","whitelist","register","requestUser","setUser","SetUser","PATH_COURSES","PATH_GET_ALL_COURSES","PATH_GET_COURSE","getAllCourses","getCourse","initCoursesState","announcementsList","activitiesList","set_list","set_current_course","field","setCoursesList","getCourseData","find","PATH_GET_ALL_CCASES_BY_COURSE","PATH_ADD_CCASE_TO_COURSE","PATH_REMOVE_CCASE_TO_COURSE","getAllCCases","PATH_CCASES","getCCase","getAllCCasesByCourse","addCCaseToCourse","Displayable","removeCCaseToCourse","createCCase","Media","updateCCase","deleteCCase","toolbar","map","index","push","slice","getCardsList","row","j","Math","ceil","errorMessage","msg","getCCasesListByCourse","setListByCourse","all","ccase","addListByCourse","sortListByCourse","sort_by","removeCCase","deleteCCaseByCourse","ccasesListByCourse","PATH_GET_ALL_HCN_BY_COURSE","PATH_ADD_HCN_TO_COURSE","getAllHcn","PATH_HCN","getAllHcnByCourse","addHcnToCourse","createHcn","updateHcn","getHcn","getHcnListByCourse","hcnListByCourse"],"mappings":"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","file":"static/js/main.43722947.chunk.js","sourcesContent":["import { URL } from \".\";\r\n\r\n/**\r\n *\r\n * @param {string} path\r\n */\r\nfunction makeRequest({ path, method, headers, ...others }) {\r\n  const timeout = 4000;\r\n  const controller = new AbortController();\r\n  const id = setTimeout(() => controller.abort(), timeout);\r\n  let config = {\r\n    method,\r\n    headers: headers ? headers : new Headers(),\r\n    timeout,\r\n    signal: controller.signal,\r\n    ...others,\r\n  };\r\n  let myRequest = new Request(URL + path, config);\r\n  return fetch(myRequest);\r\n}\r\n\r\nexport default makeRequest;\r\n","import makeRequest from \"../../../const/Crud\";\r\nimport { getQueryParams } from \"../../../const\";\r\n\r\nexport const PATH_ANNOUNCEMENTS = \"/Announcements\";\r\n\r\nexport const PATH_GET_ALL_ANNOUNCEMENTS =\r\n  PATH_ANNOUNCEMENTS + \"/GetAllAnnouncements\";\r\nexport const PATH_GET_ANNOUNCEMENT = PATH_ANNOUNCEMENTS + \"/GetAnnouncement\";\r\nexport const PATH_UPDATE_ANNOUNCEMENT =\r\n  PATH_ANNOUNCEMENTS + \"/UpdateAnnouncement\";\r\nexport const PATH_CREATE_ANNOUNCEMENT =\r\n  PATH_ANNOUNCEMENTS + \"/CreateAnnouncement\";\r\nexport const PATH_DELETE_ANNOUNCEMENT =\r\n  PATH_ANNOUNCEMENTS + \"/DeleteAnnouncement\";\r\n\r\nexport function getAllAnnouncements(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_ANNOUNCEMENTS + getQueryParams(params),\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function getAnnouncement(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ANNOUNCEMENT + getQueryParams(params),\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function updateAnnouncement(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_UPDATE_ANNOUNCEMENT,\r\n      method: \"PUT\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n      body: JSON.stringify({\r\n        ID: props.ID,\r\n        CourseID: props.CourseID,\r\n        Title: props.Title,\r\n        Description: props.Description,\r\n        CreationDate: props.CreationDate,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function createAnnouncement(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_CREATE_ANNOUNCEMENT,\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n      body: JSON.stringify({\r\n        CourseID: props.CourseID,\r\n        Title: props.Title,\r\n        Description: props.Description,\r\n        CreationDate: props.CreationDate,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function deleteAnnouncement(id, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_DELETE_ANNOUNCEMENT,\r\n      method: \"DELETE\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n      body: JSON.stringify({\r\n        ID: id,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        resolve(response);\r\n      })\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { notificationActions } from \"app/components/_redux/notificationRedux\";\r\nimport * as requestFromServer from \"./annCrud\";\r\nimport * as authRedux from \"../../Auth/_redux/authRedux\";\r\nimport { ANNOUNCEMENTS } from \"../../../const/data\";\r\n\r\nconst initAnnState = {\r\n  announcementslist: [],\r\n  annState: {\r\n    loading: false,\r\n  },\r\n};\r\n\r\nconst actionTypes = {\r\n  set_list: \"SET_LIST\",\r\n};\r\n\r\nconst setList = (list) => (dispatch) => {\r\n  dispatch(annSlice.actions.setList({ type: actionTypes.set_list, list }));\r\n};\r\n\r\nconst getAnnouncementsList = () => (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer\r\n    .getAllAnnouncements({ CourseID }, getState().auth.authToken)\r\n    .then((data) => {\r\n      dispatch(\r\n        annSlice.actions.setList({\r\n          type: actionTypes.set_list,\r\n          list: data\r\n            .filter((value) => value.CourseID === CourseID)\r\n            .sort(\r\n              (a, b) => new Date(b.CreationDate) - new Date(a.CreationDate)\r\n            ),\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n      dispatch(\r\n        annSlice.actions.setList({\r\n          type: actionTypes.set_list,\r\n          list: ANNOUNCEMENTS.filter((value) => value.CourseID === CourseID),\r\n        })\r\n      );\r\n    });\r\n};\r\n\r\nconst updateAnnouncement = (props) => (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer\r\n    .updateAnnouncement({ ...props, CourseID }, getState().auth.authToken)\r\n    .then(() => {\r\n      dispatch(\r\n        notificationActions.setNotification(\"Anuncio actualizado exitosamente\")\r\n      );\r\n      dispatch(getAnnouncementsList());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nconst createAnnouncement = (props) => async (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer\r\n    .createAnnouncement({ ...props, CourseID }, getState().auth.authToken)\r\n    .then(() => {\r\n      dispatch(\r\n        notificationActions.setNotification(\"Anuncio creado exitosamente\")\r\n      );\r\n      dispatch(getAnnouncementsList());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nconst deleteAnnouncement = (id) => async (dispatch, getState) => {\r\n  return requestFromServer\r\n    .deleteAnnouncement(id, getState().auth.authToken)\r\n    .then(() => {\r\n      dispatch(\r\n        notificationActions.setNotification(\"Anuncio eliminado exitosamente\")\r\n      );\r\n      dispatch(getAnnouncementsList());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nexport const actions = {\r\n  setList,\r\n  getAnnouncementsList,\r\n  updateAnnouncement,\r\n  createAnnouncement,\r\n  deleteAnnouncement,\r\n};\r\n\r\nexport const annSlice = createSlice({\r\n  name: \"Adv\",\r\n  initialState: initAnnState,\r\n  reducers: {\r\n    setList: (state, action) => {\r\n      const { list } = action.payload;\r\n      state.announcementslist = list;\r\n    },\r\n  },\r\n});\r\n","import makeRequest from \"../../../const/Crud\";\r\nimport { getQueryParams } from \"../../../const\";\r\n\r\nexport const PATH_ACTIVITIES = \"/Activities\";\r\n\r\nexport const PATH_GET_ALL_ACTIVITIES = PATH_ACTIVITIES + \"/GetAllActivities\";\r\nexport const PATH_GET_ACTIVITY = PATH_ACTIVITIES + \"/GetActivity\";\r\nexport const PATH_UPDATE_ACTIVITY = PATH_ACTIVITIES + \"/UpdateActivity\";\r\nexport const PATH_CREATE_ACTIVITY = PATH_ACTIVITIES + \"/CreateActivity\";\r\nexport const PATH_DELETE_ACTIVITY = PATH_ACTIVITIES + \"/DeleteActivity\";\r\n\r\nexport const PATH_GET_ALL_SOLVED_HCN = \"/SolvedHCN/GetAllSolvedHCN\";\r\n\r\nexport function getAllActivities(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_ACTIVITIES + getQueryParams(params),\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function getActivity(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ACTIVITY + getQueryParams(params),\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function updateActivity(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_UPDATE_ACTIVITY,\r\n      method: \"PUT\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n      body: JSON.stringify({\r\n        ID: props.ID,\r\n        Title: props.Title,\r\n        Description: props.Description,\r\n        Type: props.Type,\r\n        CreationDate: props.CreationDate,\r\n        LimitDate: props.LimitDate,\r\n        CourseID: props.CourseID,\r\n        ClinicalCaseID: props.ClinicalCaseID,\r\n        HCNID: props.HCNID,\r\n        Difficulty: props.Difficulty,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function createActivity(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_CREATE_ACTIVITY,\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n      body: JSON.stringify({\r\n        Title: props.Title,\r\n        Description: props.Description,\r\n        Type: props.Type,\r\n        CreationDate: props.CreationDate,\r\n        LimitDate: props.LimitDate,\r\n        CourseID: props.CourseID,\r\n        ClinicalCaseID: props.ClinicalCaseID,\r\n        HCNID: props.HCNID,\r\n        Difficulty: props.Difficulty,\r\n        TeacherID: props.TeacherID,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function deleteActivity(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_DELETE_ACTIVITY,\r\n      method: \"DELETE\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n      body: JSON.stringify({\r\n        ID: props.ID,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return \"It Works!\";\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function getAllSolvedHcn(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_SOLVED_HCN + getQueryParams(params),\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { notificationActions } from \"app/components/_redux/notificationRedux\";\r\nimport * as requestFromServer from \"./activitiesCrud\";\r\n\r\nimport { ACTIVITIES } from \"../../../const/data\";\r\n\r\nconst initActivitiesState = {\r\n  activitieslist: [],\r\n  gradeList: [],\r\n};\r\n\r\nconst actionTypes = {\r\n  set_list: \"SET_LIST\",\r\n  set_grade_list: \"SET_GRADE_LIST\",\r\n};\r\n\r\nconst setList = (list) => (dispatch) => {\r\n  dispatch(\r\n    activitiesSlice.actions.setList({ type: actionTypes.set_list, list })\r\n  );\r\n};\r\n\r\nconst getActivitiesList = () => async (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer\r\n    .getAllActivities({ CourseID }, getState().auth.authToken)\r\n    .then((data) => {\r\n      dispatch(\r\n        activitiesSlice.actions.setList({\r\n          type: actionTypes.set_list,\r\n          list: data\r\n            .filter((value) => value.CourseID === CourseID)\r\n            .sort(\r\n              (a, b) => new Date(b.CreationDate) - new Date(a.CreationDate)\r\n            ),\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n      dispatch(\r\n        activitiesSlice.actions.setList({\r\n          type: actionTypes.set_list,\r\n          list: ACTIVITIES,\r\n        })\r\n      );\r\n    });\r\n};\r\n\r\nconst updateActivity = (props) => async (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer\r\n    .updateActivity({ ...props, CourseID }, getState().auth.authToken)\r\n    .then(() => {\r\n      dispatch(\r\n        notificationActions.setNotification(\r\n          \"Actividad actualizada exitosamente\"\r\n        )\r\n      );\r\n      dispatch(getActivitiesList());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nconst createActivity = (props) => async (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  const userId = getState().auth.user.ID;\r\n  console.log(userId);\r\n  return requestFromServer\r\n    .createActivity(\r\n      { ...props, CourseID, TeacherID: userId },\r\n      getState().auth.authToken\r\n    )\r\n    .then(() => {\r\n      dispatch(\r\n        notificationActions.setNotification(\"Actividad creada exitosamente\")\r\n      );\r\n      dispatch(getActivitiesList());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nconst deleteActivity = (id) => async (dispatch, getState) => {\r\n  return requestFromServer\r\n    .deleteActivity({ ID: id }, getState().auth.authToken)\r\n    .then(() => {\r\n      dispatch(\r\n        notificationActions.setNotification(\"Actividad eliminada exitosamente\")\r\n      );\r\n      dispatch(getActivitiesList());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nconst getAllSolvedHcn = (id) => async (dispatch, getState) => {\r\n  return requestFromServer\r\n    .getAllSolvedHcn({ id }, getState().auth.authToken)\r\n    .then((data) => {\r\n      dispatch(\r\n        activitiesSlice.actions.setGradeList({\r\n          type: actionTypes.set_grade_list,\r\n          list: data,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nexport const actions = {\r\n  setList,\r\n  getActivitiesList,\r\n  updateActivity,\r\n  createActivity,\r\n  deleteActivity,\r\n  getAllSolvedHcn,\r\n};\r\n\r\nexport const activitiesSlice = createSlice({\r\n  name: \"Activies\",\r\n  initialState: initActivitiesState,\r\n  reducers: {\r\n    setList: (state, action) => {\r\n      const { list } = action.payload;\r\n      console.log(list);\r\n      state.activitieslist = list;\r\n    },\r\n    setGradeList: (state, action) => {\r\n      const { list } = action.payload;\r\n      console.log(list);\r\n      state.gradeList = list;\r\n    },\r\n  },\r\n});\r\n","export const URL = \"http://104.44.129.29:3600\";\r\n\r\nexport function getQueryParams(filters) {\r\n  let ans = \"\";\r\n  let first = true;\r\n  for (const filter in filters) {\r\n    if (filters[filter] !== \"\") {\r\n      var str;\r\n      if (first) [str, first] = [\"?\", false];\r\n      else str = \"&\";\r\n      \r\n      switch (filter) {\r\n        default:\r\n          ans += str + `${filter}=${filters[filter]}`; \r\n          break;\r\n      }\r\n    }\r\n  }\r\n  return ans;\r\n}\r\n\r\nexport function base64ToBlob(base64) {\r\n  const binaryString = window.atob(base64);\r\n  const len = binaryString.length;\r\n  const bytes = new Uint8Array(len);\r\n  for (let i = 0; i < len; ++i) {\r\n    bytes[i] = binaryString.charCodeAt(i);\r\n  }\r\n  return new Blob([bytes], { type: 'application/pdf' });\r\n};\r\n\r\n\r\nexport const activityTypes = {\r\n  qualifying: \"Calificable\"\r\n};\r\n\r\nexport const initialHcnValues = {\r\n  ConsultationReason: \"\",\r\n  Interpretation: \"\",\r\n  Feedback: \"\",\r\n\r\n  // General data\r\n  GeneralData_ValorationDate: \"\",\r\n  GeneralData_HCNNumber: \"\",\r\n  GeneralData_AdmissionDate: \"\",\r\n  GeneralData_Room: \"\",\r\n  GeneralData_Interpretation: \"\",\r\n  GeneralData_Feedback: \"\",\r\n\r\n  // Patient Data\r\n  PatientData_FullName: \"\",\r\n  PatientData_Birthdate: \"\",\r\n  PatientData_Gender: \"\",\r\n  PatientData_Sex: \"\",\r\n  PatientData_EPS: \"\",\r\n  PatientData_Telephone: \"\",\r\n  PatientData_Occupation: \"\",\r\n  PatientData_CivilStatus: \"\",\r\n  PatientData_Interpretation: \"\",\r\n  PatientData_Feedback: \"\",\r\n\r\n  // Anthropometry\r\n  Anthropometry_Interpretation: \"\",\r\n  Anthropometry_Feedback: \"\",\r\n\r\n  Anthropometry_Weight_Actual: \"\",\r\n  Anthropometry_Weight_Usual: \"\",\r\n  Anthropometry_Weight_Reference: \"\",\r\n  Anthropometry_Weight_ChangeWeight: \"\",\r\n  Anthropometry_Weight_Interpretation: \"\",\r\n  Anthropometry_Weight_Feedback: \"\",\r\n\r\n  Anthropometry_TricipitalFold_Value: \"\",\r\n  Anthropometry_TricipitalFold_Interpretation: \"\",\r\n  Anthropometry_TricipitalFold_Feedback: \"\",\r\n\r\n  Anthropometry_BrachialPerimeter_Value: \"\",\r\n  Anthropometry_BrachialPerimeter_Interpretation: \"\",\r\n  Anthropometry_BrachialPerimeter_Feedback: \"\",\r\n\r\n  Anthropometry_AbdominalPerimeter_Value: \"\",\r\n  Anthropometry_AbdominalPerimeter_Interpretation: \"\",\r\n  Anthropometry_AbdominalPerimeter_Feedback: \"\",\r\n\r\n  Anthropometry_SubscapularFold_Value: \"\",\r\n  Anthropometry_SubscapularFold_Interpretation: \"\",\r\n  Anthropometry_SubscapularFold_Feedback: \"\",\r\n\r\n  Anthropometry_Height_Value: \"\",\r\n  Anthropometry_Height_Interpretation: \"\",\r\n  Anthropometry_Height_Feedback: \"\",\r\n\r\n  Anthropometry_Structure_Value: \"\",\r\n  Anthropometry_Structure_Interpretation: \"\",\r\n  Anthropometry_Structure_Feedback: \"\",\r\n\r\n  Anthropometry_BMI_Value: \"\",\r\n  Anthropometry_BMI_Interpretation: \"\",\r\n  Anthropometry_BMI_Feedback: \"\",\r\n\r\n  // Biochemistry\r\n  Biochemistry_Interpretation: \"\",\r\n  Biochemistry_Feedback: \"\",\r\n};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBullhorn,\r\n  faBriefcase,\r\n  faClinicMedical,\r\n  faNotesMedical,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction AsideNavbar() {\r\n  const menuItem = (icon, children) => (\r\n    <div>\r\n      <div className=\"col\"></div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    /* begin::aside-manu */\r\n    <div id=\"kt_aside\" className=\"sidebar d-flex flex-column flex-row-auto\">\r\n      <div\r\n        id=\"kt_aside_menu\"\r\n        className=\"my-4 scroll ps ps--active-y\"\r\n        data-menu-vertical=\"1\"\r\n        data-menu-scroll=\"1\"\r\n        data-menu-dropdown-timeout=\"500\"\r\n      >\r\n        <ul className=\"nav\">\r\n          <li aria-haspopup=\"true\" className=\"nav-item\">\r\n            <NavLink to=\"announcements\" className=\"nav-link\">\r\n              <FontAwesomeIcon\r\n                icon={faBullhorn}\r\n                width=\"24\"\r\n                height=\"24\"\r\n                className=\"nav-icon\"\r\n              />\r\n              <span>Anuncios</span>\r\n            </NavLink>\r\n          </li>\r\n          <li aria-haspopup=\"true\" className=\"nav-item\">\r\n            <NavLink to=\"activities\" className=\"nav-link\">\r\n              <FontAwesomeIcon icon={faBriefcase} className=\"nav-icon\" />\r\n              <span className=\"menu-text\">Actividades</span>\r\n            </NavLink>\r\n          </li>\r\n          <li aria-haspopup=\"true\">\r\n            <NavLink to=\"clinical-cases\">\r\n              <FontAwesomeIcon icon={faClinicMedical} />\r\n              <span className=\"menu-text\">Casos clínicos</span>\r\n            </NavLink>\r\n          </li>\r\n          <li aria-haspopup=\"true\" className=\"nav-item\">\r\n            <NavLink to=\"hcn\" className=\"nav-link\">\r\n              <FontAwesomeIcon icon={faNotesMedical} className=\"nav-icon\" />\r\n              <span className=\"menu-text\">HCN</span>\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AsideNavbar;\r\n","import React from \"react\";\r\nimport AsideNavbar from \"../components/AsideNavbar\";\r\n\r\nexport function Content({ children, aside = true }) {\r\n  return (\r\n    <div className=\"d-flex flex-row\">\r\n      {aside && <AsideNavbar />}\r\n      <div className={`content ${aside ? \"with-aside\" : \"\"}`}>{children}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Content } from \"../layout\";\r\n\r\nexport const toAbsoluteUrl = (pathname) => process.env.PUBLIC_URL + pathname;\r\n\r\nexport function ContentRoute({ component, aside = false, ...props }) {\r\n  return (\r\n    <Route {...props}>\r\n      <Content aside={aside}>{React.createElement(component)}</Content>\r\n    </Route>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { toAbsoluteUrl } from \"../../helpers\";\r\nimport { actions as authActions } from \"../../../app/modules/Auth/_redux/authRedux\";\r\n\r\nfunction CustomNavbar() {\r\n  const { user } = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  \r\n  const handleLogout = () => dispatch(authActions.logout());\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" className=\"header navbar-default navbar-fixed-top fixed-top\">\r\n      <Navbar.Brand href=\"/home\">\r\n        <img className=\"logo\" src={toAbsoluteUrl(\"/media/logos/logo_v1.png\")}/>{' '}\r\n        Historias Clínicas Nutricionales\r\n      </Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"/courses\">Mis cursos</Nav.Link>\r\n      </Nav>\r\n      <Navbar.Collapse className=\"justify-content-end navbar-dropdown\">\r\n        <NavDropdown title={user.Name} id=\"collasible-nav-dropdown\">\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item>\r\n             <button className=\"btn btn-danger\" onClick={handleLogout}>Cerrar sesión</button>\r\n          </NavDropdown.Item>\r\n        </NavDropdown>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default CustomNavbar;","import React from \"react\";\r\nimport CustomNavbar from \"../components/CustomNavbar.jsx\";\r\n\r\nexport function Header({ children }) {\r\n  return (\r\n    <div className=\"d-flex flex-column\">\r\n      <CustomNavbar />\r\n      <div className=\"page\">\r\n        { children }\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChalkboardTeacher } from \"@fortawesome/free-solid-svg-icons\";\r\nimport BaseSection from \"app/components/UI/BaseSection\";\r\nimport CardGridContainer from \"app/components/UI/CardGridContainer\";\r\nimport { actions as courseRedux } from \"app/modules/Courses/_redux/coursesRedux\";\r\n\r\nconst EmptySection = () => (\r\n  <div>\r\n    <span>No hay datos para mostrar en este momento</span>\r\n  </div>\r\n);\r\n\r\nfunction Home() {\r\n  const { hcnList } = useSelector((state) => state.hcn);\r\n  const { ccasesList } = useSelector((state) => state.clinicalCases);\r\n  const { coursesList } = useSelector((state) => state.courses);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCourse = (id) => {\r\n    dispatch(courseRedux.setCurrentCourse(\"id\", id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BaseSection title=\"Cursos\" className=\"mb-5\">\r\n        {coursesList.length ? (\r\n          <CardGridContainer data={coursesList} limit={4} size={4}>\r\n            {(course) => (\r\n              <NavLink to=\"/courses\">\r\n                <div\r\n                  className=\"card custom-card\"\r\n                  style={{ height: \"150px\" }}\r\n                  onClick={() => handleCourse(course.ID)}\r\n                >\r\n                  <div className=\"d-flex card-body justify-content-center align-items-center\">\r\n                    <div className=\"d-flex flex-column align-items-center\">\r\n                      <FontAwesomeIcon icon={faChalkboardTeacher} size=\"3x\" />\r\n                      <span className=\"mt-1\">{course.Name}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </NavLink>\r\n            )}\r\n          </CardGridContainer>\r\n        ) : (\r\n          <EmptySection />\r\n        )}\r\n      </BaseSection>\r\n      <BaseSection title=\"Casos Clínicos\" className=\"mb-5\">\r\n        {ccasesList.length ? (\r\n          <CardGridContainer data={ccasesList} limit={4} size={4}>\r\n            {(clinical_case) => (\r\n              <NavLink to={`/clinical-cases/${clinical_case.ID}`}>\r\n                <div className=\"card custom-card\" style={{ height: \"150px\" }}>\r\n                  <div className=\"d-flex card-body justify-content-center align-items-center\">\r\n                    <div className=\"d-flex flex-column align-items-center\">\r\n                      <span className=\"mt-1\">{clinical_case.Title}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </NavLink>\r\n            )}\r\n          </CardGridContainer>\r\n        ) : (\r\n          <EmptySection />\r\n        )}\r\n      </BaseSection>\r\n      <BaseSection title=\"Historias Clínicas Nutricionales\" className=\"pb-5\">\r\n        {hcnList.length ? (\r\n          <CardGridContainer data={hcnList} limit={4} size={4}>\r\n            {(hcn) => (\r\n              <NavLink to={`/hcn/update/${hcn.MongoID}`}>\r\n                <div className=\"card custom-card\" style={{ height: \"150px\" }}>\r\n                  <div className=\"d-flex card-body justify-content-center align-items-center\">\r\n                    <div className=\"d-flex flex-column align-items-center\">\r\n                      <span className=\"mt-1\">{hcn.ID}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </NavLink>\r\n            )}\r\n          </CardGridContainer>\r\n        ) : (\r\n          <EmptySection />\r\n        )}\r\n      </BaseSection>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChalkboardTeacher } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport BaseSection from \"../components/UI/BaseSection\";\r\n\r\nimport { actions } from \"../modules/Courses/_redux/coursesRedux\";\r\nimport CardGridContainer from \"../components/UI/CardGridContainer\";\r\n\r\nfunction CoursesPage() {\r\n  const { coursesList } = useSelector((state) => state.courses);\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(actions.getCoursesList());\r\n  }, [dispatch]);\r\n\r\n  const handleCourse = (id) => {\r\n    dispatch(actions.setCurrentCourse(\"id\", id));\r\n  };\r\n\r\n  return (\r\n    <BaseSection title=\"Cursos\">\r\n      {/* Courses */}\r\n      {coursesList ? (\r\n        <CardGridContainer data={coursesList}>\r\n          {(course) => (\r\n            <NavLink to=\"/courses\">\r\n              <div\r\n                className=\"card custom-card\"\r\n                style={{ height: \"150px\" }}\r\n                onClick={() => handleCourse(course.ID)}\r\n              >\r\n                <div className=\"d-flex card-body justify-content-center align-items-center\">\r\n                  <div className=\"d-flex flex-column align-items-center\">\r\n                    <FontAwesomeIcon icon={faChalkboardTeacher} size=\"3x\" />\r\n                    <span className=\"mt-1\">{course.Name}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </NavLink>\r\n          )}\r\n        </CardGridContainer>\r\n      ) : (\r\n        <div>\r\n          <span>No hay datos para mostrar en este momento</span>\r\n        </div>\r\n      )}\r\n    </BaseSection>\r\n  );\r\n}\r\n\r\nexport default CoursesPage;\r\n","import makeRequest from \"app/const/Crud\";\r\nimport { getQueryParams } from \"../../../const\";\r\n\r\nexport const PATH_STUDENTS = \"/Students\";\r\n\r\nexport const PATH_GET_ALL_STUDENTS = PATH_STUDENTS + \"/GetAllStudents\";\r\nexport const PATH_GET_STUDENT = PATH_STUDENTS + \"/GetStudent\";\r\nexport const PATH_UPDATE_STUDENT = PATH_STUDENTS + \"/UpdateStudent\";\r\nexport const PATH_CREATE_STUDENT = PATH_STUDENTS + \"/CreateStudent\";\r\nexport const PATH_DELETE_STUDENT = PATH_STUDENTS + \"/DeleteStudent\";\r\n\r\nexport function getAllStudents(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_STUDENTS + getQueryParams(params),\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function getStudent(params, authToken) {\r\n  return makeRequest({\r\n    path: PATH_GET_STUDENT + getQueryParams(params),\r\n    method: \"GET\",\r\n    headers: new Headers(),\r\n  });\r\n}\r\n\r\nexport function updateStudent(props, authToken) {\r\n  return makeRequest({\r\n    path: PATH_UPDATE_STUDENT,\r\n    method: \"POST\",\r\n    headers: new Headers(),\r\n    body: JSON.stringify({\r\n      ID: props.id,\r\n      Name: props.name,\r\n      Email: props.email,\r\n    }),\r\n  });\r\n}\r\n\r\nexport function createStudent(props, authToken) {\r\n  return makeRequest({\r\n    path: PATH_CREATE_STUDENT,\r\n    method: \"POST\",\r\n    headers: new Headers(),\r\n    body: JSON.stringify({\r\n      ID: props.id,\r\n      Name: props.name,\r\n      Email: props.email,\r\n    }),\r\n  });\r\n}\r\n\r\nexport function deleteStudent(authToken) {\r\n  return makeRequest({\r\n    path: PATH_DELETE_STUDENT,\r\n    method: \"DELETE\",\r\n    headers: new Headers(),\r\n  });\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { notificationActions } from \"app/components/_redux/notificationRedux\";\r\nimport * as requestFromServer from \"./studentsCrud\";\r\n\r\nconst initialState = {\r\n  studentsList: [],\r\n};\r\n\r\nconst actionTypes = {\r\n  set_list: \"SET_LIST\",\r\n};\r\n\r\nconst getStudentsList = (params) => async (dispatch, getState) => {\r\n  return requestFromServer\r\n    .getAllStudents(params, getState().auth.authToken)\r\n    .then((data) => {\r\n      dispatch(\r\n        studentsSlice.actions.setList({\r\n          type: actionTypes.set_list,\r\n          list: data,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nexport const actions = {\r\n  getStudentsList,\r\n};\r\n\r\nexport const studentsSlice = createSlice({\r\n  name: \"students\",\r\n  initialState,\r\n  reducers: {\r\n    setList: (state, action) => {\r\n      const { list } = action.payload;\r\n      state.studentsList = list;\r\n    },\r\n  },\r\n});\r\n","import Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction NotificationBar(props) {\r\n  const {\r\n    open,\r\n    setOpen,\r\n    severity,\r\n    anchorOrigin = { vertical: \"bottom\", horizontal: \"right\" },\r\n    message,\r\n  } = props;\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      anchorOrigin={anchorOrigin}\r\n      autoHideDuration={4000}\r\n      onClose={handleClose}\r\n    >\r\n      <Alert onClose={handleClose} severity={severity}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n\r\nexport default NotificationBar;\r\n","import { CircularProgress } from \"@material-ui/core\";\r\n\r\nfunction LoadingScreen() {\r\n  return (\r\n    <div className=\"container vh-100\">\r\n      <div className=\"row h-100 text-center\">\r\n        <div className=\"col align-self-center\">\r\n          <CircularProgress className=\"ml-2\" size={50} color=\"primary\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default LoadingScreen;\r\n","import React from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ContentRoute } from \"../theme/helpers\";\r\nimport Home from \"./pages/Home.jsx\";\r\nimport CoursesPage from \"./pages/CoursesPage\";\r\nimport { notificationActions } from \"app/components/_redux/notificationRedux\";\r\nimport { actions as ccasesRedux } from \"app/modules/ClinicalCases/_redux/ccasesRedux\";\r\nimport { actions as hcnRedux } from \"app/modules/HCN/_redux/hcnRedux\";\r\nimport { actions as courseRedux } from \"app/modules/Courses/_redux/coursesRedux\";\r\nimport { actions as studentsRedux } from \"app/modules/Students/_redux/studentsRedux\";\r\nimport NotificationBar from \"./components/UI/NotificationBar\";\r\nimport LoadingScreen from \"theme/layout/LoadingScreen\";\r\n\r\nconst CoursesRoute = React.lazy(() => import(\"./modules/Courses/CoursesRoute\"));\r\n\r\nconst CCasesRoute = React.lazy(() =>\r\n  import(\"./modules/ClinicalCases/CCasesRoute.jsx\")\r\n);\r\n\r\nconst HcnRoute = React.lazy(() => import(\"./modules/HCN/HcnRoute.jsx\"));\r\n\r\nexport default function BasePage() {\r\n  const dispatch = useDispatch();\r\n  const { open, message, variant } = useSelector(\r\n    (state) => state.notifications\r\n  );\r\n\r\n  const setOpenNotification = (value) => {\r\n    dispatch(notificationActions.setNotificationField(\"open\", value));\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(ccasesRedux.getCCasesList());\r\n    dispatch(hcnRedux.getHcnList());\r\n    dispatch(courseRedux.getCoursesList());\r\n    dispatch(studentsRedux.getStudentsList());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <React.Suspense fallback={<LoadingScreen />}>\r\n      <Switch>\r\n        <Redirect exact={true} from=\"/\" to=\"/home\" />\r\n\r\n        <ContentRoute exact={true} path=\"/home\" component={Home} />\r\n        <ContentRoute path=\"/clinical-cases\" component={CCasesRoute} />\r\n        <ContentRoute path=\"/hcn\" component={HcnRoute} />\r\n\r\n        <ContentRoute\r\n          exact={true}\r\n          path=\"/courses/all\"\r\n          component={CoursesPage}\r\n        />\r\n        <ContentRoute path=\"/courses\" aside={true} component={CoursesRoute} />\r\n\r\n        <Redirect to=\"/error/404\" />\r\n      </Switch>\r\n\r\n      <NotificationBar\r\n        open={open}\r\n        setOpen={setOpenNotification}\r\n        message={message}\r\n        severity={variant}\r\n      />\r\n    </React.Suspense>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function page404() {\r\n  return (\r\n    <div className=\"container vh-100\">\r\n      <div className=\"row h-100 text-center\">\r\n        <div className=\"col align-self-center\">\r\n          <h1>Page not found (404)</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport page404 from \"./404.jsx\";\r\n\r\nexport default function ErrorsPage() {\r\n  return (\r\n    <Switch>\r\n      <Redirect from=\"/error\" exact={true} to=\"/error/404\" />\r\n      <Route path=\"/error/404\" component={page404} />\r\n      <Redirect to=\"/error\" />\r\n    </Switch>\r\n  );\r\n}\r\n","import makeRequest from \"../../../const/Crud\";\r\n\r\nexport const PATH_LOGIN = \"/Authentication/Login\";\r\n\r\nexport async function login(username, password) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_LOGIN,\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        Email: username,\r\n        Password: password,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n  switch (username) {\r\n    case \"juancmartinez\":\r\n      return new Promise((resolve, reject) => {\r\n        if (password === \"123\")\r\n          resolve({\r\n            token: \"ashjkqwertyui\",\r\n            user: { username: \"juancmartinez\", Name: \"Juan Carlos Martinez\" },\r\n          });\r\n        else reject(null);\r\n      });\r\n    case \"jhoanlozano\":\r\n      return new Promise((resolve, reject) => {\r\n        if (password === \"123\")\r\n          resolve({\r\n            token: \"ashjkqwertyui\",\r\n            user: { username: \"jhoanlozano\", Name: \"Jhoan Lozano\" },\r\n          });\r\n        else reject(null);\r\n      });\r\n    case \"xaviergarzon\":\r\n      return new Promise((resolve, reject) => {\r\n        if (password === \"123\")\r\n          resolve({\r\n            token: \"ashjkqwertyui\",\r\n            user: { username: \"xaviergarzon\", Name: \"Xavier Garzón\" },\r\n          });\r\n        else reject(null);\r\n      });\r\n\r\n    default:\r\n      return new Promise((resolve, reject) => {\r\n        console.log(\"aqui\");\r\n        reject(\"Rechazado\");\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { toAbsoluteUrl } from \"theme/helpers\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { login } from \"../_redux/authCrud\";\r\nimport { actions as authActions } from \"../_redux/authRedux\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst initialValues = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nfunction Login() {\r\n  const dispatch = useDispatch();\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .min(3, \"Mínimo 3 carácteres\")\r\n      .max(50, \"Máximo 50 carácteres\")\r\n      .required(\"Campo requerido\"),\r\n    password: Yup.string()\r\n      .min(3, \"Mínimo 3 carácteres\")\r\n      .max(50, \"Máximo 50 carácteres\")\r\n      .required(\"Campo requerido\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: LoginSchema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      setTimeout(() => {\r\n        login(values.username, values.password)\r\n          .then((response) => {\r\n            setSubmitting(false);\r\n            const { Token: token, ...user } = response;\r\n            dispatch(authActions.login(token));\r\n            dispatch(authActions.fulfillUser(user));\r\n          })\r\n          .catch(() => {\r\n            setSubmitting(false);\r\n            setStatus(\"Usuario o contraseña incorrectos\");\r\n          });\r\n      }, 1000);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"align-self-center\">\r\n      <div className=\"card col-12\" style={{ borderTop: \"5px solid #1B7B52\" }}>\r\n        <img\r\n          style={{\r\n            display: \"block\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n          }}\r\n          alt=\"HCN logo\"\r\n          src={toAbsoluteUrl(\"/media/logos/menta4.png\")}\r\n          width=\"100\"\r\n          height=\"100\"\r\n        />\r\n        <div className=\"card-body\">\r\n          <form onSubmit={formik.handleSubmit}>\r\n            {formik.status && (\r\n              <Alert variant=\"standard\" severity=\"error\">\r\n                {formik.status}\r\n              </Alert>\r\n            )}\r\n            <label htmlFor=\"username\">Nombre de usuario</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              className={`form-control ${\r\n                formik.touched.username\r\n                  ? formik.errors.username\r\n                    ? \"is-invalid\"\r\n                    : \"is-valid\"\r\n                  : \"\"\r\n              }`}\r\n              placeholder=\"Nombre de usuario\"\r\n              {...formik.getFieldProps(\"username\")}\r\n            />\r\n            <div className=\"invalid-feedback\">{formik.errors.username}</div>\r\n\r\n            <label htmlFor=\"username\" className=\"mt-2\">\r\n              Contraseña\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              className={`form-control ${\r\n                formik.touched.password\r\n                  ? formik.errors.password\r\n                    ? \"is-invalid\"\r\n                    : \"is-valid\"\r\n                  : \"\"\r\n              }`}\r\n              placeholder=\"Contraseña\"\r\n              {...formik.getFieldProps(\"password\")}\r\n            />\r\n            <div className=\"invalid-feedback\">{formik.errors.password}</div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-secondary font-weight-bold my-3\"\r\n              disabled={formik.isSubmitting}\r\n              style={{ backgroundColor: \"#343a40\" }}\r\n            >\r\n              <span>Iniciar sesión</span>\r\n              {formik.isSubmitting && (\r\n                <CircularProgress className=\"ml-2\" size={10} color=\"inherit\" />\r\n              )}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Redirect, Switch, Route } from \"react-router-dom\";\r\nimport Login from \"../modules/Auth/components/Login\";\r\n\r\nfunction AuthPage() {\r\n  return (\r\n    <div \r\n      className=\"container-fluid\"\r\n      style={{\r\n        //backgroundColor: \"#1B7B52\",\r\n        backgroundColor: \"#E5E5E5\",\r\n        height: \"100vh\",\r\n        padding: \"0px\"\r\n      }}\r\n      >\r\n        <div className=\"d-flex flex-column flex-row-fluid p-3 overflow-hidden h-100\">\r\n        {/* col-4 d-flex justify-content-center align-self-center */}\r\n          <div className=\"d-flex flex-column-fluid flex-center justify-content-center align-self-center h-100\">\r\n            <Switch>\r\n              <Route path=\"/auth/login\" component={Login} />\r\n              <Redirect from=\"/auth\" exact={true} to=\"/auth/login\" />\r\n              <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthPage;","import React from \"react\";\r\nimport { Redirect, Switch, Route } from \"react-router-dom\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Header } from \"../theme/layout\";\r\nimport BasePage from \"./BasePage\";\r\nimport ErrorsPage from \"./pages/ErrorPages/ErrorPage\";\r\nimport AuthPage from \"./pages/AuthPage\";\r\n\r\nexport default function Routes() {\r\n  const { isAuthorized } = useSelector(\r\n    ({ auth }) => ({\r\n      isAuthorized: auth.user != null,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  return (\r\n    <Switch>\r\n      {!isAuthorized ? (\r\n        <Route>\r\n          <AuthPage />\r\n        </Route>\r\n      ) : (\r\n        <Redirect from=\"/auth\" to=\"/\" />\r\n      )}\r\n\r\n      <Route path=\"/error\" component={ErrorsPage} />\r\n\r\n      {!isAuthorized ? (\r\n        /*Redirect to `/auth` when user is not authorized*/\r\n        <Redirect to=\"/auth/login\" />\r\n      ) : (\r\n        <Header>\r\n          <BasePage />\r\n        </Header>\r\n      )}\r\n    </Switch>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Routes from \"./Routes\";\r\n\r\nimport './App.css';\r\n\r\nfunction App({ store, persistor, basename }) {\r\n  return (\r\n    /* Provide Redux store */\r\n    <Provider store={store}>\r\n      {/* Asynchronously persist redux stores and show `SplashScreen` while it's loading. */}\r\n      <PersistGate persistor={persistor}>\r\n        <BrowserRouter basename={basename}>\r\n          <Routes /> \r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport * as auth from \"app/modules/Auth/_redux/authRedux\";\r\nimport { coursesSlice } from \"app/modules/Courses/_redux/coursesRedux\";\r\nimport { annSlice } from \"app/modules/Announcements/_redux/annRedux\";\r\nimport { activitiesSlice } from \"app/modules/Activities/_redux/activitiesRedux\";\r\nimport { ccasesSlice } from \"app/modules/ClinicalCases/_redux/ccasesRedux\";\r\nimport { hcnSlice } from \"app/modules/HCN/_redux/hcnRedux\";\r\nimport { notificationSlice } from \"app/components/_redux/notificationRedux\";\r\nimport { studentsSlice } from \"app/modules/Students/_redux/studentsRedux\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  auth: auth.reducer,\r\n  notifications: notificationSlice.reducer,\r\n  announcements: annSlice.reducer,\r\n  activities: activitiesSlice.reducer,\r\n  courses: coursesSlice.reducer,\r\n  clinicalCases: ccasesSlice.reducer,\r\n  hcn: hcnSlice.reducer,\r\n  students: studentsSlice.reducer,\r\n});\r\n","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport {persistStore} from \"redux-persist\";\r\nimport {rootReducer} from \"./rootReducer\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    immutableCheck: false,\r\n    serializableCheck: false,\r\n    thunk: true\r\n  }),\r\n  sagaMiddleware\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== \"production\"\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n//import 'bootstrap/dist/css/bootstrap.css';\r\nimport \"./index.css\";\r\nimport App from \"./app/App\";\r\nimport store, { persistor } from \"./redux/store\";\r\nimport reportWebVitals from \"./app/reportWebVitals\";\r\n\r\nconst { PUBLIC_URL } = process.env;\r\n\r\nReactDOM.render(\r\n  <App store={store} persistor={persistor} basename={PUBLIC_URL} />,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const ACTIVITIES = [{\"ID\":1,\"Title\":\"Primera tarea rey, matrices dispersas\",\"Description\":\"Re easy pri, solo busquen en Google.\",\"Type\":\"Calificable\",\"CreationDate\":\"2021-01-08 12:00:00\",\"LimitDate\":\"2021-01-10 12:00:00\",\"CourseID\":1,\"ClinicalCaseID\":3,\"HCNID\":1,\"Difficulty\":3},{\"ID\":2,\"Title\":\"Actividad de prueba\",\"Description\":\"Por favor ignoren esta actividad, gracias.\",\"Type\":\"Prueba\",\"CreationDate\":\"2021-01-09 11:43:21\",\"LimitDate\":\"2021-01-19 10:59:59\",\"CourseID\":2,\"ClinicalCaseID\":2,\"HCNID\":2,\"Difficulty\":1}];\r\nexport const STUDENTS = [{\"ID\":1,\"Name\":\"Daniel Gómez Sermeño\",\"Email\":\"goma@email.com\"},{\"ID\":2,\"Name\":\"Xavier Garzón López\",\"Email\":\"xavgar9@email.com\"},{\"ID\":3,\"Name\":\"Juan F. Gil\",\"Email\":\"transfer10@email.com\"},{\"ID\":4,\"Name\":\"Edgar Silva\",\"Email\":\"ednosil@email.com\"},{\"ID\":5,\"Name\":\"Juanita María Parra Villamíl\",\"Email\":\"juanitamariap@email.com\"},{\"ID\":6,\"Name\":\"Sebastián Rodríguez Osorio Silva\",\"Email\":\"sebasrosorio98@email.com\"},{\"ID\":7,\"Name\":\"Andrés Felipe Garcés\",\"Email\":\"andylukast@email.com\"}];\r\nexport const COURSES = [{\"ID\":1,\"TeacherID\":1,\"Name\":\"Introducción a Matlab\",\"CreationDate\":\"2021-01-01 12:00:00\"},{\"ID\":2,\"TeacherID\":1,\"Name\":\"Matlab avanzado\",\"CreationDate\":\"2021-01-01 12:20:08\"},{\"ID\":3,\"TeacherID\":2,\"Name\":\"Clases de piano\",\"CreationDate\":\"2021-01-06 15:21:50\"},{\"ID\":4,\"TeacherID\":3,\"Name\":\"Manejando en Cali\",\"CreationDate\":\"2021-01-05 11:40:12\"}];\r\nexport const ANNOUNCEMENTS = [{\"ID\":1,\"CourseID\":1,\"Title\":\"¡Bienvenidos al curso!\",\"Description\":\"Este es un curso básico de Matlab. LOS AMO.\",\"CreationDate\":\"2021-01-19 03:33:48\"},{\"ID\":2,\"CourseID\":1,\"Title\":\"¡Primera tarea!\",\"Description\":\"Resuelvan una matriz dispersa 100x100.\",\"CreationDate\":\"2021-01-19 03:33:48\"},{\"ID\":3,\"CourseID\":1,\"Title\":\"Hola a todos\",\"Description\":\"Hola muchachos, los quiero mucho. Estudien bye!\",\"CreationDate\":\"2021-01-19 03:33:48\"},{\"ID\":4,\"CourseID\":1,\"Title\":\"Material guía\",\"Description\":\"Busquen en Youtube. \\\"Accidentes de tránsito graves sin censura.\\\"\",\"CreationDate\":\"2021-01-19 03:33:48\"}];\r\nexport const FEEDBACKS = [{\"ID\":1,\"ActivityID\":1,\"StudentID\":1},{\"ID\":2,\"ActivityID\":1,\"StudentID\":2},{\"ID\":3,\"ActivityID\":1,\"StudentID\":3},{\"ID\":4,\"ActivityID\":1,\"StudentID\":4},{\"ID\":5,\"ActivityID\":1,\"StudentID\":5},{\"ID\":6,\"ActivityID\":1,\"StudentID\":6},{\"ID\":7,\"ActivityID\":1,\"StudentID\":7}];\r\n\r\n\r\nexport const CCASES = [{\"ID\":1,\"Title\":\"El joven parchado\",\"Description\":\"Benjamón era un joven con IMC PARCHADO.\",\"Media\":\"../activitiesresources/img1.png\",\"TeacherID\":1},{\"ID\":2,\"Title\":\"El pianista de la selva\",\"Description\":\"Re La Mi Do#\",\"Media\":\"../activitiesresources/img2.png\",\"TeacherID\":2},{\"ID\":3,\"Title\":\"Muerte accidental\",\"Description\":\"¿Por qué se fue? ¿Y por qué murió? ¿Por qué el Señor me la quitó? Se ha ido al cielo y para poder ir yo...\",\"Media\":\"../activitiesresources/ElUltimoBeso.mp3\",\"TeacherID\":3}];\r\nexport const HCN = [{\"ID\":1,\"TeacherID\":1},{\"ID\":2,\"TeacherID\":1},{\"ID\":3,\"TeacherID\":1},{\"ID\":4,\"TeacherID\":2},{\"ID\":5,\"TeacherID\":3}];\r\n\r\nexport const USERS = [];\r\n\r\n","import { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { put, takeLatest } from \"redux-saga/effects\";\r\n\r\nexport const actionTypes = {\r\n  Login: \"[Login] Action\",\r\n  Logout: \"[Logout] Action\",\r\n  Register: \"[Register] Action\",\r\n  UserRequested: \"[Request User] Action\",\r\n  UserLoaded: \"[Load User] Auth API\",\r\n  setSessionExpired: \"SET_SESSION_EXPIRED\"\r\n};\r\n\r\nconst initialAuthState = {\r\n  user: undefined,\r\n  authToken: undefined,\r\n  sessionExpired: false,\r\n};\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: \"v706-auth\", whitelist: [\"user\", \"authToken\"] },\r\n  (state = initialAuthState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.Login: {\r\n        const { authToken } = action.payload;\r\n\r\n        return { authToken, user: undefined };\r\n      }\r\n\r\n      case actionTypes.Register: {\r\n        const { authToken } = action.payload;\r\n\r\n        return { authToken, user: undefined };\r\n      }\r\n\r\n      case actionTypes.Logout: {\r\n        // TODO: Change this code. Actions in reducer aren't allowed.\r\n        return initialAuthState;\r\n      }\r\n\r\n      case actionTypes.UserLoaded: {\r\n        const { user } = action.payload;\r\n        return { ...state, user };\r\n      }\r\n\r\n      case actionTypes.setSessionExpired: {\r\n        return {...state, sessionExpired: true };\r\n      }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport const actions = {\r\n  login: (authToken) => ({ type: actionTypes.Login, payload: { authToken } }),\r\n  register: (authToken) => ({\r\n    type: actionTypes.Register,\r\n    payload: { authToken },\r\n  }),\r\n  logout: () => ({ type: actionTypes.Logout }),\r\n  requestUser: (user) => ({\r\n    type: actionTypes.UserRequested,\r\n    payload: { user },\r\n  }),\r\n  fulfillUser: (user) => ({ type: actionTypes.UserLoaded, payload: { user } }),\r\n  setUser: (user) => ({ type: actionTypes.SetUser, payload: { user } }),\r\n  setSessionExpired: () => ({ type: actionTypes.setSessionExpired }),\r\n};","import makeRequest from \"../../../const/Crud\";\r\nimport { getQueryParams } from \"../../../const\";\r\n\r\nexport const PATH_COURSES = \"/Courses\";\r\n\r\nexport const PATH_GET_ALL_COURSES = PATH_COURSES + \"/GetAllCourses\";\r\nexport const PATH_GET_COURSE = PATH_COURSES + \"/GetCourse\";\r\nexport const PATH_UPDATE_COURSE = PATH_COURSES + \"/UpdateCourse\";\r\nexport const PATH_CREATE_COURSE = PATH_COURSES + \"/CreateCourse\";\r\nexport const PATH_DELETE_COURSE = PATH_COURSES + \"/DeleteCourse\";\r\n\r\nexport const PATH_ADD_HCN_COURSE = PATH_COURSES + \"/AddHCN\";\r\nexport const PATH_GET_ALL_HCN_COURSE = PATH_COURSES + \"/GetAllHCN\";\r\nexport const PATH_REMOVE_HCN_COURSE = PATH_COURSES + \"/RemoveHCN\";\r\nexport const PATH_VISIBILITY_HCN_COURSE = PATH_COURSES + \"/VisibilityHCN\";\r\n\r\nexport const PATH_ADD_CC_COURSE = PATH_COURSES + \"/AddClinicalCase\";\r\nexport const PATH_GET_ALL_CC_COURSE = PATH_COURSES + \"/GetAllClinicalCases\";\r\nexport const PATH_REMOVE_CC_COURSE = PATH_COURSES + \"/RemoveClinicalCase\";\r\nexport const PATH_VISIBILITY_CC_COURSE =\r\n  PATH_COURSES + \"/VisibilityClinicalCase\";\r\n\r\nexport const PATH_ADD_STUDENT_COURSE = PATH_COURSES + \"/AddStudent\";\r\nexport const PATH_GET_ALL_STUDENTS_COURSE =\r\n  PATH_COURSES + \"/GetAllStudentsCourse\";\r\nexport const PATH_REMOVE_STUDENT_COURSE = PATH_COURSES + \"/RemoveStudent\";\r\n\r\nexport function getAllCourses(authToken) {\r\n  console.log(authToken);\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_COURSES,\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function getCourse(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_COURSE + getQueryParams(params),\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function updateStudent(props, authToken) {\r\n  return makeRequest({\r\n    path: PATH_UPDATE_COURSE,\r\n    method: \"POST\",\r\n    headers: new Headers({\r\n      Token: authToken,\r\n    }),\r\n    body: JSON.stringify({\r\n      ID: props.id,\r\n      Name: props.name,\r\n      Email: props.email,\r\n    }),\r\n  });\r\n}\r\n\r\nexport function createStudent(props, authToken) {\r\n  return makeRequest({\r\n    path: PATH_CREATE_COURSE,\r\n    method: \"POST\",\r\n    headers: new Headers({\r\n      Token: authToken,\r\n    }),\r\n    body: JSON.stringify({\r\n      ID: props.id,\r\n      Name: props.name,\r\n      Email: props.email,\r\n    }),\r\n  });\r\n}\r\n\r\nexport function deleteStudent(authToken) {\r\n  return makeRequest({\r\n    path: PATH_DELETE_COURSE,\r\n    method: \"DELETE\",\r\n    headers: new Headers({\r\n      Token: authToken,\r\n    }),\r\n  });\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport * as requestFromServer from \"./coursesCrud\";\r\nimport * as authRedux from \"../../Auth/_redux/authRedux\";\r\nimport * as annRedux from \"../../Announcements/_redux/annRedux\";\r\n\r\nimport { COURSES } from \"../../../const/data\";\r\n\r\nconst initCoursesState = {\r\n  coursesList: [],\r\n  currentCourse: {\r\n    id: undefined,\r\n    data: {},\r\n    announcementsList: [],\r\n    activitiesList: [],\r\n  }\r\n};\r\n\r\nconst actionTypes = {\r\n  set_list: \"SET_LIST\",\r\n  set_current_course: \"SET_CURRENT_COURSE\"\r\n};\r\n\r\nconst setCurrentCourse = (field, data) => dispatch => {\r\n  dispatch(coursesSlice.actions.setCurrentCourse({ type: actionTypes.setCurrentCourse, field, data }));\r\n};\r\n\r\n/**\r\n * Get all courses list\r\n */\r\nconst getCoursesList = () => async (dispatch, getState) => {\r\n  const userId = getState().auth.user.ID;\r\n  return requestFromServer.getAllCourses(undefined, getState().auth.authToken)\r\n  .then(data => {\r\n    dispatch(coursesSlice.actions.setCoursesList({ type: actionTypes.set_list, list: data\r\n      .filter(value => value.TeacherID === userId)\r\n      .sort((a, b) => new Date(b.CreationDate) - new Date(a.CreationDate)) \r\n    }));\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n    dispatch(coursesSlice.actions.setCoursesList({ type: actionTypes.set_list, list: COURSES }));\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * \r\n * @param {*} id \r\n */\r\nconst getCourseData = id => (dispatch, getState) => {\r\n  return requestFromServer.getCourse({ id }, getState().auth.authToken)\r\n  .then(data => {\r\n    dispatch(coursesSlice.actions.setCurrentCourse({ \r\n      type: actionTypes.set_current_course, field: \"data\", data \r\n    }));\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n    dispatch(coursesSlice.actions.setCurrentCourse({ \r\n      type: actionTypes.set_current_course, field: \"data\", data: COURSES.find(value => value.ID === id)\r\n    }));\r\n  });\r\n};\r\n\r\nexport const actions = {\r\n  setCurrentCourse,\r\n  getCoursesList,\r\n  getCourseData,\r\n};\r\n\r\nexport const getters = {\r\n  getCurrentCourse: () => () => {\r\n    \r\n  }\r\n};\r\n\r\nexport const coursesSlice = createSlice({\r\n  name: \"courses\",\r\n  initialState: initCoursesState,\r\n  reducers: {\r\n    setCoursesList: (state, action) => {\r\n      const { list } = action.payload;\r\n      state.coursesList = list;\r\n    },\r\n    setCurrentCourse: (state, action) => {\r\n      const { field, data } = action.payload;\r\n      state.currentCourse[field] = data;\r\n    },\r\n  }\r\n});","import makeRequest from \"../../../const/Crud\";\r\nimport { getQueryParams } from \"../../../const\";\r\n\r\nimport { PATH_COURSES } from \"../../Courses/_redux/coursesCrud\";\r\n\r\nexport const PATH_CCASES = \"/ClinicalCases\";\r\n\r\nexport const PATH_GET_ALL_CCASES = PATH_CCASES + \"/GetAllClinicalCases\";\r\nexport const PATH_GET_CCASE = PATH_CCASES + \"/GetClinicalCase\";\r\nexport const PATH_CREATE_CCASE = PATH_CCASES + \"/CreateClinicalCase\";\r\nexport const PATH_UPDATE_CCASE = PATH_CCASES + \"/UpdateClinicalCase\";\r\nexport const PATH_DELETE_CCASE = PATH_CCASES + \"/DeleteClinicalCase\";\r\n\r\nexport const PATH_GET_ALL_CCASES_BY_COURSE =\r\n  PATH_COURSES + \"/GetAllClinicalCases\";\r\nexport const PATH_ADD_CCASE_TO_COURSE = PATH_COURSES + \"/AddClinicalCase\";\r\nexport const PATH_REMOVE_CCASE_TO_COURSE = PATH_COURSES + \"/RemoveClinicalCase\";\r\n\r\nexport function getAllCCases(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_CCASES + getQueryParams(params),\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function getCCase(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_CCASE + getQueryParams(params),\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function getAllCCasesByCourse(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_CCASES_BY_COURSE + getQueryParams(params),\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function addCCaseToCourse(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_ADD_CCASE_TO_COURSE,\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n      body: JSON.stringify({\r\n        CourseID: props.CourseID,\r\n        ClinicalCaseID: props.ClinicalCaseID,\r\n        Displayable: 1,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return \"It works!\";\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function removeCCaseToCourse(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_REMOVE_CCASE_TO_COURSE,\r\n      method: \"DELETE\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n      body: JSON.stringify({\r\n        CourseID: props.CourseID,\r\n        ClinicalCaseID: props.ClinicalCaseID,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return \"It works!\";\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function createCCase(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_CREATE_CCASE,\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n      body: JSON.stringify({\r\n        Title: props.Title,\r\n        Description: props.Description,\r\n        Media: props.Media,\r\n        TeacherID: props.TeacherID,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return \"It works!\";\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function updateCCase(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_UPDATE_CCASE,\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n      body: JSON.stringify({\r\n        ID: props.ID,\r\n        Title: props.Title,\r\n        Description: props.Description,\r\n        Media: props.Media,\r\n        TeacherID: props.TeacherID,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return \"It works!\";\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function deleteCCase(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_DELETE_CCASE,\r\n      method: \"DELETE\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n      body: JSON.stringify({\r\n        ID: props.ID,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return \"It works!\";\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n","import React from \"react\";\r\n\r\n/**\r\n *\r\n * @param {Object} props\r\n * @param {String} props.title\r\n * @param {Array}  props.toolbar\r\n */\r\nfunction BaseSection(props) {\r\n  const { title, toolbar, component, children, className } = props;\r\n  return (\r\n    <div className={`container-fluid ${className ?? \"\"}`}>\r\n      {/* Header */}\r\n      <div className=\"row pb-3\">\r\n        <div className=\"col\">\r\n          <h3 className=\"text-dark\">{title}</h3>\r\n        </div>\r\n        {toolbar ? (\r\n          <div className=\"col text-right\">\r\n            {toolbar.map(({ title, ...props }, index) => (\r\n              <button {...props} key={index}>\r\n                {title}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          component && (\r\n            <div className=\"col text-right\">\r\n              {React.createElement(component)}\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BaseSection;\r\n","import React from \"react\";\r\n\r\nfunction getCardsList(list, size = 3) {\r\n  let ans = [];\r\n  for (let i = 0; i < list.length; i += size) {\r\n    ans.push(list.slice(i, i + size));\r\n  }\r\n  return ans;\r\n}\r\n\r\n/**\r\n * Base of a grid container\r\n * @param {Array} props.data\r\n */\r\nfunction CardGridContainer(props) {\r\n  const { data, size = 3, limit, children } = props;\r\n\r\n  return getCardsList(limit ? data.slice(0, limit) : data, size).map(\r\n    (row, i) => (\r\n      <div key={i} className=\"row mb-3\">\r\n        {row.map((value, j) => (\r\n          <div key={j} className={`col-${Math.ceil(12 / size)}`}>\r\n            {children(value)}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default CardGridContainer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialNotificationState = {\r\n  open: false,\r\n  message: \"\",\r\n  variant: \"success\",\r\n};\r\n\r\nconst actionTypes = {\r\n  set_notification: \"SET_NOTIFICATION\",\r\n};\r\n\r\nconst errorMessage = (message) => {\r\n  let msg = \"Ocurrió un error\";\r\n  if (message && message.length) {\r\n    msg = message;\r\n  }\r\n  return msg;\r\n};\r\n\r\nconst setNotificationField = (field, data) => (dispatch) => {\r\n  dispatch(\r\n    notificationSlice.actions.setNotificationField({\r\n      type: actionTypes.set_notification,\r\n      field,\r\n      data,\r\n    })\r\n  );\r\n};\r\n\r\nconst setNotification = (message, variant = \"success\") => (dispatch) => {\r\n  dispatch(\r\n    notificationSlice.actions.setNotification({\r\n      type: actionTypes.set_notification,\r\n      message: errorMessage(message),\r\n      variant,\r\n    })\r\n  );\r\n};\r\n\r\nexport const notificationActions = {\r\n  setNotificationField,\r\n  setNotification,\r\n};\r\n\r\nexport const notificationSlice = createSlice({\r\n  name: \"Notification\",\r\n  initialState: initialNotificationState,\r\n  reducers: {\r\n    setNotificationField: (state, action) => {\r\n      const { field, data } = action.payload;\r\n      state[field] = data;\r\n    },\r\n    setNotification: (state, action) => {\r\n      const { message, variant } = action.payload;\r\n      state.message = message;\r\n      state.variant = variant;\r\n      state.open = true;\r\n    },\r\n  },\r\n});\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { notificationActions } from \"app/components/_redux/notificationRedux\";\r\nimport * as requestFromServer from \"./ccasesCrud\";\r\nimport { CCASES } from \"../../../const/data\";\r\n\r\nconst initCCasesState = {\r\n  ccasesList: [],\r\n  ccasesListByCourse: [],\r\n};\r\n\r\nconst actionTypes = {\r\n  set_list: \"SET_LIST\",\r\n  set_list_by_course: \"SET_LIST_BY_COURSE\",\r\n};\r\n\r\nconst getCCasesList = () => (dispatch, getState) => {\r\n  const userId = getState().auth.user.ID;\r\n  return requestFromServer\r\n    .getAllCCases(undefined, getState().auth.authToken)\r\n    .then((data) => {\r\n      dispatch(\r\n        ccasesSlice.actions.setList({\r\n          type: actionTypes.set_list,\r\n          list: data.filter((value) => value.TeacherID === userId),\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n      dispatch(\r\n        ccasesSlice.actions.setList({\r\n          type: actionTypes.set_list,\r\n          list: CCASES,\r\n        })\r\n      );\r\n    });\r\n};\r\n\r\nconst getCCasesListByCourse = () => async (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer\r\n    .getAllCCasesByCourse({ id: CourseID }, getState().auth.authToken)\r\n    .then(async (data) => {\r\n      dispatch(\r\n        ccasesSlice.actions.setListByCourse({\r\n          type: actionTypes.set_list,\r\n          list: [],\r\n        })\r\n      );\r\n      await Promise.all(\r\n        data.map(async (value) => {\r\n          let ccase = await requestFromServer.getCCase({\r\n            id: value.ClinicalCaseID,\r\n          });\r\n          dispatch(\r\n            ccasesSlice.actions.addListByCourse({\r\n              type: actionTypes.set_list,\r\n              value: ccase,\r\n            })\r\n          );\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n      dispatch(\r\n        ccasesSlice.actions.sortListByCourse({\r\n          type: actionTypes.set_list,\r\n          sort_by: (a, b) =>\r\n            new Date(b.CreationDate) - new Date(a.CreationDate),\r\n        })\r\n      );\r\n    });\r\n};\r\n\r\nconst addCCaseToCourse = (id) => async (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer\r\n    .addCCaseToCourse(\r\n      { ClinicalCaseID: id, CourseID },\r\n      getState().auth.authToken\r\n    )\r\n    .then(() => {\r\n      dispatch(\r\n        notificationActions.setNotification(\"Caso Clínico añadido exitosamente\")\r\n      );\r\n      dispatch(getCCasesListByCourse());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nconst createCCase = (props) => async (dispatch, getState) => {\r\n  const userId = getState().auth.user.ID;\r\n  return requestFromServer\r\n    .createCCase({ ...props, TeacherID: userId }, getState().auth.authToken)\r\n    .then(() => {\r\n      dispatch(\r\n        notificationActions.setNotification(\"Caso Clínico creado exitosamente\")\r\n      );\r\n      dispatch(getCCasesList());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nconst updateCCase = (props) => (dispatch, getState) => {\r\n  const userId = getState().auth.user.ID;\r\n  return requestFromServer\r\n    .updateCCase({ ...props, TeacherID: userId }, getState().auth.authToken)\r\n    .then(() => {\r\n      dispatch(\r\n        notificationActions.setNotification(\r\n          \"Caso Clínico actualizado exitosamente\"\r\n        )\r\n      );\r\n      dispatch(getCCasesList());\r\n      dispatch(getCCasesListByCourse());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nconst deleteCCaseByCourse = (id) => (dispatch, getState) => {\r\n  return dispatch(removeCCase(id))\r\n    .then(() =>\r\n      requestFromServer.deleteCCase({ ID: id }, getState().auth.authToken)\r\n    )\r\n    .then(() => {\r\n      dispatch(\r\n        notificationActions.setNotification(\r\n          \"Caso Clínico eliminado exitosamente\"\r\n        )\r\n      );\r\n      dispatch(getCCasesList());\r\n      dispatch(getCCasesListByCourse());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nconst removeCCase = (id) => (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer\r\n    .removeCCaseToCourse(\r\n      { ClinicalCaseID: id, CourseID },\r\n      getState().auth.authToken\r\n    )\r\n    .then(() => {\r\n      dispatch(\r\n        notificationActions.setNotification(\r\n          \"Caso Clínico removido exitosamente\"\r\n        )\r\n      );\r\n      dispatch(getCCasesListByCourse());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nexport const actions = {\r\n  getCCasesListByCourse,\r\n  getCCasesList,\r\n  addCCaseToCourse,\r\n  createCCase,\r\n  updateCCase,\r\n  removeCCase,\r\n  deleteCCaseByCourse,\r\n};\r\n\r\nexport const ccasesSlice = createSlice({\r\n  name: \"clinical-cases\",\r\n  initialState: initCCasesState,\r\n  reducers: {\r\n    setList: (state, action) => {\r\n      const { list } = action.payload;\r\n      state.ccasesList = list;\r\n    },\r\n    setListByCourse: (state, action) => {\r\n      const { list } = action.payload;\r\n      state.ccasesListByCourse = list;\r\n    },\r\n    addListByCourse: (state, action) => {\r\n      const { value } = action.payload;\r\n      state.ccasesListByCourse.push(value);\r\n    },\r\n    sortListByCourse: (state, action) => {\r\n      const { sort_by } = action.payload;\r\n      state.ccasesListByCourse.sort(sort_by);\r\n    },\r\n  },\r\n});\r\n","import makeRequest from \"../../../const/Crud\";\r\nimport { getQueryParams } from \"../../../const\";\r\n\r\nimport { PATH_COURSES } from \"../../Courses/_redux/coursesCrud\";\r\n\r\nexport const PATH_HCN = \"/HCN\";\r\n\r\nexport const PATH_GET_ALL_HCN = PATH_HCN + \"/GetAllHCN\";\r\nexport const PATH_GET_HCN_INFO = PATH_HCN + \"/GetHCN\";\r\n\r\nexport const PATH_GET_ALL_HCN_BY_COURSE = PATH_COURSES + \"/GetAllHCN\";\r\nexport const PATH_ADD_HCN_TO_COURSE = PATH_COURSES + \"/AddHCN\";\r\n\r\nexport const PATH_CREATE_HCN = PATH_HCN + \"/CreateHCNMongo\";\r\nexport const PATH_GET_HCN = PATH_HCN + \"/GetHCNMongo\";\r\nexport const PATH_UPDATE_HCN = PATH_HCN + \"/UpdateHCNMongo\";\r\n\r\nexport function getAllHcn(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_HCN + getQueryParams(params),\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function getHcnInfo(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_HCN_INFO + getQueryParams(params),\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function getAllHcnByCourse(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_HCN_BY_COURSE + getQueryParams(params),\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function addHcnToCourse(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_ADD_HCN_TO_COURSE,\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n      body: JSON.stringify({\r\n        HCNID: props.HCNID,\r\n        CourseID: props.CourseID,\r\n        Displayable: 1,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return \"It works!\";\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function createHcn(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_CREATE_HCN,\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n      body: JSON.stringify(props),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function updateHcn(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_UPDATE_HCN,\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n      body: JSON.stringify(props),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n\r\nexport function getHcn(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_HCN + getQueryParams(params),\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Token: authToken,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((err) => reject(err.message));\r\n  });\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { notificationActions } from \"app/components/_redux/notificationRedux\";\r\nimport * as requestFromServer from \"./hcnCrud\";\r\nimport * as authRedux from \"../../Auth/_redux/authRedux\";\r\n\r\nimport { HCN } from \"../../../const/data\";\r\n\r\nconst initCCasesState = {\r\n  hcnList: [],\r\n  hcnListByCourse: [],\r\n};\r\n\r\nconst actionTypes = {\r\n  set_list: \"SET_LIST\",\r\n  set_list_by_course: \"SET_LIST_BY_COURSE\",\r\n};\r\n\r\nconst getHcnList = () => async (dispatch, getState) => {\r\n  const userId = getState().auth.user.ID;\r\n  return requestFromServer\r\n    .getAllHcn(undefined, getState().auth.authToken)\r\n    .then((data) => {\r\n      dispatch(\r\n        hcnSlice.actions.setList({\r\n          type: actionTypes.set_list,\r\n          list: data.filter((value) => value.TeacherID === userId),\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n      dispatch(\r\n        hcnSlice.actions.setList({ type: actionTypes.set_list, list: HCN })\r\n      );\r\n    });\r\n};\r\n\r\nconst getHcnListByCourse = () => async (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer\r\n    .getAllHcnByCourse({ id: CourseID }, getState().auth.authToken)\r\n    .then((data) => {\r\n      dispatch(\r\n        hcnSlice.actions.setListByCourse({\r\n          type: actionTypes.set_list,\r\n          list: data ?? [],\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nconst getHcn = (params) => async (dispatch, getState) => {\r\n  return requestFromServer\r\n    .getHcn(params, getState().auth.authToken)\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nconst createHcn = (props) => async (dispatch, getState) => {\r\n  const userId = getState().auth.user.ID;\r\n  return requestFromServer\r\n    .createHcn({ ...props, TeacherID: userId }, getState().auth.authToken)\r\n    .then(() => {\r\n      notificationActions.setNotification(\"HCN creada exitosamente\");\r\n      dispatch(getHcnListByCourse());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nconst updateHcn = (props) => async (dispatch, getState) => {\r\n  const userId = getState().auth.user.ID;\r\n  return requestFromServer\r\n    .updateHcn({ ...props, TeacherID: userId }, getState().auth.authToken)\r\n    .then(() => {\r\n      notificationActions.setNotification(\"HCN actualizada exitosamente\");\r\n      dispatch(getHcnListByCourse());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nconst addHcnToCourse = (id) => async (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer\r\n    .addHcnToCourse({ HCNID: id, CourseID }, getState().auth.authToken)\r\n    .then(() => {\r\n      notificationActions.setNotification(\"HCN añadida exitosamente\");\r\n      dispatch(getHcnListByCourse());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(notificationActions.setNotification(err.message, \"error\"));\r\n    });\r\n};\r\n\r\nexport const actions = {\r\n  getHcnList,\r\n  getHcnListByCourse,\r\n  getHcn,\r\n  createHcn,\r\n  updateHcn,\r\n  addHcnToCourse,\r\n};\r\n\r\nexport const hcnSlice = createSlice({\r\n  name: \"hcn\",\r\n  initialState: initCCasesState,\r\n  reducers: {\r\n    setList: (state, action) => {\r\n      const { list } = action.payload;\r\n      state.hcnList = list;\r\n    },\r\n    setListByCourse: (state, action) => {\r\n      const { list } = action.payload;\r\n      state.hcnListByCourse = list;\r\n    },\r\n    addListByCourse: (state, action) => {\r\n      const { value } = action.payload;\r\n      state.hcnListByCourse.push(value);\r\n    },\r\n  },\r\n});\r\n"],"sourceRoot":""}