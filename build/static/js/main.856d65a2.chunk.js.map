{"version":3,"sources":["app/modules/Announcements/_redux/annRedux.js","app/modules/Announcements/_redux/annCrud.js","app/modules/Activities/_redux/activitiesRedux.js","app/modules/Activities/_redux/activitiesCrud.js","app/const/index.js","theme/layout/components/AsideNavbar.js","theme/layout/utils/Content.jsx","theme/helpers/AssetsHelpers.js","theme/layout/components/CustomNavbar.jsx","theme/layout/utils/Header.jsx","app/pages/Home.jsx","app/pages/CoursesPage.jsx","app/BasePage.js","app/modules/ErrorPages/404.js","app/modules/ErrorPages/ErrorPage.js","app/modules/Auth/_redux/authCrud.js","app/modules/Auth/components/Login.jsx","app/pages/AuthPage.jsx","app/Routes.js","app/App.js","redux/rootReducer.js","redux/store.js","app/reportWebVitals.js","index.js","app/modules/Auth/_redux/authRedux.js","app/const/data.js","app/modules/Courses/_redux/coursesCrud.js","app/modules/Courses/_redux/coursesRedux.js","app/modules/ClinicalCases/_redux/ccasesCrud.js","app/components/UI/BaseSection.jsx","app/components/UI/CardGridContainer.jsx","app/const/Crud.js","app/modules/ClinicalCases/_redux/ccasesRedux.js","app/modules/HCN/_redux/hcnCrud.js","app/modules/HCN/_redux/hcnRedux.js"],"names":["actionTypes","getAnnouncementsList","dispatch","getState","params","CourseID","courses","currentCourse","id","auth","authToken","Promise","resolve","reject","makeRequest","path","PATH_ANNOUNCEMENTS","getQueryParams","method","headers","Headers","then","response","ok","Error","status","json","catch","err","message","data","annSlice","actions","setList","type","list","filter","value","sort","a","b","Date","CreationDate","console","log","ANNOUNCEMENTS","updateAnnouncement","props","body","JSON","stringify","ID","Title","Description","requestFromServer","createAnnouncement","deleteAnnouncement","createSlice","name","initialState","announcementslist","annState","loading","reducers","state","action","payload","getActivitiesList","userId","user","PATH_ACTIVITIES","activitiesSlice","TeacherID","ACTIVITIES","updateActivity","Type","LimitDate","ClinicalCaseID","HCNID","Difficulty","createActivity","deleteActivity","activitieslist","URL","filters","ans","first","str","base64ToBlob","base64","binaryString","window","atob","len","length","bytes","Uint8Array","i","charCodeAt","Blob","initialHcnValues","ConsultationReason","Interpretation","Feedback","GeneralData_ValorationDate","GeneralData_HCNNumber","GeneralData_AdmissionDate","GeneralData_Room","GeneralData_Interpretation","GeneralData_Feedback","PatientData_FullName","PatientData_Birthdate","PatientData_Gender","PatientData_Sex","PatientData_EPS","PatientData_Telephone","PatientData_Occupation","PatientData_CivilStatus","PatientData_Interpretation","PatientData_Feedback","Anthropometry_Interpretation","Anthropometry_Feedback","Anthropometry_Weight_Actual","Anthropometry_Weight_Usual","Anthropometry_Weight_Reference","Anthropometry_Weight_ChangeWeight","Anthropometry_Weight_Interpretation","Anthropometry_Weight_Feedback","Anthropometry_TricipitalFold_Value","Anthropometry_TricipitalFold_Interpretation","Anthropometry_TricipitalFold_Feedback","Anthropometry_BrachialPerimeter_Value","Anthropometry_BrachialPerimeter_Interpretation","Anthropometry_BrachialPerimeter_Feedback","Anthropometry_AbdominalPerimeter_Value","Anthropometry_AbdominalPerimeter_Interpretation","Anthropometry_AbdominalPerimeter_Feedback","Anthropometry_SubscapularFold_Value","Anthropometry_SubscapularFold_Interpretation","Anthropometry_SubscapularFold_Feedback","Anthropometry_Height_Value","Anthropometry_Height_Interpretation","Anthropometry_Height_Feedback","Anthropometry_Structure_Value","Anthropometry_Structure_Interpretation","Anthropometry_Structure_Feedback","Anthropometry_BMI_Value","Anthropometry_BMI_Interpretation","Anthropometry_BMI_Feedback","Biochemistry_Interpretation","Biochemistry_Feedback","AsideNavbar","className","data-menu-vertical","data-menu-scroll","data-menu-dropdown-timeout","aria-haspopup","to","icon","faBullhorn","faBriefcase","faClinicMedical","faNotesMedical","Content","children","aside","toAbsoluteUrl","pathname","process","ContentRoute","component","React","createElement","CustomNavbar","useSelector","useDispatch","Navbar","bg","variant","Brand","href","src","Nav","Link","Collapse","NavDropdown","title","Name","Divider","Item","onClick","authActions","logout","Header","Home","hcnList","hcn","ccasesList","clinicalCases","coursesList","BaseSection","CardGridContainer","limit","course","style","height","courseRedux","setCurrentCourse","faChalkboardTeacher","size","clinical_case","MongoID","CoursesPage","useEffect","getCoursesList","CoursesRoute","lazy","CCasesRoute","HcnRoute","BasePage","ccasesRedux","getCCasesList","hcnRedux","getHcnList","Suspense","fallback","exact","from","page404","ErrorsPage","PATH_LOGIN","username","password","Email","Password","token","initialValues","Login","useState","setLoading","LoginSchema","Yup","shape","min","max","required","formik","useFormik","validationSchema","onSubmit","values","setStatus","setSubmitting","setTimeout","login","Token","fulfillUser","borderTop","display","marginLeft","marginRight","alt","width","handleSubmit","isSubmitting","noValidate","Alert","severity","htmlFor","placeholder","getFieldProps","touched","errors","email","disabled","backgroundColor","CircularProgress","color","AuthPage","padding","Routes","isAuthorized","shallowEqual","App","store","persistor","basename","rootReducer","combineReducers","announcements","reducer","activities","coursesSlice","ccasesSlice","hcnSlice","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","configureStore","devTools","persistStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","Logout","Register","UserRequested","UserLoaded","setSessionExpired","initialAuthState","undefined","sessionExpired","persistReducer","storage","key","whitelist","register","requestUser","setUser","SetUser","COURSES","CCASES","HCN","PATH_COURSES","PATH_GET_ALL_COURSES","PATH_GET_COURSE","getAllCourses","getCourse","initCoursesState","announcementsList","activitiesList","set_list","set_current_course","field","setCoursesList","getCourseData","find","PATH_GET_ALL_CCASES_BY_COURSE","PATH_ADD_CCASE_TO_COURSE","PATH_REMOVE_CCASE_TO_COURSE","getAllCCases","PATH_CCASES","getCCase","getAllCCasesByCourse","addCCaseToCourse","Displayable","removeCCaseToCourse","createCCase","Media","updateCCase","deleteCCase","toolbar","map","index","push","slice","getCardsList","row","j","Math","ceil","others","controller","AbortController","config","abort","timeout","signal","myRequest","Request","fetch","getCCasesListByCourse","setListByCourse","all","ccase","addListByCourse","sortListByCourse","sort_by","removeCCase","deleteCCaseByCourse","ccasesListByCourse","PATH_GET_ALL_HCN_BY_COURSE","PATH_ADD_HCN_TO_COURSE","getAllHcn","PATH_HCN","getAllHcnByCourse","addHcnToCourse","createHcn","updateHcn","getHcn","getHcnListByCourse","hcnListByCourse"],"mappings":"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","file":"static/js/main.856d65a2.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport * as requestFromServer from \"./annCrud\";\r\nimport * as authRedux from \"../../Auth/_redux/authRedux\";\r\n\r\nimport { ANNOUNCEMENTS } from \"../../../const/data\";\r\n\r\nconst initAnnState = {\r\n  announcementslist: [],\r\n  annState: {\r\n    loading: false\r\n  }\r\n};\r\n\r\nconst actionTypes = {\r\n  set_list: \"SET_LIST\"\r\n};\r\n\r\n\r\nconst setList = list => dispatch => {\r\n  dispatch(annSlice.actions.setList({ type: actionTypes.set_list, list }));\r\n};\r\n\r\nconst getAnnouncementsList = () => (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer.getAllAnnouncements({ CourseID }, getState().auth.authToken)\r\n  .then(data => {\r\n    dispatch(annSlice.actions.setList({\r\n      type: actionTypes.set_list, \r\n      list: data\r\n        .filter(value => (value.CourseID === CourseID))\r\n        .sort((a, b) => new Date(b.CreationDate) - new Date(a.CreationDate))\r\n    }));\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n    dispatch(annSlice.actions.setList({ \r\n      type: actionTypes.set_list, list: ANNOUNCEMENTS.filter(value => value.CourseID === CourseID) \r\n    }));\r\n  });\r\n};\r\n\r\nconst updateAnnouncement = props => (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer.updateAnnouncement({ ...props, CourseID }, getState().auth.authToken)\r\n  .then(() => {\r\n    dispatch(getAnnouncementsList());\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nconst createAnnouncement = props => (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer.createAnnouncement({ ...props, CourseID }, getState().auth.authToken)\r\n  .then(() => {\r\n    dispatch(getAnnouncementsList());\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nconst deleteAnnouncement = id => (dispatch, getState) => {\r\n  return requestFromServer.deleteAnnouncement(id, getState().auth.authToken)\r\n  .then(() => {\r\n    dispatch(getAnnouncementsList());\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n    /*\r\n    dispatch(annSlice.actions.setList({ \r\n      type: actionTypes.set_list, list: ANNOUNCEMENTS.filter(value => value.ID !== id) \r\n    }));\r\n    */\r\n  });\r\n};\r\n\r\nexport const actions = {\r\n  setList,\r\n  getAnnouncementsList,\r\n  updateAnnouncement,\r\n  createAnnouncement,\r\n  deleteAnnouncement,\r\n};\r\n\r\nexport const annSlice = createSlice({\r\n  name: \"Adv\",\r\n  initialState: initAnnState,\r\n  reducers: {\r\n    setList: (state, action) => {\r\n      const { list } = action.payload;\r\n      state.announcementslist = list;\r\n    },\r\n  }\r\n});","import makeRequest from \"../../../const/Crud\";\r\nimport { getQueryParams } from \"../../../const\";\r\n\r\nexport const PATH_ANNOUNCEMENTS = \"/Announcements\";\r\n\r\nexport const PATH_GET_ALL_ANNOUNCEMENTS = PATH_ANNOUNCEMENTS + \"/GetAllAnnouncements\";\r\nexport const PATH_GET_ANNOUNCEMENT = PATH_ANNOUNCEMENTS + \"/GetAnnouncement\";\r\nexport const PATH_UPDATE_ANNOUNCEMENT = PATH_ANNOUNCEMENTS + \"/UpdateAnnouncement\";\r\nexport const PATH_CREATE_ANNOUNCEMENT = PATH_ANNOUNCEMENTS + \"/CreateAnnouncement\";\r\nexport const PATH_DELETE_ANNOUNCEMENT = PATH_ANNOUNCEMENTS + \"/DeleteAnnouncement\";\r\n\r\nexport function getAllAnnouncements(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_ANNOUNCEMENTS + getQueryParams(params), \r\n      method: \"GET\",\r\n      headers: new Headers(),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function getAnnouncement(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ANNOUNCEMENT + getQueryParams(params), \r\n      method: \"GET\",\r\n      headers: new Headers(),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function updateAnnouncement(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_UPDATE_ANNOUNCEMENT, \r\n      method: \"POST\",\r\n      headers: new Headers(),\r\n      body: JSON.stringify({\r\n        ID            : props.ID,\r\n        CourseID      : props.CourseID,\r\n        Title         : props.Title,\r\n        Description   : props.Description,\r\n        CreationDate  : props.CreationDate,\r\n      }),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function createAnnouncement(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_CREATE_ANNOUNCEMENT, \r\n      method: \"POST\",\r\n      headers: new Headers(),\r\n      body: JSON.stringify({\r\n        CourseID      : props.CourseID,\r\n        Title         : props.Title,\r\n        Description   : props.Description,\r\n        CreationDate  : props.CreationDate,\r\n      }),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function deleteAnnouncement(id, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_DELETE_ANNOUNCEMENT, \r\n      method: \"DELETE\",\r\n      headers: new Headers(),\r\n      body: JSON.stringify({\r\n        ID: id\r\n      })\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport * as requestFromServer from \"./activitiesCrud\";\r\nimport * as authRedux from \"../../Auth/_redux/authRedux\";\r\n\r\nimport { ACTIVITIES } from \"../../../const/data\";\r\n\r\nconst initActivitiesState = {\r\n  activitieslist: [],\r\n};\r\n\r\nconst actionTypes = {\r\n  set_list: \"SET_LIST\"\r\n};\r\n\r\nconst setList = list => dispatch => {\r\n  dispatch(activitiesSlice.actions.setList({ type: actionTypes.set_list, list }));\r\n};\r\n\r\nconst getActivitiesList = () => (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  const userId = getState().auth.user.ID;\r\n  return requestFromServer.getAllActivities({ CourseID }, getState().auth.authToken)\r\n    .then(data => {\r\n      dispatch(activitiesSlice.actions.setList({ \r\n        type: actionTypes.set_list, \r\n        list: data\r\n          .filter(value => (value.CourseID === CourseID && value.TeacherID === userId))\r\n          .sort((a, b) => new Date(b.CreationDate) - new Date(a.CreationDate))\r\n      }));\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch(activitiesSlice.actions.setList({ type: actionTypes.set_list, list: ACTIVITIES }));\r\n    });\r\n};\r\n\r\nconst updateActivity = props => (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer.updateActivity({ ...props, CourseID }, getState().auth.authToken)\r\n  .then(() => {\r\n    dispatch(getActivitiesList());\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nconst createActivity = props => (dispatch, getState) => {\r\n  console.log(\"creating\")\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer.createActivity({ ...props, CourseID }, getState().auth.authToken)\r\n  .then(() => {\r\n    dispatch(getActivitiesList());\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nconst deleteActivity = id => (dispatch, getState) => {\r\n  return requestFromServer.deleteActivity({ ID: id }, getState().auth.authToken)\r\n  .then(() => {\r\n    dispatch(getActivitiesList());\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nexport const actions = {\r\n  setList,\r\n  getActivitiesList,\r\n  updateActivity,\r\n  createActivity,\r\n  deleteActivity,\r\n};\r\n\r\nexport const activitiesSlice = createSlice({\r\n  name: \"Activies\",\r\n  initialState: initActivitiesState,\r\n  reducers: {\r\n    setList: (state, action) => {\r\n      const { list } = action.payload;\r\n      state.activitieslist = list;\r\n    },\r\n  }\r\n});","import makeRequest from \"../../../const/Crud\";\r\nimport { getQueryParams } from \"../../../const\";\r\n\r\nexport const PATH_ACTIVITIES = \"/Activities\";\r\n\r\nexport const PATH_GET_ALL_ACTIVITIES = PATH_ACTIVITIES + \"/GetAllActivities\";\r\nexport const PATH_GET_ACTIVITY = PATH_ACTIVITIES + \"/GetActivity\";\r\nexport const PATH_UPDATE_ACTIVITY = PATH_ACTIVITIES + \"/UpdateActivity\";\r\nexport const PATH_CREATE_ACTIVITY = PATH_ACTIVITIES + \"/CreateActivity\";\r\nexport const PATH_DELETE_ACTIVITY = PATH_ACTIVITIES + \"/DeleteActivity\";\r\n\r\nexport function getAllActivities(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_ACTIVITIES + getQueryParams(params), \r\n      method: \"GET\",\r\n      headers: new Headers(),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function getActivity(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ACTIVITY + getQueryParams(params), \r\n      method: \"GET\",\r\n      headers: new Headers(),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function updateActivity(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_UPDATE_ACTIVITY, \r\n      method: \"POST\",\r\n      headers: new Headers(),\r\n      body: JSON.stringify({\r\n        ID              : props.ID,\r\n        Title           : props.Title,\r\n        Description     : props.Description,\r\n        Type            : props.Type,\r\n        CreationDate    : props.CreationDate,\r\n        LimitDate       : props.LimitDate,\r\n        CourseID        : props.CourseID,\r\n        ClinicalCaseID  : props.ClinicalCaseID,\r\n        HCNID           : props.HCNID,\r\n        Difficulty      : props.Difficulty,\r\n      }),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function createActivity(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_CREATE_ACTIVITY, \r\n      method: \"POST\",\r\n      headers: new Headers(),\r\n      body: JSON.stringify({\r\n        Title           : props.Title,\r\n        Description     : props.Description,\r\n        Type            : props.Type,\r\n        CreationDate    : props.CreationDate,\r\n        LimitDate       : props.LimitDate,\r\n        CourseID        : props.CourseID,\r\n        ClinicalCaseID  : props.ClinicalCaseID,\r\n        HCNID           : props.HCNID,\r\n        Difficulty      : props.Difficulty,\r\n      }),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function deleteActivity(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_DELETE_ACTIVITY, \r\n      method: \"DELETE\",\r\n      headers: new Headers(),\r\n      body: JSON.stringify({\r\n        ID: props.ID\r\n      })\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return \"It Works!\";\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}","export const URL = \"http://104.44.129.29:3600\";\r\n\r\nexport function getQueryParams(filters) {\r\n  let ans = \"\";\r\n  let first = true;\r\n  for (const filter in filters) {\r\n    if (filters[filter] !== \"\") {\r\n      var str;\r\n      if (first) [str, first] = [\"?\", false];\r\n      else str = \"&\";\r\n      \r\n      switch (filter) {\r\n        default:\r\n          ans += str + `${filter}=${filters[filter]}`; \r\n          break;\r\n      }\r\n    }\r\n  }\r\n  return ans;\r\n}\r\n\r\nexport function base64ToBlob(base64) {\r\n  const binaryString = window.atob(base64);\r\n  const len = binaryString.length;\r\n  const bytes = new Uint8Array(len);\r\n  for (let i = 0; i < len; ++i) {\r\n    bytes[i] = binaryString.charCodeAt(i);\r\n  }\r\n  return new Blob([bytes], { type: 'application/pdf' });\r\n};\r\n\r\n\r\nexport const activityTypes = {\r\n  qualifying: \"Calificable\"\r\n};\r\n\r\nexport const initialHcnValues = {\r\n  ConsultationReason: \"\",\r\n  Interpretation: \"\",\r\n  Feedback: \"\",\r\n\r\n  // General data\r\n  GeneralData_ValorationDate: \"\",\r\n  GeneralData_HCNNumber: \"\",\r\n  GeneralData_AdmissionDate: \"\",\r\n  GeneralData_Room: \"\",\r\n  GeneralData_Interpretation: \"\",\r\n  GeneralData_Feedback: \"\",\r\n\r\n  // Patient Data\r\n  PatientData_FullName: \"\",\r\n  PatientData_Birthdate: \"\",\r\n  PatientData_Gender: \"\",\r\n  PatientData_Sex: \"\",\r\n  PatientData_EPS: \"\",\r\n  PatientData_Telephone: \"\",\r\n  PatientData_Occupation: \"\",\r\n  PatientData_CivilStatus: \"\",\r\n  PatientData_Interpretation: \"\",\r\n  PatientData_Feedback: \"\",\r\n\r\n  // Anthropometry\r\n  Anthropometry_Interpretation: \"\",\r\n  Anthropometry_Feedback: \"\",\r\n\r\n  Anthropometry_Weight_Actual: \"\",\r\n  Anthropometry_Weight_Usual: \"\",\r\n  Anthropometry_Weight_Reference: \"\",\r\n  Anthropometry_Weight_ChangeWeight: \"\",\r\n  Anthropometry_Weight_Interpretation: \"\",\r\n  Anthropometry_Weight_Feedback: \"\",\r\n\r\n  Anthropometry_TricipitalFold_Value: \"\",\r\n  Anthropometry_TricipitalFold_Interpretation: \"\",\r\n  Anthropometry_TricipitalFold_Feedback: \"\",\r\n\r\n  Anthropometry_BrachialPerimeter_Value: \"\",\r\n  Anthropometry_BrachialPerimeter_Interpretation: \"\",\r\n  Anthropometry_BrachialPerimeter_Feedback: \"\",\r\n\r\n  Anthropometry_AbdominalPerimeter_Value: \"\",\r\n  Anthropometry_AbdominalPerimeter_Interpretation: \"\",\r\n  Anthropometry_AbdominalPerimeter_Feedback: \"\",\r\n\r\n  Anthropometry_SubscapularFold_Value: \"\",\r\n  Anthropometry_SubscapularFold_Interpretation: \"\",\r\n  Anthropometry_SubscapularFold_Feedback: \"\",\r\n\r\n  Anthropometry_Height_Value: \"\",\r\n  Anthropometry_Height_Interpretation: \"\",\r\n  Anthropometry_Height_Feedback: \"\",\r\n\r\n  Anthropometry_Structure_Value: \"\",\r\n  Anthropometry_Structure_Interpretation: \"\",\r\n  Anthropometry_Structure_Feedback: \"\",\r\n\r\n  Anthropometry_BMI_Value: \"\",\r\n  Anthropometry_BMI_Interpretation: \"\",\r\n  Anthropometry_BMI_Feedback: \"\",\r\n\r\n  // Biochemistry\r\n  Biochemistry_Interpretation: \"\",\r\n  Biochemistry_Feedback: \"\",\r\n};","import React from \"react\";\r\nimport {NavLink}  from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBullhorn, faBriefcase, faClinicMedical, faNotesMedical } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction AsideNavbar() {\r\n  const menuItem = (icon, children) => (\r\n    <div>\r\n      <div className=\"col\">\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n    \r\n  return (\r\n    /* begin::aside-manu */\r\n    <div id=\"kt_aside\" className=\"sidebar d-flex flex-column flex-row-auto\">\r\n      <div id=\"kt_aside_menu\" className=\"my-4 scroll ps ps--active-y\" data-menu-vertical=\"1\" data-menu-scroll=\"1\" data-menu-dropdown-timeout=\"500\">\r\n        <ul className=\"nav\">\r\n          <li aria-haspopup=\"true\" className=\"nav-item\">\r\n            <NavLink to=\"announcements\" className=\"nav-link\"> \r\n              <FontAwesomeIcon icon={faBullhorn} className=\"nav-icon\" />\r\n              <span>Anuncios</span>\r\n            </NavLink>\r\n          </li>\r\n          <li aria-haspopup=\"true\" className=\"nav-item\">\r\n            <NavLink to=\"activities\" className=\"nav-link\">\r\n              <FontAwesomeIcon icon={faBriefcase} className=\"nav-icon\" />\r\n              <span className=\"menu-text\">Actividades</span>\r\n            </NavLink>\r\n          </li>\r\n          <li aria-haspopup=\"true\">\r\n            <NavLink to=\"clinical-cases\">\r\n              <FontAwesomeIcon icon={faClinicMedical} />\r\n              <span className=\"menu-text\">Casos clínicos</span>\r\n            </NavLink>\r\n          </li>\r\n          <li aria-haspopup=\"true\" className=\"nav-item\">\r\n            <NavLink to=\"hcn\" className=\"nav-link\">\r\n              <FontAwesomeIcon icon={faNotesMedical} className=\"nav-icon\" />\r\n              <span className=\"menu-text\">HCN</span>\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AsideNavbar;","import React from \"react\";\r\nimport AsideNavbar from \"../components/AsideNavbar\";\r\n\r\nexport function Content({ children, aside = true }) {\r\n  return (\r\n    <div className=\"d-flex flex-row\">\r\n      { aside && <AsideNavbar /> }\r\n      <div className={`content ${aside ? \"with-aside\" : ''}`}>\r\n        { children }\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Content } from \"../layout\";\r\n\r\nexport const toAbsoluteUrl = pathname => process.env.PUBLIC_URL + pathname;\r\n\r\nexport function ContentRoute({ component, aside = false, ...props }) {\r\n  return (\r\n    <Route {...props}>\r\n      <Content aside={aside}>\r\n        { React.createElement(component) }\r\n      </Content>\r\n    </Route>\r\n  );\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { toAbsoluteUrl } from \"../../helpers\";\r\nimport { actions as authActions } from \"../../../app/modules/Auth/_redux/authRedux\";\r\n\r\nfunction CustomNavbar() {\r\n  const { user } = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  \r\n  const handleLogout = () => dispatch(authActions.logout());\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" className=\"header navbar-default navbar-fixed-top fixed-top\">\r\n      <Navbar.Brand href=\"/home\">\r\n        <img className=\"logo\" src={toAbsoluteUrl(\"/media/logos/logo_v1.png\")}/>{' '}\r\n        Historias Clínicas Nutricionales\r\n      </Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"/courses\">Mis cursos</Nav.Link>\r\n      </Nav>\r\n      <Navbar.Collapse className=\"justify-content-end navbar-dropdown\">\r\n        <NavDropdown title={user.Name} id=\"collasible-nav-dropdown\">\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item>\r\n             <button className=\"btn btn-danger\" onClick={handleLogout}>Cerrar sesión</button>\r\n          </NavDropdown.Item>\r\n        </NavDropdown>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default CustomNavbar;","import React from \"react\";\r\nimport CustomNavbar from \"../components/CustomNavbar.jsx\";\r\n\r\nexport function Header({ children }) {\r\n  return (\r\n    <div className=\"d-flex flex-column\">\r\n      <CustomNavbar />\r\n      <div className=\"page\">\r\n        { children }\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChalkboardTeacher } from \"@fortawesome/free-solid-svg-icons\";\r\nimport BaseSection from \"app/components/UI/BaseSection\";\r\nimport CardGridContainer from \"app/components/UI/CardGridContainer\";\r\nimport { actions as courseRedux } from \"app/modules/Courses/_redux/coursesRedux\";\r\n\r\nfunction Home() {\r\n  const { hcnList } = useSelector((state) => state.hcn);\r\n  const { ccasesList } = useSelector((state) => state.clinicalCases);\r\n  const { coursesList } = useSelector((state) => state.courses);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCourse = (id) => {\r\n    dispatch(courseRedux.setCurrentCourse(\"id\", id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BaseSection title=\"Cursos\" className=\"mb-5\">\r\n        <CardGridContainer data={coursesList} limit={3}>\r\n          {(course) => (\r\n            <NavLink to=\"/courses\">\r\n              <div\r\n                className=\"card custom-card\"\r\n                style={{ height: \"150px\" }}\r\n                onClick={() => handleCourse(course.ID)}\r\n              >\r\n                <div className=\"d-flex card-body justify-content-center align-items-center\">\r\n                  <div className=\"d-flex flex-column align-items-center\">\r\n                    <FontAwesomeIcon icon={faChalkboardTeacher} size=\"3x\" />\r\n                    <span className=\"mt-1\">{course.Name}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </NavLink>\r\n          )}\r\n        </CardGridContainer>\r\n      </BaseSection>\r\n      <BaseSection title=\"Casos Clínicos\" className=\"mb-5\">\r\n        <CardGridContainer data={ccasesList} limit={3}>\r\n          {(clinical_case) => (\r\n            <NavLink to={`/clinical-cases/${clinical_case.ID}`}>\r\n              <div className=\"card custom-card\" style={{ height: \"150px\" }}>\r\n                <div className=\"d-flex card-body justify-content-center align-items-center\">\r\n                  <div className=\"d-flex flex-column align-items-center\">\r\n                    <span className=\"mt-1\">{clinical_case.Title}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </NavLink>\r\n          )}\r\n        </CardGridContainer>\r\n      </BaseSection>\r\n      <BaseSection title=\"Historias Clínicas Nutricionales\" className=\"pb-5\">\r\n        <CardGridContainer data={hcnList}>\r\n          {(hcn) => (\r\n            <NavLink to={`/hcn/update/${hcn.MongoID}`}>\r\n              <div className=\"card custom-card\" style={{ height: \"150px\" }}>\r\n                <div className=\"d-flex card-body justify-content-center align-items-center\">\r\n                  <div className=\"d-flex flex-column align-items-center\">\r\n                    <span className=\"mt-1\">{hcn.ID}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </NavLink>\r\n          )}\r\n        </CardGridContainer>\r\n      </BaseSection>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChalkboardTeacher } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport BaseSection from \"../components/UI/BaseSection\";\r\n\r\nimport { actions } from \"../modules/Courses/_redux/coursesRedux\";\r\nimport CardGridContainer from \"../components/UI/CardGridContainer\";\r\n\r\nfunction CoursesPage() {\r\n  const { coursesList } = useSelector((state) => state.courses);\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(actions.getCoursesList());\r\n  }, [dispatch]);\r\n\r\n  const handleCourse = (id) => {\r\n    dispatch(actions.setCurrentCourse(\"id\", id));\r\n  };\r\n\r\n  return (\r\n    <BaseSection title=\"Cursos\">\r\n      {/* Courses */}\r\n      <CardGridContainer data={coursesList}>\r\n        {(course) => (\r\n          <NavLink to=\"/courses\">\r\n            <div\r\n              className=\"card custom-card\"\r\n              style={{ height: \"150px\" }}\r\n              onClick={() => handleCourse(course.ID)}\r\n            >\r\n              <div className=\"d-flex card-body justify-content-center align-items-center\">\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <FontAwesomeIcon icon={faChalkboardTeacher} size=\"3x\" />\r\n                  <span className=\"mt-1\">{course.Name}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </NavLink>\r\n        )}\r\n      </CardGridContainer>\r\n    </BaseSection>\r\n  );\r\n}\r\n\r\nexport default CoursesPage;\r\n","import React from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ContentRoute } from \"../theme/helpers\";\r\nimport Home from \"./pages/Home.jsx\";\r\nimport CoursesPage from \"./pages/CoursesPage\";\r\nimport { actions as ccasesRedux } from \"./modules/ClinicalCases/_redux/ccasesRedux\"; \r\nimport { actions as hcnRedux } from \"./modules/HCN/_redux/hcnRedux\"; \r\nimport { actions as courseRedux } from \"app/modules/Courses/_redux/coursesRedux\";\r\n\r\nconst CoursesRoute = React.lazy(() =>\r\n  import(\"./modules/Courses/CoursesRoute\")\r\n);\r\n\r\nconst CCasesRoute = React.lazy(() =>\r\n  import(\"./modules/ClinicalCases/CCasesRoute.jsx\")\r\n);\r\n\r\nconst HcnRoute = React.lazy(() =>\r\n  import(\"./modules/HCN/HcnRoute.jsx\")\r\n);\r\n\r\nexport default function BasePage() {\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(ccasesRedux.getCCasesList());\r\n    dispatch(hcnRedux.getHcnList());\r\n    dispatch(courseRedux.getCoursesList());\r\n  }, []);\r\n\r\n  return (\r\n    <React.Suspense fallback={<h1>loading page...</h1>}>\r\n      <Switch>\r\n        <Redirect exact={true} from=\"/\" to=\"/home\" />\r\n        \r\n        <ContentRoute exact={true} path=\"/home\" component={Home} />\r\n        <ContentRoute path=\"/clinical-cases\" component={CCasesRoute} />\r\n        <ContentRoute path=\"/hcn\" component={HcnRoute} />\r\n\r\n        <ContentRoute exact={true} path=\"/courses/all\" component={CoursesPage} />\r\n        <ContentRoute path=\"/courses\" aside={true} component={CoursesRoute} />\r\n        \r\n        <Redirect to=\"/error/404\"/>\r\n      </Switch>\r\n    </React.Suspense>\r\n    \r\n  );\r\n}","import React from \"react\";\r\n\r\nexport default function page404() {\r\n  return (<h1>Page not found (404)</h1>);\r\n}","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport page404 from \"./404\";\r\n\r\nexport default function ErrorsPage() {\r\n  return (\r\n    <Switch>\r\n      <Redirect from=\"/error\" exact={true} to=\"/error/404\" />\r\n      <Route path=\"/error/404\" component={page404} />\r\n      <Redirect to=\"/error\"/>\r\n    </Switch>\r\n  );\r\n}\r\n","import makeRequest from \"../../../const/Crud\";\r\n\r\nexport const PATH_LOGIN = \"/Authentication/Login\";\r\n\r\nexport async function login(username, password) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_LOGIN, \r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        Email: username, Password: password\r\n      })\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n  switch (username) {\r\n    case \"juancmartinez\":\r\n      return new Promise((resolve, reject) => {\r\n        if(password === \"123\")\r\n          resolve({\r\n            token: \"ashjkqwertyui\",\r\n            user: { username: \"juancmartinez\", Name: \"Juan Carlos Martinez\" }\r\n          });\r\n        else reject(null);\r\n      });\r\n    case \"jhoanlozano\":\r\n      return new Promise((resolve, reject) => {\r\n        if(password === \"123\")\r\n          resolve({\r\n            token: \"ashjkqwertyui\",\r\n            user: { username: \"jhoanlozano\", Name: \"Jhoan Lozano\" }\r\n          });\r\n        else reject(null);\r\n      });\r\n    case \"xaviergarzon\":\r\n      return new Promise((resolve, reject) => {\r\n        if(password === \"123\")\r\n          resolve({\r\n            token: \"ashjkqwertyui\",\r\n            user: { username: \"xaviergarzon\", Name: \"Xavier Garzón\" }\r\n          });\r\n        else reject(null);\r\n      });  \r\n  \r\n    default:\r\n      return new Promise((resolve, reject) => {console.log(\"aqui\"); reject(\"Rechazado\")});\r\n  }\r\n  \r\n}","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { toAbsoluteUrl } from \"theme/helpers\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { login } from \"../_redux/authCrud\";\r\nimport { actions as authActions } from \"../_redux/authRedux\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst initialValues = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nfunction Login() {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .min(3, \"Mínimo 3 carácteres\")\r\n      .max(50, \"Máximo 50 carácteres\")\r\n      .required(\"Campo requerido\"),\r\n    password: Yup.string()\r\n      .min(3, \"Mínimo 3 carácteres\")\r\n      .max(50, \"Máximo 50 carácteres\")\r\n      .required(\"Campo requerido\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: LoginSchema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        login(values.username, values.password)\r\n          .then((response) => {\r\n            setLoading(false);\r\n            setSubmitting(false);\r\n            const { Token: token, ...user } = response;\r\n            dispatch(authActions.login(token));\r\n            dispatch(authActions.fulfillUser(user));\r\n          })\r\n          .catch(() => {\r\n            setLoading(false);\r\n            setSubmitting(false);\r\n            setStatus(\"Usuario o contraseña incorrectos\");\r\n          });\r\n      }, 1000);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"align-self-center\">\r\n      <div className=\"card col-12\" style={{ borderTop: \"5px solid #1B7B52\" }}>\r\n        <img\r\n          style={{\r\n            display: \"block\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n          }}\r\n          alt=\"HCN logo\"\r\n          src={toAbsoluteUrl(\"/media/logos/menta4.png\")}\r\n          width=\"100\"\r\n          height=\"100\"\r\n        />\r\n        <div className=\"card-body\">\r\n          <form\r\n            onSubmit={formik.handleSubmit}\r\n            className={`${\r\n              !formik.isSubmitting ? \"needs-validation\" : \"was-validated\"\r\n            }`}\r\n            noValidate\r\n          >\r\n            {formik.status && (\r\n              <Alert variant=\"standard\" severity=\"error\">\r\n                {formik.status}\r\n              </Alert>\r\n            )}\r\n            <label htmlFor=\"username\">Nombre de usuario</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              className=\"form-control\"\r\n              placeholder=\"Nombre de usuario\"\r\n              {...formik.getFieldProps(\"username\")}\r\n            />\r\n            {formik.touched.username && formik.errors.username ? (\r\n              <small>{formik.errors.email}</small>\r\n            ) : null}\r\n\r\n            <label htmlFor=\"username\" className=\"mt-2\">\r\n              Contraseña\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Contraseña\"\r\n              {...formik.getFieldProps(\"password\")}\r\n            />\r\n            {formik.touched.password && formik.errors.password ? (\r\n              <div className=\"fv-plugins-message-container\">\r\n                <div className=\"fv-help-block\">{formik.errors.password}</div>\r\n              </div>\r\n            ) : null}\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-secondary font-weight-bold my-3\"\r\n              disabled={formik.isSubmitting}\r\n              style={{ backgroundColor: \"#343a40\" }}\r\n            >\r\n              <span>Iniciar sesión</span>\r\n              {loading && (\r\n                <CircularProgress className=\"ml-2\" size={10} color=\"inherit\" />\r\n              )}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Redirect, Switch, Route } from \"react-router-dom\";\r\nimport Login from \"../modules/Auth/components/Login\";\r\n\r\nfunction AuthPage() {\r\n  return (\r\n    <div \r\n      className=\"container-fluid\"\r\n      style={{\r\n        //backgroundColor: \"#1B7B52\",\r\n        backgroundColor: \"#E5E5E5\",\r\n        height: \"100vh\",\r\n        padding: \"0px\"\r\n      }}\r\n      >\r\n        <div className=\"d-flex flex-column flex-row-fluid p-3 overflow-hidden h-100\">\r\n        {/* col-4 d-flex justify-content-center align-self-center */}\r\n          <div className=\"d-flex flex-column-fluid flex-center justify-content-center align-self-center h-100\">\r\n            <Switch>\r\n              <Route path=\"/auth/login\" component={Login} />\r\n              <Redirect from=\"/auth\" exact={true} to=\"/auth/login\" />\r\n              <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthPage;","import React from \"react\";\r\nimport { Redirect, Switch, Route } from \"react-router-dom\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Header } from \"../theme/layout\";\r\nimport BasePage from \"./BasePage\";\r\nimport ErrorsPage from \"./modules/ErrorPages/ErrorPage\";\r\nimport AuthPage from \"./pages/AuthPage\";\r\n\r\nexport default function Routes() {\r\n  const { isAuthorized } = useSelector(\r\n    ({ auth }) => ({\r\n      isAuthorized: auth.user != null,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  return (\r\n    <Switch>\r\n      { !isAuthorized ? (\r\n        <Route>\r\n          <AuthPage />\r\n        </Route>\r\n      ) : (\r\n        <Redirect from=\"/auth\" to=\"/\" />\r\n      ) }\r\n\r\n      <Route path=\"/error\" component={ErrorsPage}/>\r\n\r\n      { !isAuthorized ? (\r\n        /*Redirect to `/auth` when user is not authorized*/\r\n        <Redirect to=\"/auth/login\" />\r\n      ) : (\r\n        <Header>\r\n          <BasePage />\r\n        </Header>\r\n      )}\r\n    </Switch>\r\n  );\r\n}","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Routes from \"./Routes\";\r\n\r\nimport './App.css';\r\n\r\nfunction App({ store, persistor, basename }) {\r\n  console.log(basename);\r\n  return (\r\n    /* Provide Redux store */\r\n    <Provider store={store}>\r\n      {/* Asynchronously persist redux stores and show `SplashScreen` while it's loading. */}\r\n      <PersistGate persistor={persistor}>\r\n        <BrowserRouter basename={basename}>\r\n          <Routes /> \r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {combineReducers} from \"redux\";\r\n\r\nimport * as auth from \"../app/modules/Auth/_redux/authRedux\";\r\nimport { coursesSlice } from \"../app/modules/Courses/_redux/coursesRedux\";\r\nimport { annSlice } from \"../app/modules/Announcements/_redux/annRedux\";\r\nimport { activitiesSlice } from \"../app/modules/Activities/_redux/activitiesRedux\";\r\nimport { ccasesSlice } from \"../app/modules/ClinicalCases/_redux/ccasesRedux\";\r\nimport { hcnSlice } from \"../app/modules/HCN/_redux/hcnRedux\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  auth: auth.reducer,\r\n  announcements: annSlice.reducer,\r\n  activities: activitiesSlice.reducer,\r\n  courses: coursesSlice.reducer,\r\n  clinicalCases: ccasesSlice.reducer,\r\n  hcn: hcnSlice.reducer,\r\n});","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport {persistStore} from \"redux-persist\";\r\nimport {rootReducer} from \"./rootReducer\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    immutableCheck: false,\r\n    serializableCheck: false,\r\n    thunk: true\r\n  }),\r\n  sagaMiddleware\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== \"production\"\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport store, { persistor } from \"./redux/store\";\r\nimport reportWebVitals from './app/reportWebVitals';\r\n\r\nconst { PUBLIC_URL } = process.env;\r\n\r\nReactDOM.render(\r\n    <App store={store} persistor={persistor} basename={PUBLIC_URL} />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { put, takeLatest } from \"redux-saga/effects\";\r\n\r\nexport const actionTypes = {\r\n  Login: \"[Login] Action\",\r\n  Logout: \"[Logout] Action\",\r\n  Register: \"[Register] Action\",\r\n  UserRequested: \"[Request User] Action\",\r\n  UserLoaded: \"[Load User] Auth API\",\r\n  setSessionExpired: \"SET_SESSION_EXPIRED\"\r\n};\r\n\r\nconst initialAuthState = {\r\n  user: undefined,\r\n  authToken: undefined,\r\n  sessionExpired: false,\r\n};\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: \"v706-auth\", whitelist: [\"user\", \"authToken\"] },\r\n  (state = initialAuthState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.Login: {\r\n        const { authToken } = action.payload;\r\n\r\n        return { authToken, user: undefined };\r\n      }\r\n\r\n      case actionTypes.Register: {\r\n        const { authToken } = action.payload;\r\n\r\n        return { authToken, user: undefined };\r\n      }\r\n\r\n      case actionTypes.Logout: {\r\n        // TODO: Change this code. Actions in reducer aren't allowed.\r\n        return initialAuthState;\r\n      }\r\n\r\n      case actionTypes.UserLoaded: {\r\n        const { user } = action.payload;\r\n        return { ...state, user };\r\n      }\r\n\r\n      case actionTypes.setSessionExpired: {\r\n        return {...state, sessionExpired: true };\r\n      }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport const actions = {\r\n  login: (authToken) => ({ type: actionTypes.Login, payload: { authToken } }),\r\n  register: (authToken) => ({\r\n    type: actionTypes.Register,\r\n    payload: { authToken },\r\n  }),\r\n  logout: () => ({ type: actionTypes.Logout }),\r\n  requestUser: (user) => ({\r\n    type: actionTypes.UserRequested,\r\n    payload: { user },\r\n  }),\r\n  fulfillUser: (user) => ({ type: actionTypes.UserLoaded, payload: { user } }),\r\n  setUser: (user) => ({ type: actionTypes.SetUser, payload: { user } }),\r\n  setSessionExpired: () => ({ type: actionTypes.setSessionExpired }),\r\n};","export const ACTIVITIES = [{\"ID\":1,\"Title\":\"Primera tarea rey, matrices dispersas\",\"Description\":\"Re easy pri, solo busquen en Google.\",\"Type\":\"Calificable\",\"CreationDate\":\"2021-01-08 12:00:00\",\"LimitDate\":\"2021-01-10 12:00:00\",\"CourseID\":1,\"ClinicalCaseID\":3,\"HCNID\":1,\"Difficulty\":3},{\"ID\":2,\"Title\":\"Actividad de prueba\",\"Description\":\"Por favor ignoren esta actividad, gracias.\",\"Type\":\"Prueba\",\"CreationDate\":\"2021-01-09 11:43:21\",\"LimitDate\":\"2021-01-19 10:59:59\",\"CourseID\":2,\"ClinicalCaseID\":2,\"HCNID\":2,\"Difficulty\":1}];\r\nexport const STUDENTS = [{\"ID\":1,\"Name\":\"Daniel Gómez Sermeño\",\"Email\":\"goma@email.com\"},{\"ID\":2,\"Name\":\"Xavier Garzón López\",\"Email\":\"xavgar9@email.com\"},{\"ID\":3,\"Name\":\"Juan F. Gil\",\"Email\":\"transfer10@email.com\"},{\"ID\":4,\"Name\":\"Edgar Silva\",\"Email\":\"ednosil@email.com\"},{\"ID\":5,\"Name\":\"Juanita María Parra Villamíl\",\"Email\":\"juanitamariap@email.com\"},{\"ID\":6,\"Name\":\"Sebastián Rodríguez Osorio Silva\",\"Email\":\"sebasrosorio98@email.com\"},{\"ID\":7,\"Name\":\"Andrés Felipe Garcés\",\"Email\":\"andylukast@email.com\"}];\r\nexport const COURSES = [{\"ID\":1,\"TeacherID\":1,\"Name\":\"Introducción a Matlab\",\"CreationDate\":\"2021-01-01 12:00:00\"},{\"ID\":2,\"TeacherID\":1,\"Name\":\"Matlab avanzado\",\"CreationDate\":\"2021-01-01 12:20:08\"},{\"ID\":3,\"TeacherID\":2,\"Name\":\"Clases de piano\",\"CreationDate\":\"2021-01-06 15:21:50\"},{\"ID\":4,\"TeacherID\":3,\"Name\":\"Manejando en Cali\",\"CreationDate\":\"2021-01-05 11:40:12\"}];\r\nexport const ANNOUNCEMENTS = [{\"ID\":1,\"CourseID\":1,\"Title\":\"¡Bienvenidos al curso!\",\"Description\":\"Este es un curso básico de Matlab. LOS AMO.\",\"CreationDate\":\"2021-01-19 03:33:48\"},{\"ID\":2,\"CourseID\":1,\"Title\":\"¡Primera tarea!\",\"Description\":\"Resuelvan una matriz dispersa 100x100.\",\"CreationDate\":\"2021-01-19 03:33:48\"},{\"ID\":3,\"CourseID\":1,\"Title\":\"Hola a todos\",\"Description\":\"Hola muchachos, los quiero mucho. Estudien bye!\",\"CreationDate\":\"2021-01-19 03:33:48\"},{\"ID\":4,\"CourseID\":1,\"Title\":\"Material guía\",\"Description\":\"Busquen en Youtube. \\\"Accidentes de tránsito graves sin censura.\\\"\",\"CreationDate\":\"2021-01-19 03:33:48\"}];\r\nexport const FEEDBACKS = [{\"ID\":1,\"ActivityID\":1,\"StudentID\":1},{\"ID\":2,\"ActivityID\":1,\"StudentID\":2},{\"ID\":3,\"ActivityID\":1,\"StudentID\":3},{\"ID\":4,\"ActivityID\":1,\"StudentID\":4},{\"ID\":5,\"ActivityID\":1,\"StudentID\":5},{\"ID\":6,\"ActivityID\":1,\"StudentID\":6},{\"ID\":7,\"ActivityID\":1,\"StudentID\":7}];\r\n\r\n\r\nexport const CCASES = [{\"ID\":1,\"Title\":\"El joven parchado\",\"Description\":\"Benjamón era un joven con IMC PARCHADO.\",\"Media\":\"../activitiesresources/img1.png\",\"TeacherID\":1},{\"ID\":2,\"Title\":\"El pianista de la selva\",\"Description\":\"Re La Mi Do#\",\"Media\":\"../activitiesresources/img2.png\",\"TeacherID\":2},{\"ID\":3,\"Title\":\"Muerte accidental\",\"Description\":\"¿Por qué se fue? ¿Y por qué murió? ¿Por qué el Señor me la quitó? Se ha ido al cielo y para poder ir yo...\",\"Media\":\"../activitiesresources/ElUltimoBeso.mp3\",\"TeacherID\":3}];\r\nexport const HCN = [{\"ID\":1,\"TeacherID\":1},{\"ID\":2,\"TeacherID\":1},{\"ID\":3,\"TeacherID\":1},{\"ID\":4,\"TeacherID\":2},{\"ID\":5,\"TeacherID\":3}];\r\n\r\nexport const USERS = [];\r\n\r\n","import makeRequest from \"../../../const/Crud\";\r\nimport { getQueryParams } from \"../../../const\";\r\n\r\nexport const PATH_COURSES = \"/Courses\";\r\n\r\nexport const PATH_GET_ALL_COURSES = PATH_COURSES + \"/GetAllCourses\";\r\nexport const PATH_GET_COURSE = PATH_COURSES + \"/GetCourse\";\r\nexport const PATH_UPDATE_COURSE = PATH_COURSES + \"/UpdateCourse\";\r\nexport const PATH_CREATE_COURSE = PATH_COURSES + \"/CreateCourse\";\r\nexport const PATH_DELETE_COURSE = PATH_COURSES + \"/DeleteCourse\";\r\n\r\nexport const PATH_ADD_HCN_COURSE = PATH_COURSES + \"/AddHCN\";\r\nexport const PATH_GET_ALL_HCN_COURSE = PATH_COURSES + \"/GetAllHCN\";\r\nexport const PATH_REMOVE_HCN_COURSE = PATH_COURSES + \"/RemoveHCN\";\r\nexport const PATH_VISIBILITY_HCN_COURSE = PATH_COURSES + \"/VisibilityHCN\";\r\n\r\nexport const PATH_ADD_CC_COURSE = PATH_COURSES + \"/AddClinicalCase\";\r\nexport const PATH_GET_ALL_CC_COURSE = PATH_COURSES + \"/GetAllClinicalCases\";\r\nexport const PATH_REMOVE_CC_COURSE = PATH_COURSES + \"/RemoveClinicalCase\";\r\nexport const PATH_VISIBILITY_CC_COURSE = PATH_COURSES + \"/VisibilityClinicalCase\";\r\n\r\nexport const PATH_ADD_STUDENT_COURSE = PATH_COURSES + \"/AddStudent\";\r\nexport const PATH_GET_ALL_STUDENTS_COURSE = PATH_COURSES + \"/GetAllStudentsCourse\";\r\nexport const PATH_REMOVE_STUDENT_COURSE = PATH_COURSES + \"/RemoveStudent\";\r\n\r\n\r\nexport function getAllCourses(authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_COURSES, \r\n      method: \"GET\",\r\n      headers: new Headers(),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function getCourse(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_COURSE + getQueryParams(params), \r\n      method: \"GET\",\r\n      headers: new Headers(),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function updateStudent(props, authToken) {\r\n  return makeRequest({\r\n    path: PATH_UPDATE_COURSE, \r\n    method: \"POST\",\r\n    headers: new Headers(),\r\n    body: JSON.stringify({\r\n      ID    : props.id,\r\n      Name  : props.name,\r\n      Email : props.email,\r\n    }),\r\n  });\r\n}\r\n\r\nexport function createStudent(props, authToken) { \r\n  return makeRequest({\r\n    path: PATH_CREATE_COURSE, \r\n    method: \"POST\",\r\n    headers: new Headers(),\r\n    body: JSON.stringify({\r\n      ID    : props.id,\r\n      Name  : props.name,\r\n      Email : props.email,\r\n    }),\r\n  });\r\n}\r\n\r\nexport function deleteStudent(authToken) {\r\n  return makeRequest({\r\n    path: PATH_DELETE_COURSE, \r\n    method: \"DELETE\",\r\n    headers: new Headers(),\r\n  });\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport * as requestFromServer from \"./coursesCrud\";\r\nimport * as authRedux from \"../../Auth/_redux/authRedux\";\r\nimport * as annRedux from \"../../Announcements/_redux/annRedux\";\r\n\r\nimport { COURSES } from \"../../../const/data\";\r\n\r\nconst initCoursesState = {\r\n  coursesList: [],\r\n  currentCourse: {\r\n    id: undefined,\r\n    data: {},\r\n    announcementsList: [],\r\n    activitiesList: [],\r\n  }\r\n};\r\n\r\nconst actionTypes = {\r\n  set_list: \"SET_LIST\",\r\n  set_current_course: \"SET_CURRENT_COURSE\"\r\n};\r\n\r\nconst setCurrentCourse = (field, data) => dispatch => {\r\n  dispatch(coursesSlice.actions.setCurrentCourse({ type: actionTypes.setCurrentCourse, field, data }));\r\n};\r\n\r\n/**\r\n * Get all courses list\r\n */\r\nconst getCoursesList = () => async (dispatch, getState) => {\r\n  const userId = getState().auth.user.ID;\r\n  return requestFromServer.getAllCourses(undefined, getState().auth.authToken)\r\n  .then(data => {\r\n    dispatch(coursesSlice.actions.setCoursesList({ type: actionTypes.set_list, list: data\r\n      .filter(value => value.TeacherID === userId)\r\n      .sort((a, b) => new Date(b.CreationDate) - new Date(a.CreationDate)) \r\n    }));\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n    dispatch(coursesSlice.actions.setCoursesList({ type: actionTypes.set_list, list: COURSES }));\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * \r\n * @param {*} id \r\n */\r\nconst getCourseData = id => (dispatch, getState) => {\r\n  return requestFromServer.getCourse({ id }, getState().auth.authToken)\r\n  .then(data => {\r\n    dispatch(coursesSlice.actions.setCurrentCourse({ \r\n      type: actionTypes.set_current_course, field: \"data\", data \r\n    }));\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n    dispatch(coursesSlice.actions.setCurrentCourse({ \r\n      type: actionTypes.set_current_course, field: \"data\", data: COURSES.find(value => value.ID === id)\r\n    }));\r\n  });\r\n};\r\n\r\nexport const actions = {\r\n  setCurrentCourse,\r\n  getCoursesList,\r\n  getCourseData,\r\n};\r\n\r\nexport const getters = {\r\n  getCurrentCourse: () => () => {\r\n    \r\n  }\r\n};\r\n\r\nexport const coursesSlice = createSlice({\r\n  name: \"courses\",\r\n  initialState: initCoursesState,\r\n  reducers: {\r\n    setCoursesList: (state, action) => {\r\n      const { list } = action.payload;\r\n      state.coursesList = list;\r\n    },\r\n    setCurrentCourse: (state, action) => {\r\n      const { field, data } = action.payload;\r\n      state.currentCourse[field] = data;\r\n    },\r\n  }\r\n});","import makeRequest from \"../../../const/Crud\";\r\nimport { getQueryParams } from \"../../../const\";\r\n\r\nimport { PATH_COURSES } from \"../../Courses/_redux/coursesCrud\";\r\n\r\nexport const PATH_CCASES = \"/ClinicalCases\";\r\n\r\nexport const PATH_GET_ALL_CCASES = PATH_CCASES + \"/GetAllClinicalCases\";\r\nexport const PATH_GET_CCASE = PATH_CCASES + \"/GetClinicalCase\";\r\nexport const PATH_CREATE_CCASE = PATH_CCASES + \"/CreateClinicalCase\";\r\nexport const PATH_UPDATE_CCASE = PATH_CCASES + \"/UpdateClinicalCase\";\r\nexport const PATH_DELETE_CCASE = PATH_CCASES + \"/DeleteClinicalCase\";\r\n\r\nexport const PATH_GET_ALL_CCASES_BY_COURSE = PATH_COURSES + \"/GetAllClinicalCases\";\r\nexport const PATH_ADD_CCASE_TO_COURSE = PATH_COURSES + \"/AddClinicalCase\";\r\nexport const PATH_REMOVE_CCASE_TO_COURSE = PATH_COURSES + \"/RemoveClinicalCase\";\r\n\r\n\r\nexport function getAllCCases(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_CCASES + getQueryParams(params), \r\n      method: \"GET\",\r\n      headers: new Headers(),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function getCCase(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_CCASE + getQueryParams(params), \r\n      method: \"GET\",\r\n      headers: new Headers(),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function getAllCCasesByCourse(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_CCASES_BY_COURSE + getQueryParams(params), \r\n      method: \"GET\",\r\n      headers: new Headers(),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function addCCaseToCourse(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_ADD_CCASE_TO_COURSE, \r\n      method: \"POST\",\r\n      headers: new Headers(),\r\n      body: JSON.stringify({\r\n        CourseID: props.CourseID,\r\n        ClinicalCaseID: props.ClinicalCaseID,\r\n        Displayable: 1,\r\n      })\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return \"It works!\";\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function removeCCaseToCourse(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_REMOVE_CCASE_TO_COURSE, \r\n      method: \"DELETE\",\r\n      headers: new Headers(),\r\n      body: JSON.stringify({\r\n        CourseID:       props.CourseID,\r\n        ClinicalCaseID: props.ClinicalCaseID,\r\n      })\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return \"It works!\";\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function createCCase(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_CREATE_CCASE, \r\n      method: \"POST\",\r\n      headers: new Headers(),\r\n      body: JSON.stringify({\r\n        Title:        props.Title,\r\n        Description:  props.Description,\r\n        Media:        props.Media,\r\n        TeacherID:    props.TeacherID\r\n      })\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return \"It works!\";\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function updateCCase(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_UPDATE_CCASE, \r\n      method: \"POST\",\r\n      headers: new Headers(),\r\n      body: JSON.stringify({\r\n        ID:           props.ID,\r\n        Title:        props.Title,\r\n        Description:  props.Description,\r\n        Media:        props.Media,\r\n        TeacherID:    props.TeacherID\r\n      })\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return \"It works!\";\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function deleteCCase(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_DELETE_CCASE, \r\n      method: \"DELETE\",\r\n      headers: new Headers(),\r\n      body: JSON.stringify({\r\n        ID: props.ID\r\n      })\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return \"It works!\";\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}","import React from \"react\";\r\n\r\n/**\r\n *\r\n * @param {Object} props\r\n * @param {String} props.title\r\n * @param {Array}  props.toolbar\r\n */\r\nfunction BaseSection(props) {\r\n  const { title, toolbar, component, children, className } = props;\r\n  return (\r\n    <div className={`container-fluid${className ? \" \" + className : \"\"}`}>\r\n      {/* Header */}\r\n      <div className=\"row pb-3\">\r\n        <div className=\"col\">\r\n          <h3 className=\"text-dark\">{title}</h3>\r\n        </div>\r\n        {toolbar ? (\r\n          <div className=\"col text-right\">\r\n            {toolbar.map(({ title, ...props }, index) => (\r\n              <button {...props} key={index}>\r\n                {title}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          component && (\r\n            <div className=\"col text-right\">\r\n              {React.createElement(component)}\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BaseSection;\r\n","import React from \"react\";\r\n\r\nfunction getCardsList(list, size = 3) {\r\n  let ans = [];\r\n  for (let i = 0; i < list.length; i += size) {\r\n    ans.push(list.slice(i, i + size));\r\n  }\r\n  return ans;\r\n}\r\n\r\n/**\r\n * Base of a grid container\r\n * @param {Array} props.data\r\n */\r\nfunction CardGridContainer(props) {\r\n  const { data, size = 3, limit, children } = props;\r\n\r\n  return getCardsList(limit ? data.slice(0, limit) : data, size).map(\r\n    (row, i) => (\r\n      <div key={i} className=\"row mb-3\">\r\n        {row.map((value, j) => (\r\n          <div key={j} className={`col-${Math.ceil(12 / size)}`}>\r\n            {children(value)}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default CardGridContainer;\r\n","import { URL } from \".\";\r\n\r\n/**\r\n * \r\n * @param {string} path \r\n */\r\nfunction makeRequest({ path, method, headers, ...others }) {\r\n  const timeout = 2000;\r\n  const controller = new AbortController();\r\n  const id = setTimeout(() => controller.abort(), timeout);\r\n  let config = {\r\n    method,\r\n    headers: headers ? headers : new Headers(),\r\n    timeout,\r\n    signal: controller.signal,\r\n    ...others\r\n  };\r\n  let myRequest = new Request(URL + path, config);\r\n  return fetch(myRequest);\r\n}\r\n\r\nexport default makeRequest;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport * as requestFromServer from \"./ccasesCrud\";\r\nimport * as authRedux from \"../../Auth/_redux/authRedux\";\r\n\r\nimport { CCASES } from \"../../../const/data\";\r\n\r\nconst initCCasesState = {\r\n  ccasesList: [],\r\n  ccasesListByCourse: [],\r\n};\r\n\r\nconst actionTypes = {\r\n  set_list: \"SET_LIST\",\r\n  set_list_by_course: \"SET_LIST_BY_COURSE\",\r\n};\r\n\r\nconst getCCasesList = () => (dispatch, getState) => {\r\n  const userId = getState().auth.user.ID;\r\n  return requestFromServer.getAllCCases(undefined, getState().auth.authToken)\r\n  .then(data => {\r\n    dispatch(ccasesSlice.actions.setList(\r\n      { type: actionTypes.set_list, list: data.filter(value => value.TeacherID === userId) }\r\n    ));\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n    dispatch(ccasesSlice.actions.setList({ type: actionTypes.set_list, list: CCASES }));\r\n  });\r\n};\r\n\r\nconst getCCasesListByCourse = () => (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer.getAllCCasesByCourse({ id: CourseID }, getState().auth.authToken)\r\n  .then(async data => {\r\n    dispatch(ccasesSlice.actions.setListByCourse({ type: actionTypes.set_list, list: [] }));\r\n    await Promise.all(data.map(async value => {\r\n      let ccase = await requestFromServer.getCCase({ id: value.ClinicalCaseID });\r\n      dispatch(ccasesSlice.actions.addListByCourse({ type: actionTypes.set_list, value: ccase }));\r\n    }))\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n    dispatch(ccasesSlice.actions.sortListByCourse({ \r\n      type: actionTypes.set_list, \r\n      sort_by: (a, b) => new Date(b.CreationDate) - new Date(a.CreationDate)\r\n    }));\r\n  });\r\n};\r\n\r\nconst addCCaseToCourse = id => (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer.addCCaseToCourse({ ClinicalCaseID: id, CourseID }, getState().auth.authToken)\r\n  .then(() => {\r\n    dispatch(getCCasesListByCourse());\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nconst createCCase = props => (dispatch, getState) => {\r\n  const userId = getState().auth.user.ID;\r\n  return requestFromServer.createCCase({ ...props, TeacherID: userId }, getState().auth.authToken)\r\n  .then(() => {\r\n    dispatch(getCCasesList());\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nconst updateCCase = props => (dispatch, getState) => {\r\n  const userId = getState().auth.user.ID;\r\n  return requestFromServer.updateCCase({ ...props, TeacherID: userId }, getState().auth.authToken)\r\n  .then(() => {\r\n    dispatch(getCCasesList());\r\n    dispatch(getCCasesListByCourse());\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nconst deleteCCaseByCourse = id => (dispatch, getState) => {\r\n  return dispatch(removeCCase(id))\r\n  .then(() => requestFromServer.deleteCCase({ ID: id }, getState().auth.authToken))\r\n  .then(() => {\r\n    dispatch(getCCasesList());\r\n    dispatch(getCCasesListByCourse());\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nconst removeCCase = id => (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer.removeCCaseToCourse({ ClinicalCaseID: id, CourseID }, getState().auth.authToken)\r\n  .then(() => {\r\n    dispatch(getCCasesListByCourse());\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nexport const actions = {\r\n  getCCasesListByCourse,\r\n  getCCasesList,\r\n  addCCaseToCourse,\r\n  createCCase,\r\n  updateCCase,\r\n  removeCCase,\r\n  deleteCCaseByCourse\r\n};\r\n\r\nexport const ccasesSlice = createSlice({\r\n  name: \"clinical-cases\",\r\n  initialState: initCCasesState,\r\n  reducers: {\r\n    setList: (state, action) => {\r\n      const { list } = action.payload;\r\n      state.ccasesList = list;\r\n    },\r\n    setListByCourse: (state, action) => {\r\n      const { list } = action.payload;\r\n      state.ccasesListByCourse = list;\r\n    },\r\n    addListByCourse: (state, action) => {\r\n      const { value } = action.payload;\r\n      state.ccasesListByCourse.push(value);\r\n    },\r\n    sortListByCourse: (state, action) => {\r\n      const { sort_by } = action.payload;\r\n      state.ccasesListByCourse.sort(sort_by);\r\n    },\r\n  }\r\n});","import makeRequest from \"../../../const/Crud\";\r\nimport { getQueryParams } from \"../../../const\";\r\n\r\nimport { PATH_COURSES } from \"../../Courses/_redux/coursesCrud\";\r\n\r\nexport const PATH_HCN = \"/HCN\";\r\n\r\nexport const PATH_GET_ALL_HCN = PATH_HCN + \"/GetAllHCN\";\r\nexport const PATH_GET_HCN_INFO = PATH_HCN + \"/GetHCN\";\r\n\r\nexport const PATH_GET_ALL_HCN_BY_COURSE = PATH_COURSES + \"/GetAllHCN\";\r\nexport const PATH_ADD_HCN_TO_COURSE = PATH_COURSES + \"/AddHCN\";\r\n\r\nexport const PATH_CREATE_HCN = PATH_HCN + \"/CreateHCNMongo\";\r\nexport const PATH_GET_HCN = PATH_HCN + \"/GetHCNMongo\";\r\nexport const PATH_UPDATE_HCN = PATH_HCN + \"/UpdateHCNMongo\";\r\n\r\nexport function getAllHcn(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_HCN + getQueryParams(params), \r\n      method: \"GET\",\r\n      headers: new Headers(),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function getHcnInfo(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_HCN_INFO + getQueryParams(params), \r\n      method: \"GET\",\r\n      headers: new Headers(),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function getAllHcnByCourse(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_ALL_HCN_BY_COURSE + getQueryParams(params), \r\n      method: \"GET\",\r\n      headers: new Headers(),\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function addHcnToCourse(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_ADD_HCN_TO_COURSE, \r\n      method: \"POST\",\r\n      headers: new Headers(),\r\n      body: JSON.stringify({\r\n        HCNID: props.HCNID,\r\n        CourseID: props.CourseID,\r\n        Displayable: 1,\r\n      })\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return \"It works!\";\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function createHcn(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_CREATE_HCN, \r\n      method: \"POST\",\r\n      headers: new Headers(),\r\n      body: JSON.stringify(props)\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function updateHcn(props, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_UPDATE_HCN, \r\n      method: \"POST\",\r\n      headers: new Headers(),\r\n      body: JSON.stringify(props)\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\nexport function getHcn(params, authToken) {\r\n  return new Promise((resolve, reject) => {\r\n    makeRequest({\r\n      path: PATH_GET_HCN + getQueryParams(params),\r\n      method: \"GET\",\r\n      headers: new Headers()\r\n    })\r\n    .then(response => {\r\n      if(!response.ok) throw new Error(response.status);\r\n      return response.json();\r\n    })\r\n    .then(response => resolve(response))\r\n    .catch(err => reject(err.message)); \r\n  });\r\n}\r\n\r\n\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport * as requestFromServer from \"./hcnCrud\";\r\nimport * as authRedux from \"../../Auth/_redux/authRedux\";\r\n\r\nimport { HCN } from \"../../../const/data\";\r\n\r\nconst initCCasesState = {\r\n  hcnList: [],\r\n  hcnListByCourse: [],\r\n};\r\n\r\nconst actionTypes = {\r\n  set_list: \"SET_LIST\",\r\n  set_list_by_course: \"SET_LIST_BY_COURSE\",\r\n};\r\n\r\nconst getHcnList = () => async (dispatch, getState) => {\r\n  return requestFromServer.getAllHcn(undefined, getState().auth.authToken)\r\n  .then(data => {\r\n    dispatch(hcnSlice.actions.setList({ type: actionTypes.set_list, list: data }));\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n    dispatch(hcnSlice.actions.setList({ type: actionTypes.set_list, list: HCN }));\r\n  });\r\n};\r\n\r\nconst getHcnListByCourse = () => async (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer.getAllHcnByCourse({ id: CourseID }, getState().auth.authToken)\r\n  .then(data => {\r\n    dispatch(hcnSlice.actions.setListByCourse({ type: actionTypes.set_list, list: data }))\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nconst getHcn = params => async (dispatch, getState) => {\r\n  return requestFromServer.getHcn(params, getState().auth.authToken)\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nconst createHcn = props => async (dispatch, getState) => {\r\n  const userId = getState().auth.user.ID;\r\n  return requestFromServer.createHcn({...props, TeacherID: userId}, getState().auth.authToken)\r\n  .then(() => {\r\n    dispatch(getHcnListByCourse());\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nconst updateHcn = props => async (dispatch, getState) => {\r\n  const userId = getState().auth.user.ID;\r\n  return requestFromServer.updateHcn({...props, TeacherID: userId}, getState().auth.authToken)\r\n  .then(() => {\r\n    dispatch(getHcnListByCourse());\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nconst addHcnToCourse = id => async (dispatch, getState) => {\r\n  const CourseID = getState().courses.currentCourse.id;\r\n  return requestFromServer.addHcnToCourse({ HCNID: id, CourseID }, getState().auth.authToken)\r\n  .then(() => {\r\n    dispatch(getHcnListByCourse());\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n};\r\n\r\nexport const actions = {\r\n  getHcnList,\r\n  getHcnListByCourse,\r\n  getHcn,\r\n  createHcn,\r\n  updateHcn,\r\n  addHcnToCourse\r\n};\r\n\r\nexport const hcnSlice = createSlice({\r\n  name: \"hcn\",\r\n  initialState: initCCasesState,\r\n  reducers: {\r\n    setList: (state, action) => {\r\n      const { list } = action.payload;\r\n      state.hcnList = list;\r\n    },\r\n    setListByCourse: (state, action) => {\r\n      const { list } = action.payload;\r\n      state.hcnListByCourse = list;\r\n    },\r\n    addListByCourse: (state, action) => {\r\n      const { value } = action.payload;\r\n      state.hcnListByCourse.push(value);\r\n    },\r\n  }\r\n});"],"sourceRoot":""}